<?xml version="1.0"?>
<doc>
  <assembly>
    <name>devDept.Eyeshot.Control.Win.v2023</name>
  </assembly>
  <members>
    <member name="T:devDept.Eyeshot.Control.Viewport">
      <summary>
            Viewport settings.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.UpdateWorkspace">
      <summary>
            Updates the workspace control in both desing-time and run-time mode.
            If necessary adjust near and far planes to accomodate origin
            symbols of various sizes.            
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.InstanceId">
      <summary>
            For internal use only. Gets the instance id for the logging.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.#ctor(System.Drawing.Point,System.Drawing.Size,devDept.Eyeshot.Control.BackgroundSettings,devDept.Eyeshot.Camera,devDept.Eyeshot.Control.ToolBar,devDept.Eyeshot.Control.Legend[],devDept.Eyeshot.displayType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,devDept.Eyeshot.Control.Grid,devDept.Eyeshot.Control.OriginSymbol,System.Boolean,devDept.Eyeshot.Control.RotateSettings,devDept.Eyeshot.Control.ZoomSettings,devDept.Eyeshot.Control.PanSettings,devDept.Eyeshot.Control.NavigationSettings)">
      <summary>
            Standard constructor (WinForms).
            </summary>
      <param name="location">Coordinates of the upper-left corner of the viewport relative to the upper-left corner of its container</param>
      <param name="size">Size of the viewport in pixels</param>
      <param name="background">Background settings</param>
      <param name="camera">Camera settings</param>
      <param name="toolBar">Toolbar settings</param>
      <param name="legends">Legends array</param>
      <param name="displayMode">Display mode</param>
      <param name="showLabels">Labels visibility status</param>
      <param name="showVertices">If true, the model vertices are displayed</param>
      <param name="showVertexIndices">If true and <see cref="P:devDept.Eyeshot.Control.Viewport.ShowVertices" /> is also true the model vertex indices are displayed</param>
      <param name="autoHideLabels">If true, labels are hidden automatically when behind the model</param>
      <param name="grid">Planar grid settings</param>
      <param name="originSymbol">Origin symbol settings</param>
      <param name="sortLabels">If true, sorts the Labels using the depth from the viewer</param>
      <param name="rotate">Rotate settings</param>
      <param name="zoom">Zoom settings</param>
      <param name="pan">Pan settings</param>
      <param name="navigation">Navigation settings</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.#ctor(System.Drawing.Point,System.Drawing.Size,devDept.Eyeshot.Control.BackgroundSettings,devDept.Eyeshot.Camera,devDept.Eyeshot.Control.ToolBar,devDept.Eyeshot.Control.Legend[],devDept.Eyeshot.displayType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,devDept.Eyeshot.Control.Grid,devDept.Eyeshot.Control.OriginSymbol,System.Boolean,devDept.Eyeshot.Control.RotateSettings,devDept.Eyeshot.Control.ZoomSettings,devDept.Eyeshot.Control.PanSettings,devDept.Eyeshot.Control.NavigationSettings,devDept.Eyeshot.viewType)">
      <summary>
            Standard constructor (WinForms).
            </summary>
      <param name="location">Coordinates of the upper-left corner of the viewport relative to the upper-left corner of its container</param>
      <param name="size">Size of the viewport in pixels</param>
      <param name="background">Background settings</param>
      <param name="camera">Camera settings</param>
      <param name="toolBar">Toolbar settings</param>
      <param name="legends">Legends array</param>
      <param name="displayMode">Display mode</param>
      <param name="showLabels">Labels visibility status</param>
      <param name="showVertices">If true, the model vertices are displayed</param>
      <param name="showVertexIndices">If true and <see cref="P:devDept.Eyeshot.Control.Viewport.ShowVertices" /> is also true the model vertex indices are displayed</param>
      <param name="autoHideLabels">If true, labels are hidden automatically when behind the model</param>
      <param name="grid">Planar grid settings</param>
      <param name="originSymbol">Origin symbol settings</param>
      <param name="sortLabels">If true, sorts the Labels using the depth from the viewer</param>
      <param name="rotate">Rotate settings</param>
      <param name="zoom">Zoom settings</param>
      <param name="pan">Pan settings</param>
      <param name="navigation">Navigation settings</param>
      <param name="initialView">Initial View</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.#ctor(System.Drawing.Point,System.Drawing.Size,devDept.Eyeshot.Control.BackgroundSettings,devDept.Eyeshot.Camera,devDept.Eyeshot.Control.ToolBar[],devDept.Eyeshot.Control.Legend[],devDept.Eyeshot.displayType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,devDept.Eyeshot.Control.Grid,devDept.Eyeshot.Control.OriginSymbol,System.Boolean,devDept.Eyeshot.Control.RotateSettings,devDept.Eyeshot.Control.ZoomSettings,devDept.Eyeshot.Control.PanSettings,devDept.Eyeshot.Control.NavigationSettings,devDept.Eyeshot.viewType)">
      <summary>
            Standard constructor (WinForms).
            </summary>
      <param name="location">Coordinates of the upper-left corner of the viewport relative to the upper-left corner of its container</param>
      <param name="size">Size of the viewport in pixels</param>
      <param name="background">Background settings</param>
      <param name="camera">Camera settings</param>
      <param name="toolBars">Toolbars settings</param>
      <param name="legends">Legends array</param>
      <param name="displayMode">Display mode</param>
      <param name="showLabels">Labels visibility status</param>
      <param name="showVertices">If true, the model vertices are displayed</param>
      <param name="showVertexIndices">If true and <see cref="P:devDept.Eyeshot.Control.Viewport.ShowVertices" /> is also true the model vertex indices are displayed</param>
      <param name="autoHideLabels">If true, labels are hidden automatically when behind the model</param>
      <param name="grid">Planar grid settings</param>
      <param name="originSymbol">Origin symbol settings</param>
      <param name="sortLabels">If true, sorts the Labels using the depth from the viewer</param>
      <param name="rotate">Rotate settings</param>
      <param name="zoom">Zoom settings</param>
      <param name="pan">Pan settings</param>
      <param name="navigation">Navigation settings</param>
      <param name="initialView">Initial View</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.#ctor(System.Drawing.Point,System.Drawing.Size,devDept.Eyeshot.Control.BackgroundSettings,devDept.Eyeshot.Camera,devDept.Eyeshot.Control.ToolBar,devDept.Eyeshot.Control.Legend[],devDept.Eyeshot.displayType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,devDept.Eyeshot.Control.Grid,devDept.Eyeshot.Control.OriginSymbol,System.Boolean,devDept.Eyeshot.Control.RotateSettings,devDept.Eyeshot.Control.ZoomSettings,devDept.Eyeshot.Control.PanSettings)">
      <summary>
            Standard constructor (WinForms).
            </summary>
      <param name="location">Coordinates of the upper-left corner of the viewport relative to the upper-left corner of its container</param>
      <param name="size">Size of the viewport in pixels</param>
      <param name="background">Background settings</param>
      <param name="camera">Camera settings</param>
      <param name="toolBar">Toolbar settings</param>
      <param name="legends">Legends array</param>
      <param name="displayMode">Display mode</param>
      <param name="showLabels">Labels visibility status</param>
      <param name="showVertices">If true, the model vertices are displayed</param>
      <param name="showVertexIndices">If true and <see cref="P:devDept.Eyeshot.Control.Viewport.ShowVertices" /> is also true the model vertex indices are displayed</param>
      <param name="autoHideLabels">If true, labels are hidden automatically when behind the model</param>
      <param name="grid">Planar grid settings</param>
      <param name="originSymbol">Origin symbol settings</param>
      <param name="sortLabels">If true, sorts the Labels using the depth from the viewer</param>
      <param name="rotate">Rotate settings</param>
      <param name="zoom">Zoom settings</param>
      <param name="pan">Pan settings</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.#ctor(System.Drawing.Point,System.Drawing.Size,devDept.Eyeshot.Control.BackgroundSettings,devDept.Eyeshot.Camera,devDept.Eyeshot.Control.ToolBar,devDept.Eyeshot.Control.Legend[],devDept.Eyeshot.displayType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,devDept.Eyeshot.Control.Grid,devDept.Eyeshot.Control.OriginSymbol,System.Boolean,devDept.Eyeshot.Control.RotateSettings,devDept.Eyeshot.Control.ZoomSettings,devDept.Eyeshot.Control.PanSettings,devDept.Eyeshot.viewType)">
      <summary>
            Standard constructor (WinForms).
            </summary>
      <param name="location">Coordinates of the upper-left corner of the viewport relative to the upper-left corner of its container</param>
      <param name="size">Size of the viewport in pixels</param>
      <param name="background">Background settings</param>
      <param name="camera">Camera settings</param>
      <param name="toolBar">Toolbar settings</param>
      <param name="legends">Legends array</param>
      <param name="displayMode">Display mode</param>
      <param name="showLabels">Labels visibility status</param>
      <param name="showVertices">If true, the model vertices are displayed</param>
      <param name="showVertexIndices">If true and <see cref="P:devDept.Eyeshot.Control.Viewport.ShowVertices" /> is also true the model vertex indices are displayed</param>
      <param name="autoHideLabels">If true, labels are hidden automatically when behind the model</param>
      <param name="grid">Planar grid settings</param>
      <param name="originSymbol">Origin symbol settings</param>
      <param name="sortLabels">If true, sorts the Labels using the depth from the viewer</param>
      <param name="rotate">Rotate settings</param>
      <param name="zoom">Zoom settings</param>
      <param name="pan">Pan settings</param>
      <param name="initialView">Initial View</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.#ctor(System.Drawing.Point,System.Drawing.Size,devDept.Eyeshot.Control.BackgroundSettings,devDept.Eyeshot.Camera,devDept.Eyeshot.Control.ToolBar,devDept.Eyeshot.Control.Legend[],devDept.Eyeshot.displayType,System.Boolean,System.Boolean,System.Boolean,devDept.Eyeshot.Control.Grid,devDept.Eyeshot.Control.OriginSymbol,System.Boolean,devDept.Eyeshot.Control.RotateSettings,devDept.Eyeshot.Control.ZoomSettings,devDept.Eyeshot.Control.PanSettings)">
      <summary>
            Standard constructor (WinForms).
            </summary>
      <param name="location">Coordinates of the upper-left corner of the viewport relative to the upper-left corner of its container</param>
      <param name="size">Size of the viewport in pixels</param>
      <param name="background">Background settings</param>
      <param name="camera">Camera settings</param>
      <param name="toolBar">Toolbar settings</param>
      <param name="legends">Legends array</param>
      <param name="displayMode">Display mode</param>
      <param name="showLabels">Labels visibility status</param>
      <param name="showVertices">If true, the model vertices are displayed</param>
      <param name="autoHideLabels">If true, labels are hidden automatically when behind the model</param>
      <param name="grid">Planar grid settings</param>
      <param name="originSymbol">Origin symbol settings</param>
      <param name="sortLabels">If true, sorts the Labels using the depth from the viewer</param>
      <param name="rotate">Rotate settings</param>
      <param name="zoom">Zoom settings</param>
      <param name="pan">Pan settings</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.#ctor(System.Drawing.Point,System.Drawing.Size,devDept.Eyeshot.Control.BackgroundSettings,devDept.Eyeshot.Camera,devDept.Eyeshot.Control.ToolBar,devDept.Eyeshot.Control.Legend[],devDept.Eyeshot.displayType,System.Boolean,System.Boolean,System.Boolean,devDept.Eyeshot.Control.Grid,devDept.Eyeshot.Control.OriginSymbol,System.Boolean,devDept.Eyeshot.Control.RotateSettings,devDept.Eyeshot.Control.ZoomSettings,devDept.Eyeshot.Control.PanSettings,devDept.Eyeshot.viewType)">
      <summary>
            Standard constructor (WinForms).
            </summary>
      <param name="location">Coordinates of the upper-left corner of the viewport relative to the upper-left corner of its container</param>
      <param name="size">Size of the viewport in pixels</param>
      <param name="background">Background settings</param>
      <param name="camera">Camera settings</param>
      <param name="toolBar">Toolbar settings</param>
      <param name="legends">Legends array</param>
      <param name="displayMode">Display mode</param>
      <param name="showLabels">Labels visibility status</param>
      <param name="showVertices">If true, the model vertices are displayed</param>
      <param name="autoHideLabels">If true, labels are hidden automatically when behind the model</param>
      <param name="grid">Planar grid settings</param>
      <param name="originSymbol">Origin symbol settings</param>
      <param name="sortLabels">If true, sorts the Labels using the depth from the viewer</param>
      <param name="rotate">Rotate settings</param>
      <param name="zoom">Zoom settings</param>
      <param name="pan">Pan settings</param>
      <param name="initialView">Initial View</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.#ctor(System.Drawing.Point,System.Drawing.Size,devDept.Eyeshot.Control.BackgroundSettings,devDept.Eyeshot.Camera,devDept.Eyeshot.Control.ToolBar,devDept.Eyeshot.Control.Legend[],devDept.Eyeshot.displayType,System.Boolean,System.Boolean,System.Boolean,devDept.Eyeshot.Control.Grid[],devDept.Eyeshot.Control.OriginSymbol,System.Boolean,devDept.Eyeshot.Control.RotateSettings,devDept.Eyeshot.Control.ZoomSettings,devDept.Eyeshot.Control.PanSettings)">
      <summary>
            Standard constructor (WinForms).
            </summary>
      <param name="location">Coordinates of the upper-left corner of the viewport relative to the upper-left corner of its container</param>
      <param name="size">Size of the viewport in pixels</param>
      <param name="background">Background settings</param>
      <param name="camera">Camera settings</param>
      <param name="toolBar">Toolbar settings</param>
      <param name="legends">Legends array</param>
      <param name="displayMode">Display mode</param>
      <param name="showLabels">Labels visibility status</param>
      <param name="showVertices">If true, the model vertices are displayed</param>
      <param name="autoHideLabels">If true, labels are hidden automatically when behind the model</param>
      <param name="grids">Planar grid settings</param>
      <param name="originSymbol">Origin symbol settings</param>
      <param name="sortLabels">If true, sorts the Labels using the depth from the viewer</param>
      <param name="rotate">Rotate settings</param>
      <param name="zoom">Zoom settings</param>
      <param name="pan">Pan settings</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.#ctor(System.Drawing.Point,System.Drawing.Size,devDept.Eyeshot.Control.BackgroundSettings,devDept.Eyeshot.Camera,devDept.Eyeshot.Control.ToolBar,devDept.Eyeshot.Control.Legend[],devDept.Eyeshot.displayType,System.Boolean,System.Boolean,System.Boolean,devDept.Eyeshot.Control.Grid[],devDept.Eyeshot.Control.OriginSymbol,System.Boolean,devDept.Eyeshot.Control.RotateSettings,devDept.Eyeshot.Control.ZoomSettings,devDept.Eyeshot.Control.PanSettings,devDept.Eyeshot.viewType)">
      <summary>
            Standard constructor (WinForms).
            </summary>
      <param name="location">Coordinates of the upper-left corner of the viewport relative to the upper-left corner of its container</param>
      <param name="size">Size of the viewport in pixels</param>
      <param name="background">Background settings</param>
      <param name="camera">Camera settings</param>
      <param name="toolBar">Toolbar settings</param>
      <param name="legends">Legends array</param>
      <param name="displayMode">Display mode</param>
      <param name="showLabels">Labels visibility status</param>
      <param name="showVertices">If true, the model vertices are displayed</param>
      <param name="autoHideLabels">If true, labels are hidden automatically when behind the model</param>
      <param name="grids">Planar grid settings</param>
      <param name="originSymbol">Origin symbol settings</param>
      <param name="sortLabels">If true, sorts the Labels using the depth from the viewer</param>
      <param name="rotate">Rotate settings</param>
      <param name="zoom">Zoom settings</param>
      <param name="pan">Pan settings</param>
      <param name="initialView">Initial View</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.#ctor(System.Drawing.Point,System.Drawing.Size,devDept.Eyeshot.Control.BackgroundSettings,devDept.Eyeshot.Camera,devDept.Eyeshot.Control.ToolBar,devDept.Eyeshot.Control.Legend[],devDept.Eyeshot.displayType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,devDept.Eyeshot.Control.Grid[],devDept.Eyeshot.Control.OriginSymbol,System.Boolean,devDept.Eyeshot.Control.RotateSettings,devDept.Eyeshot.Control.ZoomSettings,devDept.Eyeshot.Control.PanSettings)">
      <summary>
            Standard constructor (WinForms).
            </summary>
      <param name="location">Coordinates of the upper-left corner of the viewport relative to the upper-left corner of its container</param>
      <param name="size">Size of the viewport in pixels</param>
      <param name="background">Background settings</param>
      <param name="camera">Camera settings</param>
      <param name="toolBar">Toolbar settings</param>
      <param name="legends">Legends array</param>
      <param name="displayMode">Display mode</param>
      <param name="showLabels">Labels visibility status</param>
      <param name="autoHideLabels">If true, labels are hidden automatically when behind the model</param>
      <param name="showVertices">If true, the model vertices are displayed</param>
      <param name="showVertexIndices">If true and <see cref="P:devDept.Eyeshot.Control.Viewport.ShowVertices" /> is also true the model vertex indices are displayed</param>
      <param name="grids">Planar grids settings</param>
      <param name="originSymbol">Origin symbol settings</param>
      <param name="sortLabels">If true, sorts the Labels using the depth from the viewer</param>
      <param name="rotate">Rotate settings</param>
      <param name="zoom">Zoom settings</param>
      <param name="pan">Pan settings</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.#ctor(System.Drawing.Point,System.Drawing.Size,devDept.Eyeshot.Control.BackgroundSettings,devDept.Eyeshot.Camera,devDept.Eyeshot.Control.ToolBar,devDept.Eyeshot.Control.Legend[],devDept.Eyeshot.displayType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,devDept.Eyeshot.Control.Grid[],devDept.Eyeshot.Control.OriginSymbol,System.Boolean,devDept.Eyeshot.Control.RotateSettings,devDept.Eyeshot.Control.ZoomSettings,devDept.Eyeshot.Control.PanSettings,devDept.Eyeshot.viewType)">
      <summary>
            Standard constructor (WinForms).
            </summary>
      <param name="location">Coordinates of the upper-left corner of the viewport relative to the upper-left corner of its container</param>
      <param name="size">Size of the viewport in pixels</param>
      <param name="background">Background settings</param>
      <param name="camera">Camera settings</param>
      <param name="toolBar">Toolbar settings</param>
      <param name="legends">Legends array</param>
      <param name="displayMode">Display mode</param>
      <param name="showLabels">Labels visibility status</param>
      <param name="autoHideLabels">If true, labels are hidden automatically when behind the model</param>
      <param name="showVertices">If true, the model vertices are displayed</param>
      <param name="showVertexIndices">If true and <see cref="P:devDept.Eyeshot.Control.Viewport.ShowVertices" /> is also true the model vertex indices are displayed</param>
      <param name="grids">Planar grids settings</param>
      <param name="originSymbol">Origin symbol settings</param>
      <param name="sortLabels">If true, sorts the Labels using the depth from the viewer</param>
      <param name="rotate">Rotate settings</param>
      <param name="zoom">Zoom settings</param>
      <param name="pan">Pan settings</param>
      <param name="initialView">Initial View</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.#ctor(System.Drawing.Point,System.Drawing.Size,devDept.Eyeshot.Control.BackgroundSettings,devDept.Eyeshot.Camera,devDept.Eyeshot.Control.ToolBar,devDept.Eyeshot.Control.Legend[],devDept.Eyeshot.displayType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,devDept.Eyeshot.Control.Grid[],devDept.Eyeshot.Control.OriginSymbol,System.Boolean,devDept.Eyeshot.Control.RotateSettings,devDept.Eyeshot.Control.ZoomSettings,devDept.Eyeshot.Control.PanSettings,devDept.Eyeshot.Control.NavigationSettings)">
      <summary>
            Standard constructor (WinForms).
            </summary>
      <param name="location">Coordinates of the upper-left corner of the viewport relative to the upper-left corner of its container</param>
      <param name="size">Size of the viewport in pixels</param>
      <param name="background">Background settings</param>
      <param name="camera">Camera settings</param>
      <param name="toolBar">Toolbar settings</param>
      <param name="legends">Legends array</param>
      <param name="displayMode">Display mode</param>
      <param name="showLabels">Labels visibility status</param>
      <param name="autoHideLabels">If true, labels are hidden automatically when behind the model</param>
      <param name="showVertices">If true, the model vertices are displayed</param>
      <param name="showVertexIndices">If true and <see cref="P:devDept.Eyeshot.Control.Viewport.ShowVertices" /> is also true the model vertex indices are displayed</param>
      <param name="grids">Planar grids settings</param>
      <param name="originSymbol">Origin symbol settings</param>
      <param name="sortLabels">If true, sorts the Labels using the depth from the viewer</param>
      <param name="rotate">Rotate settings</param>
      <param name="zoom">Zoom settings</param>
      <param name="pan">Pan settings</param>
      <param name="navigation">Settings for the <see cref="F:devDept.Eyeshot.Camera.navigationType.Walk" /> and <see cref="F:devDept.Eyeshot.Camera.navigationType.Fly" /> camera navigation modes</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.#ctor(System.Drawing.Point,System.Drawing.Size,devDept.Eyeshot.Control.BackgroundSettings,devDept.Eyeshot.Camera,devDept.Eyeshot.Control.ToolBar,devDept.Eyeshot.Control.Legend[],devDept.Eyeshot.displayType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,devDept.Eyeshot.Control.Grid[],devDept.Eyeshot.Control.OriginSymbol,System.Boolean,devDept.Eyeshot.Control.RotateSettings,devDept.Eyeshot.Control.ZoomSettings,devDept.Eyeshot.Control.PanSettings,devDept.Eyeshot.Control.NavigationSettings,devDept.Eyeshot.viewType)">
      <summary>
            Standard constructor (WinForms).
            </summary>
      <param name="location">Coordinates of the upper-left corner of the viewport relative to the upper-left corner of its container</param>
      <param name="size">Size of the viewport in pixels</param>
      <param name="background">Background settings</param>
      <param name="camera">Camera settings</param>
      <param name="toolBar">Toolbar settings</param>
      <param name="legends">Legends array</param>
      <param name="displayMode">Display mode</param>
      <param name="showLabels">Labels visibility status</param>
      <param name="autoHideLabels">If true, labels are hidden automatically when behind the model</param>
      <param name="showVertices">If true, the model vertices are displayed</param>
      <param name="showVertexIndices">If true and <see cref="P:devDept.Eyeshot.Control.Viewport.ShowVertices" /> is also true the model vertex indices are displayed</param>
      <param name="grids">Planar grids settings</param>
      <param name="originSymbol">Origin symbol settings</param>
      <param name="sortLabels">If true, sorts the Labels using the depth from the viewer</param>
      <param name="rotate">Rotate settings</param>
      <param name="zoom">Zoom settings</param>
      <param name="pan">Pan settings</param>
      <param name="navigation">Settings for the <see cref="F:devDept.Eyeshot.Camera.navigationType.Walk" /> and <see cref="F:devDept.Eyeshot.Camera.navigationType.Fly" /> camera navigation modes</param>
      <param name="initialView">Initial View</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.#ctor(System.Drawing.Point,System.Drawing.Size,devDept.Eyeshot.Control.BackgroundSettings,devDept.Eyeshot.Camera,devDept.Eyeshot.Control.ToolBar[],devDept.Eyeshot.Control.Legend[],devDept.Eyeshot.displayType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,devDept.Eyeshot.Control.Grid[],devDept.Eyeshot.Control.OriginSymbol,System.Boolean,devDept.Eyeshot.Control.RotateSettings,devDept.Eyeshot.Control.ZoomSettings,devDept.Eyeshot.Control.PanSettings,devDept.Eyeshot.Control.NavigationSettings,devDept.Eyeshot.viewType)">
      <summary>
            Standard constructor (WinForms).
            </summary>
      <param name="toolBars">Toolbar array</param>
      <param name="legends">Legend array</param>
      <param name="grids">Grid array</param>
      <param name="location">Coordinates of the upper-left corner of the viewport relative to the upper-left corner of its container</param>
      <param name="size">Size of the viewport in pixels</param>
      <param name="background">Background settings</param>
      <param name="camera">Camera settings</param>
      <param name="displayMode">Display mode</param>
      <param name="showLabels">Labels visibility status</param>
      <param name="autoHideLabels">If true, labels are hidden automatically when behind the model</param>
      <param name="showVertices">If true, the model vertices are displayed</param>
      <param name="showVertexIndices">If true and <see cref="P:devDept.Eyeshot.Control.Viewport.ShowVertices" /> is also true the model vertex indices are displayed</param>
      <param name="originSymbol">Origin symbol settings</param>
      <param name="sortLabels">If true, sorts the Labels using the depth from the viewer</param>
      <param name="rotate">Rotate settings</param>
      <param name="zoom">Zoom settings</param>
      <param name="pan">Pan settings</param>
      <param name="navigation">Settings for the <see cref="F:devDept.Eyeshot.Camera.navigationType.Walk" /> and <see cref="F:devDept.Eyeshot.Camera.navigationType.Fly" /> camera navigation modes</param>
      <param name="initialView">Initial View</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.#ctor(System.Drawing.Point,System.Drawing.Size,devDept.Eyeshot.Control.BackgroundSettings,devDept.Eyeshot.Camera,devDept.Eyeshot.Control.ToolBar,devDept.Eyeshot.Control.Legend[],devDept.Eyeshot.displayType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,devDept.Eyeshot.Control.Grid[],devDept.Eyeshot.Control.OriginSymbol,System.Boolean,devDept.Eyeshot.Control.RotateSettings,devDept.Eyeshot.Control.ZoomSettings,devDept.Eyeshot.Control.PanSettings,devDept.Eyeshot.Control.NavigationSettings,devDept.Eyeshot.Control.CoordinateSystemIcon,devDept.Eyeshot.Control.ViewCubeIcon)">
      <summary>
            Standard constructor (WinForms).
            </summary>
      <param name="location">Coordinates of the upper-left corner of the viewport relative to the upper-left corner of its container</param>
      <param name="size">Size of the viewport in pixels</param>
      <param name="background">Background settings</param>
      <param name="camera">Camera settings</param>
      <param name="toolBar">Toolbar settings</param>
      <param name="legends">Legends array</param>
      <param name="displayMode">Display mode</param>
      <param name="showLabels">Labels visibility status</param>
      <param name="autoHideLabels">If true, labels are hidden automatically when behind the model</param>
      <param name="showVertices">If true, the model vertices are displayed</param>
      <param name="showVertexIndices">If true and <see cref="P:devDept.Eyeshot.Control.Viewport.ShowVertices" /> is also true the model vertex indices are displayed</param>
      <param name="grids">Planar grids settings</param>
      <param name="originSymbol">Origin symbol settings</param>
      <param name="sortLabels">If true, sorts the Labels using the depth from the viewer</param>
      <param name="rotate">Rotate settings</param>
      <param name="zoom">Zoom settings</param>
      <param name="pan">Pan settings</param>
      <param name="navigation">Settings for the <see cref="F:devDept.Eyeshot.Camera.navigationType.Walk" /> and <see cref="F:devDept.Eyeshot.Camera.navigationType.Fly" /> camera navigation modes</param>
      <param name="coordinateSystemIcon">The coordinate system icon</param>
      <param name="viewCubeIcon">The view cube icon</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.#ctor(System.Drawing.Point,System.Drawing.Size,devDept.Eyeshot.Control.BackgroundSettings,devDept.Eyeshot.Camera,devDept.Eyeshot.Control.ToolBar,devDept.Eyeshot.Control.Legend[],devDept.Eyeshot.displayType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,devDept.Eyeshot.Control.Grid[],devDept.Eyeshot.Control.OriginSymbol,System.Boolean,devDept.Eyeshot.Control.RotateSettings,devDept.Eyeshot.Control.ZoomSettings,devDept.Eyeshot.Control.PanSettings,devDept.Eyeshot.Control.NavigationSettings,devDept.Eyeshot.Control.CoordinateSystemIcon,devDept.Eyeshot.Control.ViewCubeIcon,devDept.Eyeshot.viewType)">
      <summary>
            Standard constructor (WinForms).
            </summary>
      <param name="location">Coordinates of the upper-left corner of the viewport relative to the upper-left corner of its container</param>
      <param name="size">Size of the viewport in pixels</param>
      <param name="background">Background settings</param>
      <param name="camera">Camera settings</param>
      <param name="toolBar">Toolbar settings</param>
      <param name="legends">Legends array</param>
      <param name="displayMode">Display mode</param>
      <param name="showLabels">Labels visibility status</param>
      <param name="autoHideLabels">If true, labels are hidden automatically when behind the model</param>
      <param name="showVertices">If true, the model vertices are displayed</param>
      <param name="showVertexIndices">If true and <see cref="P:devDept.Eyeshot.Control.Viewport.ShowVertices" /> is also true the model vertex indices are displayed</param>
      <param name="grids">Planar grids settings</param>
      <param name="originSymbol">Origin symbol settings</param>
      <param name="sortLabels">If true, sorts the Labels using the depth from the viewer</param>
      <param name="rotate">Rotate settings</param>
      <param name="zoom">Zoom settings</param>
      <param name="pan">Pan settings</param>
      <param name="navigation">Settings for the <see cref="F:devDept.Eyeshot.Camera.navigationType.Walk" /> and <see cref="F:devDept.Eyeshot.Camera.navigationType.Fly" /> camera navigation modes</param>
      <param name="coordinateSystemIcon">The coordinate system icon</param>
      <param name="viewCubeIcon">The view cube icon</param>
      <param name="initialView">Initial View</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.#ctor(System.Drawing.Point,System.Drawing.Size,devDept.Eyeshot.Control.BackgroundSettings,devDept.Eyeshot.Camera,devDept.Eyeshot.Control.ToolBar,devDept.Eyeshot.Control.Legend[],devDept.Eyeshot.Control.Histogram,devDept.Eyeshot.displayType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,devDept.Eyeshot.Control.Grid[],devDept.Eyeshot.Control.OriginSymbol,System.Boolean,devDept.Eyeshot.Control.RotateSettings,devDept.Eyeshot.Control.ZoomSettings,devDept.Eyeshot.Control.PanSettings,devDept.Eyeshot.Control.NavigationSettings,devDept.Eyeshot.Control.CoordinateSystemIcon,devDept.Eyeshot.Control.ViewCubeIcon)">
      <summary>
            Standard constructor (WinForms).
            </summary>
      <param name="location">Coordinates of the upper-left corner of the viewport relative to the upper-left corner of its container</param>
      <param name="size">Size of the viewport in pixels</param>
      <param name="background">Background settings</param>
      <param name="camera">Camera settings</param>
      <param name="toolBar">Toolbar settings</param>
      <param name="legends">Legends array</param>
      <param name="histogram">The histogram</param>
      <param name="displayMode">Display mode</param>
      <param name="showLabels">Labels visibility status</param>
      <param name="autoHideLabels">If true, labels are hidden automatically when behind the model</param>
      <param name="showVertices">If true, the model vertices are displayed</param>
      <param name="showVertexIndices">If true and <see cref="P:devDept.Eyeshot.Control.Viewport.ShowVertices" /> is also true the model vertex indices are displayed</param>
      <param name="grids">Planar grids settings</param>
      <param name="originSymbol">Origin symbol settings</param>
      <param name="sortLabels">If true, sorts the Labels using the depth from the viewer</param>
      <param name="rotate">Rotate settings</param>
      <param name="zoom">Zoom settings</param>
      <param name="pan">Pan settings</param>
      <param name="navigation">Settings for the <see cref="F:devDept.Eyeshot.Camera.navigationType.Walk" /> and <see cref="F:devDept.Eyeshot.Camera.navigationType.Fly" /> camera navigation modes</param>
      <param name="coordinateSystemIcon">The coordinate system icon</param>
      <param name="viewCubeIcon">The view cube icon</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.#ctor(System.Drawing.Point,System.Drawing.Size,devDept.Eyeshot.Control.BackgroundSettings,devDept.Eyeshot.Camera,devDept.Eyeshot.Control.ToolBar[],devDept.Eyeshot.Control.Legend[],devDept.Eyeshot.displayType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,devDept.Eyeshot.Control.Grid[],devDept.Eyeshot.Control.OriginSymbol,System.Boolean,devDept.Eyeshot.Control.RotateSettings,devDept.Eyeshot.Control.ZoomSettings,devDept.Eyeshot.Control.PanSettings,devDept.Eyeshot.Control.NavigationSettings,devDept.Eyeshot.Control.CoordinateSystemIcon,devDept.Eyeshot.Control.ViewCubeIcon)">
      <summary>
            Standard constructor (WinForms).
            </summary>
      <param name="location">Coordinates of the upper-left corner of the viewport relative to the upper-left corner of its container</param>
      <param name="size">Size of the viewport in pixels</param>
      <param name="background">Background settings</param>
      <param name="camera">Camera settings</param>
      <param name="toolBars">Toolbars settings</param>
      <param name="legends">Legends array</param>
      <param name="displayMode">Display mode</param>
      <param name="showLabels">Labels visibility status</param>
      <param name="autoHideLabels">If true, labels are hidden automatically when behind the model</param>
      <param name="showVertices">If true, the model vertices are displayed</param>
      <param name="showVertexIndices">If true and <see cref="P:devDept.Eyeshot.Control.Viewport.ShowVertices" /> is also true the model vertex indices are displayed</param>
      <param name="grids">Planar grids settings</param>
      <param name="originSymbol">Origin symbol settings</param>
      <param name="sortLabels">If true, sorts the Labels using the depth from the viewer</param>
      <param name="rotate">Rotate settings</param>
      <param name="zoom">Zoom settings</param>
      <param name="pan">Pan settings</param>
      <param name="navigation">Settings for the <see cref="F:devDept.Eyeshot.Camera.navigationType.Walk" /> and <see cref="F:devDept.Eyeshot.Camera.navigationType.Fly" /> camera navigation modes</param>
      <param name="coordinateSystemIcon">The coordinate system icon</param>
      <param name="viewCubeIcon">The view cube icon</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.#ctor(System.Drawing.Point,System.Drawing.Size,devDept.Eyeshot.Control.BackgroundSettings,devDept.Eyeshot.Camera,devDept.Eyeshot.Control.ToolBar,devDept.Eyeshot.displayType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,devDept.Eyeshot.Control.Grid[],System.Boolean,devDept.Eyeshot.Control.RotateSettings,devDept.Eyeshot.Control.ZoomSettings,devDept.Eyeshot.Control.PanSettings,devDept.Eyeshot.Control.NavigationSettings,devDept.Eyeshot.viewType)">
      <summary>
            Standard constructor (WinForms).
            </summary>
      <param name="location">Coordinates of the upper-left corner of the viewport relative to the upper-left corner of its container</param>
      <param name="size">Size of the viewport in pixels</param>
      <param name="background">Background settings</param>
      <param name="camera">Camera settings</param>
      <param name="toolBar">Toolbar settings</param>
      <param name="displayMode">Display mode</param>
      <param name="showLabels">Labels visibility status</param>
      <param name="autoHideLabels">If true, labels are hidden automatically when behind the model</param>
      <param name="showVertices">If true, the model vertices are displayed</param>
      <param name="showVertexIndices">If true and <see cref="P:devDept.Eyeshot.Control.Viewport.ShowVertices" /> is also true the model vertex indices are displayed</param>
      <param name="grids">Planar grids settings</param>
      <param name="sortLabels">If true, sorts the Labels using the depth from the viewer</param>
      <param name="rotate">Rotate settings</param>
      <param name="zoom">Zoom settings</param>
      <param name="pan">Pan settings</param>
      <param name="navigation">Settings for the <see cref="F:devDept.Eyeshot.Camera.navigationType.Walk" /> and <see cref="F:devDept.Eyeshot.Camera.navigationType.Fly" /> camera navigation modes</param>
      <param name="initialView">Initial View</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.#ctor(System.Drawing.Point,System.Drawing.Size,devDept.Eyeshot.Control.BackgroundSettings,devDept.Eyeshot.Camera,devDept.Eyeshot.Control.ToolBar[],devDept.Eyeshot.displayType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,devDept.Eyeshot.Control.Grid[],System.Boolean,devDept.Eyeshot.Control.RotateSettings,devDept.Eyeshot.Control.ZoomSettings,devDept.Eyeshot.Control.PanSettings,devDept.Eyeshot.Control.NavigationSettings,devDept.Eyeshot.viewType)">
      <summary>
            Standard constructor (WinForms).
            </summary>
      <param name="location">Coordinates of the upper-left corner of the viewport relative to the upper-left corner of its container</param>
      <param name="size">Size of the viewport in pixels</param>
      <param name="background">Background settings</param>
      <param name="camera">Camera settings</param>
      <param name="toolBars">Toolbars settings</param>
      <param name="displayMode">Display mode</param>
      <param name="showLabels">Labels visibility status</param>
      <param name="autoHideLabels">If true, labels are hidden automatically when behind the model</param>
      <param name="showVertices">If true, the model vertices are displayed</param>
      <param name="showVertexIndices">If true and <see cref="P:devDept.Eyeshot.Control.Viewport.ShowVertices" /> is also true the model vertex indices are displayed</param>
      <param name="grids">Planar grids settings</param>
      <param name="sortLabels">If true, sorts the Labels using the depth from the viewer</param>
      <param name="rotate">Rotate settings</param>
      <param name="zoom">Zoom settings</param>
      <param name="pan">Pan settings</param>
      <param name="navigation">Settings for the <see cref="F:devDept.Eyeshot.Camera.navigationType.Walk" /> and <see cref="F:devDept.Eyeshot.Camera.navigationType.Fly" /> camera navigation modes</param>
      <param name="initialView">Initial View</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.#ctor(System.Drawing.Point,System.Drawing.Size,devDept.Eyeshot.Control.BackgroundSettings,devDept.Eyeshot.Camera,devDept.Eyeshot.Control.ToolBar[],devDept.Eyeshot.displayType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,devDept.Eyeshot.Control.Grid[],devDept.Eyeshot.Control.OriginSymbol[],System.Boolean,devDept.Eyeshot.Control.RotateSettings,devDept.Eyeshot.Control.ZoomSettings,devDept.Eyeshot.Control.PanSettings,devDept.Eyeshot.Control.NavigationSettings,devDept.Eyeshot.viewType)">
      <summary>
            Standard constructor (WinForms).
            </summary>
      <param name="location">Coordinates of the upper-left corner of the viewport relative to the upper-left corner of its container</param>
      <param name="size">Size of the viewport in pixels</param>
      <param name="background">Background settings</param>
      <param name="camera">Camera settings</param>
      <param name="toolBars">Toolbars settings</param>
      <param name="displayMode">Display mode</param>
      <param name="showLabels">Labels visibility status</param>
      <param name="autoHideLabels">If true, labels are hidden automatically when behind the model</param>
      <param name="showVertices">If true, the model vertices are displayed</param>
      <param name="showVertexIndices">If true and <see cref="P:devDept.Eyeshot.Control.Viewport.ShowVertices" /> is also true the model vertex indices are displayed</param>
      <param name="grids">Planar grids settings</param>
      <param name="originSymbols">Origin symbols array</param>
      <param name="sortLabels">If true, sorts the Labels using the depth from the viewer</param>
      <param name="rotate">Rotate settings</param>
      <param name="zoom">Zoom settings</param>
      <param name="pan">Pan settings</param>
      <param name="navigation">Settings for the <see cref="F:devDept.Eyeshot.Camera.navigationType.Walk" /> and <see cref="F:devDept.Eyeshot.Camera.navigationType.Fly" /> camera navigation modes</param>
      <param name="initialView">Initial View</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.#ctor(System.Drawing.Point,System.Drawing.Size,devDept.Eyeshot.Control.BackgroundSettings,devDept.Eyeshot.Camera,devDept.Eyeshot.Control.ToolBar[],devDept.Eyeshot.Control.Legend[],devDept.Eyeshot.displayType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,devDept.Eyeshot.Control.Grid[],devDept.Eyeshot.Control.OriginSymbol,System.Boolean,devDept.Eyeshot.Control.RotateSettings,devDept.Eyeshot.Control.ZoomSettings,devDept.Eyeshot.Control.PanSettings,devDept.Eyeshot.Control.NavigationSettings,devDept.Eyeshot.Control.CoordinateSystemIcon,devDept.Eyeshot.Control.ViewCubeIcon,devDept.Eyeshot.viewType)">
      <summary>
            Standard constructor (WinForms).
            </summary>
      <param name="location">Coordinates of the upper-left corner of the viewport relative to the upper-left corner of its container</param>
      <param name="size">Size of the viewport in pixels</param>
      <param name="background">Background settings</param>
      <param name="camera">Camera settings</param>
      <param name="toolBars">Toolbars array</param>
      <param name="legends">Legends array</param>
      <param name="displayMode">Display mode</param>
      <param name="showLabels">Labels visibility status</param>
      <param name="autoHideLabels">If true, labels are hidden automatically when behind the model</param>
      <param name="showVertices">If true, the model vertices are displayed</param>
      <param name="showVertexIndices">If true and <see cref="P:devDept.Eyeshot.Control.Viewport.ShowVertices" /> is also true the model vertex indices are displayed</param>
      <param name="grids">Grids array</param>
      <param name="originSymbol">Origin symbol settings</param>
      <param name="sortLabels">If true, sorts the Labels using the depth from the viewer</param>
      <param name="rotate">Rotate settings</param>
      <param name="zoom">Zoom settings</param>
      <param name="pan">Pan settings</param>
      <param name="navigation">Settings for the <see cref="F:devDept.Eyeshot.Camera.navigationType.Walk" /> and <see cref="F:devDept.Eyeshot.Camera.navigationType.Fly" /> camera navigation modes</param>
      <param name="coordinateSystemIcon">The coordinate system icon</param>
      <param name="viewCubeIcon">The view cube icon</param>
      <param name="initialView">Initial View</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.#ctor(System.Drawing.Point,System.Drawing.Size,devDept.Eyeshot.Control.BackgroundSettings,devDept.Eyeshot.Camera,devDept.Eyeshot.Control.ToolBar[],devDept.Eyeshot.Control.Legend[],devDept.Eyeshot.displayType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,devDept.Eyeshot.Control.Grid[],devDept.Eyeshot.Control.OriginSymbol[],System.Boolean,devDept.Eyeshot.Control.RotateSettings,devDept.Eyeshot.Control.ZoomSettings,devDept.Eyeshot.Control.PanSettings,devDept.Eyeshot.Control.NavigationSettings,devDept.Eyeshot.Control.CoordinateSystemIcon,devDept.Eyeshot.Control.ViewCubeIcon,devDept.Eyeshot.viewType)">
      <summary>
            Standard constructor (WinForms).
            </summary>
      <param name="location">Coordinates of the upper-left corner of the viewport relative to the upper-left corner of its container</param>
      <param name="size">Size of the viewport in pixels</param>
      <param name="background">Background settings</param>
      <param name="camera">Camera settings</param>
      <param name="toolBars">Toolbars array</param>
      <param name="legends">Legends array</param>
      <param name="displayMode">Display mode</param>
      <param name="showLabels">Labels visibility status</param>
      <param name="autoHideLabels">If true, labels are hidden automatically when behind the model</param>
      <param name="showVertices">If true, the model vertices are displayed</param>
      <param name="showVertexIndices">If true and <see cref="P:devDept.Eyeshot.Control.Viewport.ShowVertices" /> is also true the model vertex indices are displayed</param>
      <param name="grids">Grids array</param>
      <param name="originSymbols">Origin symbols array</param>
      <param name="sortLabels">If true, sorts the Labels using the depth from the viewer</param>
      <param name="rotate">Rotate settings</param>
      <param name="zoom">Zoom settings</param>
      <param name="pan">Pan settings</param>
      <param name="navigation">Settings for the <see cref="F:devDept.Eyeshot.Camera.navigationType.Walk" /> and <see cref="F:devDept.Eyeshot.Camera.navigationType.Fly" /> camera navigation modes</param>
      <param name="coordinateSystemIcon">The coordinate system icon</param>
      <param name="viewCubeIcon">The view cube icon</param>
      <param name="initialView">Initial View</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.#ctor(System.Drawing.Point,System.Drawing.Size,devDept.Eyeshot.Control.BackgroundSettings,devDept.Eyeshot.Camera,devDept.Eyeshot.Control.ToolBar[],devDept.Eyeshot.Control.Legend[],devDept.Eyeshot.Control.Histogram,devDept.Eyeshot.displayType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,devDept.Eyeshot.Control.Grid[],devDept.Eyeshot.Control.OriginSymbol[],System.Boolean,devDept.Eyeshot.Control.RotateSettings,devDept.Eyeshot.Control.ZoomSettings,devDept.Eyeshot.Control.PanSettings,devDept.Eyeshot.Control.NavigationSettings,devDept.Eyeshot.Control.CoordinateSystemIcon,devDept.Eyeshot.Control.ViewCubeIcon,devDept.Eyeshot.viewType)">
      <summary>
            Standard constructor (WinForms).
            </summary>
      <param name="location">Coordinates of the upper-left corner of the viewport relative to the upper-left corner of its container</param>
      <param name="size">Size of the viewport in pixels</param>
      <param name="background">Background settings</param>
      <param name="camera">Camera settings</param>
      <param name="toolBars">Toolbars array</param>
      <param name="legends">Legends array</param>
      <param name="histogram">The histogram</param>
      <param name="displayMode">Display mode</param>
      <param name="showLabels">Labels visibility status</param>
      <param name="autoHideLabels">If true, labels are hidden automatically when behind the model</param>
      <param name="showVertices">If true, the model vertices are displayed</param>
      <param name="showVertexIndices">If true and <see cref="P:devDept.Eyeshot.Control.Viewport.ShowVertices" /> is also true the model vertex indices are displayed</param>
      <param name="grids">Grids array</param>
      <param name="originSymbols">Origin symbols array</param>
      <param name="sortLabels">If true, sorts the Labels using the depth from the viewer</param>
      <param name="rotate">Rotate settings</param>
      <param name="zoom">Zoom settings</param>
      <param name="pan">Pan settings</param>
      <param name="navigation">Settings for the <see cref="F:devDept.Eyeshot.Camera.navigationType.Walk" /> and <see cref="F:devDept.Eyeshot.Camera.navigationType.Fly" /> camera navigation modes</param>
      <param name="coordinateSystemIcon">The coordinate system icon</param>
      <param name="viewCubeIcon">The view cube icon</param>
      <param name="initialView">Initial View</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Viewport.SavedViewsManager">
      <summary>
            Class that manages the saved views stack.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.SavedViewsManager.#ctor(devDept.Eyeshot.Control.Viewport.SavedViewsManager)">
      <summary>
            Copy constructor.
            </summary>
      <param name="another">The other SavedViewsManager</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.SavedViewsManager.Clear">
      <summary>
            Clears the stack of saved views.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.SavedViewsManager.NumberOfPrevious">
      <summary>
            Gets the number of the previous views saved in the stack.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.SavedViewsManager.NumberOfNext">
      <summary>
            Gets the number of the next views saved in the stack.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.SavedViewsManager.Suspend">
      <summary>
            Suspends the automatic saving of the views.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.SavedViewsManager.Resume">
      <summary>
            Resumes the automatic saving of the views.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.SavedViewsManager.MaximumNumber">
      <summary>
            Gets or sets the maximum number of saved views.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.SavedViewsManager.Save">
      <summary>
            Saves the current view on the stack.
            </summary>
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.SavedViewsManager.Previous" />
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.SavedViewsManager.Next" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.SavedViewsManager.Previous">
      <summary>
            Restores the previous view on the stack.
            </summary>
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.SavedViewsManager.Save" />
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.SavedViewsManager.Next" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.SavedViewsManager.Next">
      <summary>
            Restores the next view on the stack.
            </summary>
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.SavedViewsManager.Save" />
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.SavedViewsManager.Previous" />
    </member>
    <member name="T:devDept.Eyeshot.Control.Viewport.SavedViewsManager.ViewEventArgs">
      <summary>
            Class that holds data for <see cref="E:devDept.Eyeshot.Control.Viewport.ViewSaved" /> and <see cref="E:devDept.Eyeshot.Control.Viewport.ViewRestored" /> events.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.SavedViewsManager.ViewEventArgs.#ctor(devDept.Eyeshot.Control.Viewport.SavedViewsManager.ViewEventArgs)">
      <summary>
            Copy constructor.
            </summary>
      <param name="another">The other object</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.SavedViewsManager.ViewEventArgs.#ctor(devDept.Eyeshot.Camera)">
      <summary>
            Standard constructor.
            </summary>
      <param name="camera">The camera</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.SavedViewsManager.ViewEventArgs.Target">
      <summary>
            Gets or sets the camera target.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.SavedViewsManager.ViewEventArgs.Rotation">
      <summary>
            Gets or sets the camera rotation.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.SavedViewsManager.ViewEventArgs.Distance">
      <summary>
            Gets or sets the camera distance.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.SavedViewsManager.ViewEventArgs.ProjectionMode">
      <summary>
            Gets or sets the camera projection mode.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.SavedViewsManager.ViewEventArgs.ZoomFactor">
      <summary>
            Gets or sets the camera zoom factor.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.SavedViewsManager.ViewEventArgs.Restore(devDept.Eyeshot.Camera)">
      <summary>
            Assigns the saved data to the camera.
            </summary>
      <param name="camera">Camera</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.SavedViews">
      <summary>
            Gets or sets the manager of the saved views.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.SaveView(devDept.Eyeshot.Camera@)">
      <summary>
            Stores the current view. 
            </summary>
      <param name="saved">Will hold a copy of the active <see cref="P:devDept.Eyeshot.Control.Viewport.Camera" /> object</param>
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.RestoreView(devDept.Eyeshot.Camera)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.RestoreView(devDept.Eyeshot.Camera)">
      <summary>
            Restores the previously saved view.
            </summary>
      <param name="saved">The <see cref="P:devDept.Eyeshot.Control.Viewport.Camera" /> object previously initializiated by <see cref="M:devDept.Eyeshot.Control.Viewport.SaveView(devDept.Eyeshot.Camera@)" /></param>
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.SaveView(devDept.Eyeshot.Camera@)" />
      <remarks>If <see cref="P:devDept.Eyeshot.Control.Workspace.AnimateCamera" /> is true, the operation animates the Camera using the time interval specified by <see cref="P:devDept.Eyeshot.Control.Workspace.AnimateCameraDuration" />.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.Location">
      <summary>
            The coordinates of the upper-left corner of the viewport relative to the upper-left corner of its container.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.GetViewFrame">
      <summary>
            Gets the viewport bounds.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.Size">
      <summary>
            The size of the viewport in pixels.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ComputeSmallSizeStill">
      <summary>
            Computes the <see cref="P:devDept.Eyeshot.Control.Viewport.SmallSizeStill" /> value as <see cref="P:devDept.Eyeshot.Control.Viewport.SmallSizeRatioStill" /> * Min(<see cref="P:devDept.Eyeshot.Control.Viewport.Size" />.Width, <see cref="P:devDept.Eyeshot.Control.Viewport.Size" />.Height)
            </summary>
      <returns>
            The small size value in pixels.
            </returns>
      <seealso cref="P:devDept.Eyeshot.Control.Viewport.SmallSizeStill" />
      <seealso cref="P:devDept.Eyeshot.Control.Viewport.SmallSizeRatioStill" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ComputeSmallSize">
      <summary>
             Computes the <see cref="P:devDept.Eyeshot.Control.Viewport.SmallSizeMoving" /> value as <see cref="P:devDept.Eyeshot.Control.Viewport.SmallSizeRatioMoving" /> * Min(<see cref="P:devDept.Eyeshot.Control.Viewport.Size" />.Width, <see cref="P:devDept.Eyeshot.Control.Viewport.Size" />.Height)
            </summary>
      <returns>
             The moving frames small size value in pixels.
             </returns>
      <seealso cref="P:devDept.Eyeshot.Control.Viewport.SmallSizeMoving" />
      <seealso cref="P:devDept.Eyeshot.Control.Viewport.SmallSizeRatioMoving" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ComputeSmallSizeMoving">
      <summary>
            Computes the <see cref="P:devDept.Eyeshot.Control.Viewport.SmallSizeMoving" /> value as <see cref="P:devDept.Eyeshot.Control.Viewport.SmallSizeRatioMoving" /> * Min(<see cref="P:devDept.Eyeshot.Control.Viewport.Size" />.Width, <see cref="P:devDept.Eyeshot.Control.Viewport.Size" />.Height)
            </summary>
      <returns>
            The small size value in pixels.
            </returns>
      <seealso cref="P:devDept.Eyeshot.Control.Viewport.SmallSizeMoving" />
      <seealso cref="P:devDept.Eyeshot.Control.Viewport.SmallSizeRatioMoving" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.SmallSize">
      <summary>
            Gets the estimated small size value in pixels.
            </summary>
      <seealso cref="P:devDept.Eyeshot.Control.Viewport.SmallSizeRatio" />
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.ComputeSmallSize" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.SmallSizeMoving">
      <summary>
            Gets the estimated small size value for the moving frames in pixels.
            </summary>
      <seealso cref="P:devDept.Eyeshot.Control.Viewport.SmallSizeRatioMoving" />
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.ComputeSmallSize" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.SmallSizeStill">
      <summary>
            Gets the estimated small size value for the still frames in pixels.
            </summary>
      <seealso cref="P:devDept.Eyeshot.Control.Viewport.SmallSizeRatioStill" />
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.ComputeSmallSizeStill" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.SmallSizeRatio">
      <summary>
        <para>Gets or sets the ratio to classify small entities. Small entities are hid
            during dynamic movements (Zoom/Pan/Rotate). Default value is 0.01. Use zero to disable.</para>
        <para>This ratio is used by <see cref="M:devDept.Eyeshot.Control.Viewport.ComputeSmallSize" /> to estimate <see cref="P:devDept.Eyeshot.Control.Viewport.SmallSize" /> value in pixels.</para>
      </summary>
      <remarks>
            The on screen object size is calculated approximating the size of the
            object's bounding box. Most of the times, there is a big difference between
            the actual pixel footprint and the <see cref="P:devDept.Eyeshot.Control.Viewport.SmallSize" /> value.
            </remarks>
      <seealso cref="P:devDept.Eyeshot.Control.Viewport.SmallSize" />
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.ComputeSmallSize" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.SmallSizeRatioMoving">
      <summary>
        <para>Gets or sets the ratio to classify small entities. Small entities are hid
            during dynamic movements (Zoom/Pan/Rotate). Default value is 0.01. Use zero to disable.</para>
        <para>This ratio is used by <see cref="M:devDept.Eyeshot.Control.Viewport.ComputeSmallSize" /> to estimate <see cref="P:devDept.Eyeshot.Control.Viewport.SmallSizeMoving" /> value in pixels.</para>
      </summary>
      <remarks>
            The on screen object size is calculated approximating the size of the
            object's bounding box. Most of the times, there is a big difference between
            the actual pixel footprint and the <see cref="P:devDept.Eyeshot.Control.Viewport.SmallSizeMoving" /> value.
            </remarks>
      <seealso cref="P:devDept.Eyeshot.Control.Viewport.SmallSizeMoving" />
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.ComputeSmallSize" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.SmallSizeRatioStill">
      <summary>
        <para>Gets or sets the ratio to classify small entities. Small entities are hid
            on the still frames. Default value is 0. Use zero to disable.</para>
        <para>This ratio is used by <see cref="M:devDept.Eyeshot.Control.Viewport.ComputeSmallSizeStill" /> to estimate <see cref="P:devDept.Eyeshot.Control.Viewport.SmallSizeStill" /> value in pixels.</para>
      </summary>
      <remarks>
            The on screen object size is calculated approximating the size of the
            object's bounding box. Most of the times, there is a big difference between
            the actual pixel footprint and the <see cref="P:devDept.Eyeshot.Control.Viewport.SmallSizeStill" /> value.
            </remarks>
      <seealso cref="P:devDept.Eyeshot.Control.Viewport.SmallSizeStill" />
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.ComputeSmallSizeStill" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.Camera">
      <summary>
            Gets or sets the Camera settings.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.ToolBar">
      <summary>
            Gets the first ToolBar settings.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.ToolBars">
      <summary>
            Gets or sets the ToolBars settings.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.DisplayMode">
      <summary>
            Gets or sets the active display mode.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.InitialView">
      <summary>
            Gets or sets the active initial view.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.ShowLabels">
      <summary>
            Labels visibility status.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.ShowVertices">
      <summary>
            If true, the model vertices are displayed.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.ShowVertexIndices">
      <summary>
            If true, the model vertices are displayed.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.VertexSize">
      <summary>        
            Gets or sets the vertex visualization size (meaningful only if <see cref="P:devDept.Eyeshot.Control.Viewport.ShowVertices" /> is true).
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.AutoHideLabels">
      <summary>
            Gets or sets the auto hide labels flag. If true labels are hidden automatically when behind the model.
            </summary>
      <remarks>With Direct3D renderer, if Antialiasing is enabled, during the movement of the camera the labels may not be correctly hidden.</remarks>
      <seealso cref="!:AskForAntiAliasing" />
      <seealso cref="!:AntiAliasingSamples" />
      <seealso cref="!:AntiAliasing" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.Grid">
      <summary>
            Gets the first planar grid settings.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.Grids">
      <summary>
            Gets or sets the planar grids settings.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.OriginSymbol">
      <summary>
            Gets the first origin symbol settings.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.OriginSymbols">
      <summary>
            Gets or sets the OriginSymbols settings array.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.Legend">
      <summary>
            Gets the first legend settings.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.Legends">
      <summary>
            Gets or sets the legend objects.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.Background">
      <summary>
            Gets or sets the background settings.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.GetCameraFrustum">
      <summary>
            Gets the planes of the viewport camera frustum.
            </summary>
      <returns>The camera frustum planes.</returns>
    </member>
    <member name="E:devDept.Eyeshot.Control.Viewport.LabelSelectionChanged">
      <summary>
            Occurs when label selection has changed.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.SetView(devDept.Eyeshot.viewType)">
      <summary>
            Sets the specified view.
            </summary>
      <param name="view">View type</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.SetView(devDept.Eyeshot.viewType,System.Boolean,System.Boolean)">
      <summary>
            Sets the specified view.
            </summary>
      <param name="view">View type</param>
      <param name="fit">If true fits the view</param>
      <param name="animate">If true performs an animation when changing the view</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.SetView(devDept.Geometry.Quaternion,System.Boolean,System.Boolean)">
      <summary>
            Sets the specified view.
            </summary>
      <param name="rotation">View rotation</param>
      <param name="fit">If true fits the view</param>
      <param name="animate">If true performs an animation when changing the view</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.SetView(devDept.Eyeshot.viewType,System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Int32)">
      <summary>
            Sets the specified view.
            </summary>
      <param name="view">View type</param>
      <param name="fit">If true fits the view</param>
      <param name="margin">Pixels margin from the border, if <paramref name="fit" /> is true</param>
      <param name="animate">If true performs an animation when changing the view</param>
      <param name="selectedOnly">If <paramref name="fit" /> is true, fits only the selected entities</param>
      <param name="duration">Animation duration (use 0 to use the <see cref="!:Design.AnimateCameraDuration" /></param>
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.IsCameraAnimating" />
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.StopCameraAnimation" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.SetView(devDept.Geometry.Quaternion,System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Int32)">
      <summary>
            Sets the specified view.
            </summary>
      <param name="rotation">View rotation</param>
      <param name="fit">If true fits the view</param>
      <param name="margin">Pixels margin from the border, if <paramref name="fit" /> is true</param>
      <param name="animate">If true performs an animation when changing the view</param>
      <param name="selectedOnly">If <paramref name="fit" /> is true, fits only the selected entities</param>
      <param name="duration">Animation duration (use 0 to use the <see cref="!:Design.AnimateCameraDuration" /></param>
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.IsCameraAnimating" />
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.StopCameraAnimation" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.StopCameraAnimation">
      <summary>
            Stops the camera animation.
            </summary>
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.SetView(devDept.Eyeshot.viewType,System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Int32)" />
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.IsCameraAnimating" />
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.StopCameraAnimation" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.IsCameraAnimating">
      <summary>
            Tells if the Camera is performing an animation.
            </summary>
      <returns>True if the camera is performing an animation</returns>
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.SetView(devDept.Eyeshot.viewType,System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Int32)" />
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.StopCameraAnimation" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.SetView(devDept.Geometry.Quaternion,devDept.Geometry.Point3D,System.Double,System.Double)">
      <summary>
            Sets the specified view by doing an animation.
            </summary>
      <param name="rotation">The new camera rotation</param>
      <param name="target">The new camera target</param>
      <param name="distance">The new camera distance</param>
      <param name="zoomFactor">The new camera zoomFactor</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.SetView(devDept.Geometry.Quaternion,devDept.Geometry.Point3D,System.Double,System.Double,System.Boolean)">
      <summary>
            Sets the specified view by doing an animation.
            </summary>
      <param name="rotation">The new camera rotation</param>
      <param name="target">The new camera target</param>
      <param name="distance">The new camera distance</param>
      <param name="zoomFactor">The new camera zoomFactor</param>
      <param name="animate">If true performs an animation when changing the view</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.GetCameraRotation(devDept.Eyeshot.viewType,devDept.Geometry.Quaternion)">
      <summary>
            Gets the <see cref="T:devDept.Geometry.Quaternion" /> that describes the orientation of the given view.
            </summary>
      <param name="view">The view to set</param>
      <param name="initialRotation">An extra rotation to apply to the final rotation</param>
      <returns>The <see cref="T:devDept.Geometry.Quaternion" />.</returns>
      <seealso cref="P:devDept.Eyeshot.Camera.Rotation" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ViewportToCameraScreen(System.Drawing.Point)">
      <summary>
            Converts Viewport coordinates (0 on top of viewport) to Camera Screen coordinates (0 on bottom of control)
            </summary>
      <param name="pt">The point to convert</param>
      <returns>The point in camera screen coordinates</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ScreenToViewport(System.Drawing.Point)">
      <summary>
            Converts Screen coordinates (0 on top of control) to Viewport coordinates (0 on top of viewport)
            </summary>
      <param name="pt">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ScreenToViewport(System.Drawing.PointF)">
      <summary>
            Converts Screen coordinates (0 on top of control) to Viewport coordinates (0 on top of viewport)
            </summary>
      <param name="pt">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ViewportToScreen(System.Drawing.Point)">
      <summary>
            Converts Viewport coordinates (0 on top of viewport) to Screen coordinates (0 on top of control)
            </summary>
      <param name="pt">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.Project(System.Int32,System.Double,System.Double,System.Double,System.Double@,System.Double@,System.Double@)">
      <summary>
            Maps world coordinates to screen coordinates.
            </summary>
      <param name="controlHeight">The height of the viewport layout control</param>
      <param name="objx">The world X coordinates</param>
      <param name="objy">The world Y coordinates</param>
      <param name="objz">The world Z coordinates</param>
      <param name="winx">The computed window X coordinates</param>
      <param name="winy">The computed window Y coordinates (0 on bottom of viewport)</param>
      <param name="winz">The computed window Z coordinates</param>
      <returns>True if the operation succeeded, false otherwise.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.Project(System.Collections.Generic.IList{devDept.Geometry.Point3D},System.Int32)">
      <summary>
            Projects a list of points on the screen.
            </summary>
      <returns>
            A list of 2D points. The origin point is the lower-left corner of the
            viewport.
            </returns>
      <param name="points">The list of points to project</param>
      <param name="controlHeight">The height of the viewport layout control </param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.UnProject(System.Int32,System.Double,System.Double,System.Double,System.Double@,System.Double@,System.Double@)">
      <summary>
            Maps viewport coordinates to world coordinates.
            </summary>
      <param name="controlHeight">The height of the viewport layout control</param>
      <param name="winx">The screen X viewport coordinates to be mapped</param>
      <param name="winy">The screen Y viewport coordinates to be mapped (0 on bottom of viewport)</param>
      <param name="winz">The screen Z viewport coordinates to be mapped</param>
      <param name="objx">The computed world X coordinates</param>
      <param name="objy">The computed world Y coordinates</param>
      <param name="objz">The computed world Z coordinates</param>
      <returns>True if the operation succeeded, false otherwise</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.UnProject(System.Collections.Generic.IList{devDept.Geometry.Point3D},System.Int32)">
      <summary>
            Maps viewport coordinates to world coordinates.
            </summary>
      <returns>
            A list of 3D points in viewport coordinates. The origin point is the lower-left corner of the
            viewport.
            </returns>
      <param name="points">The list of points to unproject in viewport coordinates</param>
      <param name="controlHeight">The height of the viewport layout control </param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ScreenToPlane(System.Drawing.Point,devDept.Geometry.Plane,devDept.Geometry.Point3D@)">
      <summary>
            Maps screen coordinates to world coordinates. 
            </summary>
      <param name="mousePos">Mouse cursor position (zero on top)</param>
      <param name="plane">The plane</param>
      <param name="intPoint">The intersection point. null/Nothing if the plane perpendicular to the screen.</param>
      <returns>True if the mapping succeeded, false otherwise.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ScreenToPlane(System.Drawing.Point,devDept.Geometry.PlaneEquation,devDept.Geometry.Point3D@)">
      <summary>
            Maps screen coordinates to world coordinates. 
            </summary>
      <param name="mousePos">Mouse cursor position (zero on top)</param>
      <param name="pe">The plane equation</param>
      <param name="intPoint">The intersection point. null/Nothing if the plane perpendicular to the screen.</param>
      <returns>True if the mapping succeeded, false otherwise.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ScreenToPlane(System.Collections.Generic.IList{System.Drawing.Point},devDept.Geometry.Plane)">
      <summary>
            Maps screen coordinates to world coordinates. 
            </summary>
      <param name="mousePointList">2D mouse point list (zero on top)</param>
      <param name="pe">The plane</param>
      <returns>The associated 3D world point list.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ScreenToPlane(System.Collections.Generic.IList{System.Drawing.Point},devDept.Geometry.PlaneEquation)">
      <summary>
            Maps screen coordinates to world coordinates. 
            </summary>
      <param name="mousePointList">2D mouse point list (zero on top)</param>
      <param name="pe">The plane equation</param>
      <returns>The associated 3D world point list.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ScreenToWorld(System.Collections.Generic.IList{System.Drawing.Point})">
      <summary>
            Maps screen coordinates to world coordinates. 
            </summary>
      <param name="mousePointList">2D mouse point list (zero on top)</param>
      <returns>The associated 3D world point list.</returns>
      <remarks>Positions that don't have geometry underneath will return null.</remarks>
      <remarks>The depth is read from the depth buffer, so its precision affects accuracy.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ScreenToWorld(System.Drawing.Point)">
      <summary>
            Maps screen coordinates to world coordinates. 
            </summary>
      <param name="mousePos">Mouse cursor position (zero on top)</param>
      <returns>The associated 3D world point if there is geometry in the point position, null otherwise.</returns>
      <remarks>The depth is read from the depth buffer, so its precision affects accuracy.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.WorldToScreen(devDept.Geometry.Point3D)">
      <summary>
            Maps world coordinates to screen coordinates. 
            </summary>
      <param name="point">The 3D point to project on screen</param>
      <returns>The associated projected screen point (zero on bottom)</returns>
      <remarks>The z-component of the returned point is in the normalized device coordinate space [0,1]. 
            A value outside the [0,1] range means that the point is outside the near-far clipping planes of the camera.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.WorldToScreen(System.Double,System.Double,System.Double)">
      <summary>
            Maps world coordinates to screen coordinates. 
            </summary>
      <param name="x">3D point's x-coordinate</param>
      <param name="y">3D point's y-coordinate</param>
      <param name="z">3D point's z-coordinate</param>
      <returns>The associated projected screen point (zero on bottom).</returns>
      <remarks>The z-component of the returned point is in the normalized device coordinate space [0,1]. 
            A value outside the [0,1] range means that the point is outside the near-far clipping planes of the camera.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.WorldToScreen(System.Collections.Generic.IList{devDept.Geometry.Point3D})">
      <summary>
            Maps world coordinates to screen coordinates. 
            </summary>
      <param name="pointList">3D point list</param>
      <returns>The associated projected screen point list (zero on bottom).</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.AdjustNearAndFarPlanes">
      <summary>
            Adjusts camera near and far planes based on model extents and on origin symbol, grid and shadow visibility status.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.GetThumbnail(devDept.Eyeshot.Control.Viewport,System.Drawing.Size,System.Drawing.Color)">
      <summary>
            Gets a bitmap of the user interface element for designer mode only.
            </summary>
      <param name="viewport">Unused</param>
      <param name="size">The desired bitmap size</param>
      <param name="backgroundColor">Unused</param>
      <returns>
      </returns>
      <remarks>For internal use only.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.GetBounds">
      <summary>
            Gets the bounds rectangle in screen coordinates.
            </summary>
      <returns>The bounds rectangle in screen coordinates.</returns>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.CoordinateSystemIcon">
      <summary>
            Gets or sets the coordinate system icon settings.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.Histogram">
      <summary>
            Gets or sets the coordinate system icon settings.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.ViewCubeIcon">
      <summary>
            Gets or sets the view cube icon settings.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.CompileUserInterfaceElements">
      <summary>
            Compiles 3D user interface elements like the origin symbol, the bitmap background, the FEM restraint and load symbols, etc.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.Viewport.ViewSavedEventHandler">
      <summary>
            Represents a method that will handle the <see cref="E:devDept.Eyeshot.Control.Viewport.ViewSaved" /> event.
            </summary>
      <param name="sender">The source of the event</param>
      <param name="e">A <see cref="T:devDept.Eyeshot.Control.Viewport.SavedViewsManager.ViewEventArgs" /> that contains the event data</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Viewport.ViewRestoredHandler">
      <summary>
            Represents a method that will handle the <see cref="E:devDept.Eyeshot.Control.Viewport.ViewRestored" /> event.
            </summary>
      <param name="sender">The source of the event</param>
      <param name="e">A <see cref="T:devDept.Eyeshot.Control.Viewport.SavedViewsManager.ViewEventArgs" /> that contains the event data</param>
    </member>
    <member name="E:devDept.Eyeshot.Control.Viewport.ViewSaved">
      <summary>
            Occurs when a view is saved in the <see cref="T:devDept.Eyeshot.Control.Viewport.SavedViewsManager" />.
            </summary>
    </member>
    <member name="E:devDept.Eyeshot.Control.Viewport.ViewRestored">
      <summary>
            Occurs when a view is restored from the <see cref="T:devDept.Eyeshot.Control.Viewport.SavedViewsManager" />.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.GetBitmapSizeToPrintInWorldUnits(System.Drawing.GraphicsUnit,devDept.Geometry.linearUnitsType,System.Double)">
      <summary>
            Gets the size to print the viewport so that world units in the design correspond to world units on paper.
            </summary>
      <param name="pageUnits">The units of the graphics used to paint the page</param>
      <param name="designUnits">The units of the design control</param>
      <param name="scale">The scale to apply to the drawing</param>
      <returns>The viewport size to use in the <see cref="!:Design.RenderToBitmap(System.Drawing.Size)" /> to print the scene so that the world units in the design correspond to world units on paper.</returns>
      <remarks>Applies to <see cref="F:devDept.Eyeshot.projectionType.Orthographic" /> camera ProjectionMode only.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.GetThumbnail(System.Int32,System.Drawing.Color)">
      <summary>
            Returns a thumbnail bitmap of the Viewport. The maximum size is 256x256.
            </summary>
      <param name="thumbnailSize">Desired size of the biggest dimension of the workspace control.</param>
      <param name="backgroundColor">Desired background solid color. If Empty, then it uses the current one.</param>
      <returns>The bitmap of the current Viewport</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ScaleForDPI">
      <summary>
            Scales the element for high DPI settings.
            </summary>
      <seealso cref="M:devDept.Geometry.UtilityEx.GetScalingLevel" />
      <remarks>This method needs to be called if the element is added outside of the InitializeComponents() to adjust the rendering for high dpi settings.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.AddUserInterfaceElementFor(devDept.Eyeshot.Milling.Setup,System.Int32)">
      <summary>
            Adds an <see cref="P:devDept.Eyeshot.Control.Viewport.OriginSymbol" /> representing the work plane to this viewport.
            </summary>
      <param name="setup">The work plane</param>
      <param name="size">The symbol ball size in pixels</param>
      <returns>The element index in the <see cref="P:devDept.Eyeshot.Control.Viewport.OriginSymbols" /> array.</returns>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.SortLabels">
      <summary>
            Sorts the Labels using the depth from the viewer.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.Labels">
      <summary>Master label collection.</summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.DrawLabels(devDept.Graphics.RenderContextBase)">
      <summary>
            Draws the labels.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.DrawText(System.Int32,System.Int32,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.ContentAlignment)">
      <summary>
            Draws a text on the <see cref="T:devDept.Eyeshot.Control.Design" />'s client area.
            </summary>
      <param name="x">The text's x coordinate</param>
      <param name="y">The text's y coordinate (from the bottom of the viewport)</param>
      <param name="text">The text string to draw</param>
      <param name="textFont">The text font</param>
      <param name="textColor">The text color</param>
      <param name="textAlign">The text alignment</param>
      <seealso cref="!:Design.DrawTextOutlined" />
      <seealso cref="!:Design.DrawImage" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.DrawText(System.Int32,System.Int32,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.ContentAlignment)">
      <summary>
            Draws a text on the <see cref="T:devDept.Eyeshot.Control.Design" />'s client area.
            </summary>
      <param name="x">The text's x coordinate</param>
      <param name="y">The text's y coordinate (from the bottom of the viewport)</param>
      <param name="text">The text string to draw</param>
      <param name="textFont">The text font</param>
      <param name="textColor">The text color</param>
      <param name="fillColor">The background color (can be semi-transparent)</param>
      <param name="textAlign">The text alignment</param>
      <seealso cref="!:DrawTextOutlined" />
      <seealso cref="!:DrawImage" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.DrawText(System.Int32,System.Int32,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.ContentAlignment,System.Drawing.RotateFlipType)">
      <summary>
            Draws a text on the <see cref="T:devDept.Eyeshot.Control.Design" />'s client area.
            </summary>
      <param name="x">The text's x coordinate</param>
      <param name="y">The text's y coordinate (from the bottom of the viewport)</param>
      <param name="text">The text string to draw</param>
      <param name="textFont">The text font</param>
      <param name="textColor">The text color</param>
      <param name="fillColor">The background color (can be semi-transparent)</param>
      <param name="textAlign">The text alignment</param>
      <param name="rotateFlip">The text rotation</param>
      <seealso cref="!:DrawTextOutlined" />
      <seealso cref="!:DrawImage" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.CompileBackground">
      <summary>
            Compiles the background, used by the designer.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.DrawBackground(devDept.Graphics.RenderContextBase,System.Boolean,System.Single,System.Drawing.Color,devDept.Geometry.Transformation)">
      <summary>Draws the viewport background.</summary>
      <param name="context">The render context</param>
      <param name="reflection">If true, it's drawing the planar reflections (when there are no shaders)</param>
      <param name="reflectionIntensity">THe intensity of the planar reflections</param>
      <param name="parentColor">The color of the parent</param>
      <param name="pickMatrix">The matrix to restrict the rendering to the given rectangle (important for <see cref="!:Design.RenderToBitmap(System.Drawing.Size)" />).</param>
      <example>
            The following code fragment demonstrates how to override the DrawBackground() method to draw a custom background.
            <code title="Example" description="" lang="CS">
            class MyViewport : Viewport
            {
                  protected override void DrawBackground()
                  {
                      // Draws standard background
                      base.DrawBackground();
             
                      // Draws a white rectangle with a margin of 50 pixel from the viewport's border
                      gl.Begin(gl.QUADS);
             
                      gl.Color3ub(255, 255, 255);
                      gl.Vertex2i(50, 50);
                      gl.Vertex2i(Width - 50, 50);
                      gl.Vertex2i(Width-50, Height -50);
                      gl.Vertex2i(50, Height - 50);
                      
                      gl.End();         
                  }
            }</code><code title="Example2" description="" lang="VB.NET">
            Class MyViewport
                Inherits Viewport
                Protected Overrides Sub DrawBackground()
                    ' Draws standard background
                    MyBase.DrawBackground()
             
                    ' Draws a white rectangle with a margin of 50 pixel from the viewport's border
                    gl.Begin(gl.QUADS)
             
                    gl.Color3ub(255, 255, 255)
                    gl.Vertex2i(50, 50)
                    gl.Vertex2i(Width - 50, 50)
                    gl.Vertex2i(Width - 50, Height - 50)
                    gl.Vertex2i(50, Height - 50)
             
                    gl.[End]()
                End Sub
            End Class
            </code></example>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.DrawOverlay(devDept.Eyeshot.DrawSceneParams)">
      <summary>
            Draws overlaying UI elements.
            </summary>
      <param name="data">The draw data</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.RenderToBitmap(System.Double)">
      <summary>Returns an image of the current <see cref="T:devDept.Eyeshot.Control.Design" /> viewport scene. The image can be scaled even to a poster size one.</summary>
      <param name="drawScale">The bitmap scale</param>
      <returns>The 24-bit image.</returns>
      <remarks>To get a 32-bit image with transparent background set the <see cref="P:devDept.Eyeshot.Control.BackgroundSettings.StyleMode" /> to <see cref="F:devDept.Graphics.backgroundStyleType.None" />.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.RenderToBitmap(System.Double,System.Boolean,System.Boolean)">
      <summary>Returns an image of the current <see cref="T:devDept.Eyeshot.Control.Design" /> scene. The image can be scaled even to a poster size one.</summary>
      <param name="drawScale">The bitmap scale</param>
      <param name="drawBackground">If false, the drawing of the background is skipped</param>
      <param name="hdwAcceleration">If true, use the hardware acceleration (OpenGL only)</param>
      <returns>The 24-bit image.</returns>
      <remarks>To get a 32-bit image with transparent background set the <see cref="P:devDept.Eyeshot.Control.BackgroundSettings.StyleMode" /> to <see cref="F:devDept.Graphics.backgroundStyleType.None" />.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.RenderToBitmap(System.Double,System.Double,System.Boolean,System.Boolean)">
      <summary>Returns an image of the current <see cref="T:devDept.Eyeshot.Control.Design" /> scene. The image can be scaled even to a poster size one.</summary>
      <param name="drawScale">The bitmap scale</param>
      <param name="lineWeightFactor">The factor applied to the line weight of the wire entities</param>
      <param name="drawBackground">If false, the drawing of the background is skipped</param>
      <param name="hdwAcceleration">If true, use the hardware acceleration (OpenGL only)</param>
      <returns>The 24-bit image.</returns>
      <remarks>To get a 32-bit image with transparent background set the <see cref="P:devDept.Eyeshot.Control.BackgroundSettings.StyleMode" /> to <see cref="F:devDept.Graphics.backgroundStyleType.None" />.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.RenderToBitmap(System.Drawing.RectangleF,System.Double,System.Boolean,System.Boolean)">
      <summary>Returns an image of the current <see cref="T:devDept.Eyeshot.Control.Design" /> scene. The image can be scaled even to a poster size one.</summary>
      <param name="rectangle">The rectangle of the viewport to capture in screen coordinates</param>
      <param name="drawScale">The bitmap scale</param>
      <param name="drawBackground">If false, the drawing of the background is skipped</param>
      <param name="hdwAcceleration">If true, use the hardware acceleration (OpenGL only)</param>
      <returns>The 24-bit image.</returns>
      <remarks>To get a 32-bit image with transparent background set the <see cref="P:devDept.Eyeshot.Control.BackgroundSettings.StyleMode" /> to <see cref="F:devDept.Graphics.backgroundStyleType.None" />.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.RenderToBitmap(System.Drawing.RectangleF,System.Double,System.Double,System.Boolean,System.Boolean)">
      <summary>Returns an image of the current <see cref="T:devDept.Eyeshot.Control.Design" /> scene. The image can be scaled even to a poster size one.</summary>
      <param name="rectangle">The rectangle of the viewport to capture in screen coordinates</param>
      <param name="drawScale">The bitmap scale</param>
      <param name="lineWeightFactor">The factor applied to the line weight of the wire entities</param>
      <param name="drawBackground">If false, the drawing of the background is skipped</param>
      <param name="hdwAcceleration">If true, use the hardware acceleration (OpenGL only)</param>
      <returns>The 24-bit image.</returns>
      <remarks>To get a 32-bit image with transparent background set the <see cref="P:devDept.Eyeshot.Control.BackgroundSettings.StyleMode" /> to <see cref="F:devDept.Graphics.backgroundStyleType.None" />.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.RenderToBitmap(System.Drawing.Size,System.Boolean,System.Boolean)">
      <summary>Returns an image of the current <see cref="T:devDept.Eyeshot.Control.Design" /> scene. The image can be scaled even to a poster size one.</summary>
      <param name="bitmapSize">The size in which the viewport will be fitted.</param>
      <param name="drawBackground">If true, the drawing of the background is skipped</param>
      <param name="hdwAcceleration">If true, use the hardware acceleration</param>
      <returns>The 24-bit image.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.RenderToBitmap(System.Drawing.Size,System.Double,System.Boolean,System.Boolean)">
      <summary>Returns an image of the current <see cref="T:devDept.Eyeshot.Control.Design" /> scene. The image can be scaled even to a poster size one.</summary>
      <param name="bitmapSize">The size in which the viewport will be fitted.</param>
      <param name="lineWeightFactor">The factor applied to the line weight of the wire entities</param>
      <param name="drawBackground">If true, the drawing of the background is skipped</param>
      <param name="hdwAcceleration">If true, use the hardware acceleration (OpenGL only)</param>
      <returns>The 24-bit image.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.RenderToBitmap(System.Drawing.Size,System.Double,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Returns an image of the current <see cref="T:devDept.Eyeshot.Control.Design" /> scene. The image can be scaled even to a poster size one.</summary>
      <param name="bitmapSize">The size in which the viewport will be fitted.</param>
      <param name="lineWeightFactor">The factor applied to the line weight of the wire entities</param>
      <param name="drawBackground">If true, the drawing of the background is skipped</param>
      <param name="hdwAcceleration">If true, use the hardware acceleration (OpenGL only)</param>
      <param name="drawUiElements">Draws UI elements like <see cref="P:devDept.Eyeshot.Control.Viewport.ViewCubeIcon" /> and <see cref="P:devDept.Eyeshot.Control.Viewport.ToolBar" /></param>
      <returns>The 24-bit image.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.RenderToBitmap(System.Drawing.Rectangle,System.Drawing.Size,System.Boolean,System.Boolean)">
      <summary>Returns an image of the current <see cref="T:devDept.Eyeshot.Control.Design" /> scene. The image can be scaled even to a poster size one.</summary>
      <param name="rectangle">The rectangle of the viewport to capture in screen coordinates</param>
      <param name="bitmapSize">The size in which the viewport will be fitted.</param>
      <param name="drawBackground">If true, the drawing of the background is skipped</param>
      <param name="hdwAcceleration">If true, use the hardware acceleration (OpenGL only)</param>
      <returns>The 24-bit image.</returns>
    </member>
    <!-- Badly formed XML comment ignored for member "M:devDept.Eyeshot.Control.Viewport.RenderToTexture(devDept.Graphics.TextureBase,System.Drawing.Rectangle,System.Double,System.Boolean,System.Boolean,System.Boolean)" -->
    <!-- Badly formed XML comment ignored for member "M:devDept.Eyeshot.Control.Viewport.RenderToTexture(devDept.Graphics.TextureBase,System.Drawing.Rectangle,System.Double,System.Drawing.Color,System.Boolean,System.Boolean)" -->
    <member name="M:devDept.Eyeshot.Control.Viewport.RenderToBitmap(System.Drawing.RectangleF,System.Drawing.Size,System.Double,System.Boolean,System.Boolean)">
      <summary>Returns an image of the current <see cref="T:devDept.Eyeshot.Control.Design" /> scene. The image can be scaled even to a poster size one.</summary>
      <param name="rectangle">The rectangle of the viewport to capture in screen coordinates</param>
      <param name="bitmapSize">The size in which the viewport will be fitted.</param>
      <param name="lineWeightFactor">The factor applied to the line weight of the wire entities</param>
      <param name="drawBackground">If true, the drawing of the background is skipped</param>
      <param name="hdwAcceleration">If true, use the hardware acceleration (OpenGL only)</param>
      <returns>The 24-bit image.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.RenderToBitmap(System.Drawing.RectangleF,System.Drawing.Size,System.Double,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Returns an image of the current <see cref="T:devDept.Eyeshot.Control.Design" /> scene. The image can be scaled even to a poster size one.</summary>
      <param name="rectangle">The rectangle of the viewport to capture in screen coordinates</param>
      <param name="bitmapSize">The size in which the viewport will be fitted.</param>
      <param name="lineWeightFactor">The factor applied to the line weight of the wire entities</param>
      <param name="drawBackground">If true, the drawing of the background is skipped</param>
      <param name="hdwAcceleration">If true, use the hardware acceleration (OpenGL only)</param>
      <param name="drawUiElements">Draws UI elements like <see cref="P:devDept.Eyeshot.Control.Viewport.ViewCubeIcon" /> and <see cref="P:devDept.Eyeshot.Control.Viewport.ToolBar" /></param>
      <returns>The 24-bit image.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.RenderToBitmap(System.Drawing.RectangleF,System.Drawing.Size,System.Double,System.Drawing.Color,System.Boolean,System.Boolean)">
      <summary>Returns an image of the current <see cref="T:devDept.Eyeshot.Control.Design" /> scene. The image can be scaled even to a poster size one.</summary>
      <param name="rectangle">The rectangle of the viewport to capture in screen coordinates</param>
      <param name="bitmapSize">The size in which the viewport will be fitted.</param>
      <param name="lineWeightFactor">The factor applied to the line weight of the wire entities</param>
      <param name="backgroundColor">The color used for the background</param>
      <param name="hdwAcceleration">If true, use the hardware acceleration (OpenGL only)</param>
      <param name="drawUiElements">Draws UI elements like <see cref="P:devDept.Eyeshot.Control.Viewport.ViewCubeIcon" /> and <see cref="P:devDept.Eyeshot.Control.Viewport.ToolBar" /></param>
      <returns>The 24-bit image.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.WriteToFileRaster(System.Single,System.String,System.Drawing.Imaging.ImageFormat,System.Boolean,System.Boolean)">
      <summary>Saves a raster image of the current viewport scene on disk.</summary>
      <param name="drawScale">The image scale</param>
      <param name="fileName">A string that contains the name of the file to which to save the raster image</param>
      <param name="format">The file format of the raster image</param>
      <param name="drawBackground">If false, the drawing of the background is skipped</param>
      <param name="hdwAcceleration">If true, use the hardware acceleration</param>
      <remarks>The saved file will contain a 24-bit image.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.WriteToFileRaster(System.Single,System.Double,System.String,System.Drawing.Imaging.ImageFormat,System.Boolean,System.Boolean)">
      <summary>Saves a raster image of the current viewport scene on disk.</summary>
      <param name="drawScale">The image scale</param>
      <param name="lineWeightFactor">The factor applied to the line weight of the wire entities</param>
      <param name="fileName">A string that contains the name of the file to which to save the raster image</param>
      <param name="format">The file format of the raster image</param>
      <param name="drawBackground">If false, the drawing of the background is skipped</param>
      <param name="hdwAcceleration">If true, use the hardware acceleration (OpenGL only)</param>
      <remarks>The saved file will contain a 24-bit image.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.CopyToClipboardRaster(System.Single,System.Boolean,System.Boolean)">
      <summary>
            Copies a raster image of the current viewport scene on the clipboard.
            </summary>
      <param name="drawScale">The image scale</param>
      <param name="drawBackground">If true, the drawing of the background is skipped</param>
      <param name="hdwAcceleration">If true, use the hardware acceleration (OpenGL only)</param>
      <remarks>The copied image will be a 24-bit bitmap.</remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.CopyToClipboardRaster(System.Single,System.Boolean,System.Boolean)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.CopyToClipboardRaster(System.Single,System.Double,System.Boolean,System.Boolean)">
      <summary>
            Copies a raster image of the current viewport scene on the clipboard.
            </summary>
      <param name="drawScale">The image scale</param>
      <param name="lineWeightFactor">The factor applied to the line weight of the wire entities</param>
      <param name="drawBackground">If true, the drawing of the background is skipped</param>
      <param name="hdwAcceleration">If true, use the hardware acceleration (OpenGL)</param>
      <remarks>The copied image will be a 24-bit bitmap.</remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.CopyToClipboardRaster(System.Single,System.Boolean,System.Boolean)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ZoomCamera(System.Int32)">
      <summary>
            Zooms the view of the specified amount.
            </summary>
      <param name="dy">Zoom amount</param>
      <seealso cref="!:RotateCamera(Viewport,devDept.Geometry.Vector3D,devDept.Geometry.Vector3D)" />
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.PanCamera(System.Drawing.Point,System.Drawing.Point)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ZoomCamera(System.Int32,System.Boolean)">
      <summary>
            Zooms the view of the specified amount.
            </summary>
      <param name="dy">Zoom amount</param>
      <param name="animate">If true performs an animation when changing the view</param>
      <seealso cref="!:RotateCamera(Viewport,devDept.Geometry.Vector3D,devDept.Geometry.Vector3D)" />
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.PanCamera(System.Drawing.Point,System.Drawing.Point)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ZoomCamera(System.Drawing.Point,System.Int32)">
      <summary>
            Zooms the view of the specified amount.
            </summary>
      <param name="mousePos">The screen point to keep fixed</param>
      <param name="dy">The zoom amount</param>
      <seealso cref="!:RotateCamera(Viewport,devDept.Geometry.Vector3D,devDept.Geometry.Vector3D)" />
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.PanCamera(System.Drawing.Point,System.Drawing.Point)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ZoomCamera(System.Drawing.Point,System.Int32,System.Boolean)">
      <summary>
            Zooms the view of the specified amount.
            </summary>
      <param name="mousePos">The screen point to keep fixed</param>
      <param name="dy">The zoom amount</param>
      <param name="animate">If true performs an animation when changing the view</param>
      <seealso cref="!:RotateCamera(Viewport,devDept.Geometry.Vector3D,devDept.Geometry.Vector3D)" />
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.PanCamera(System.Drawing.Point,System.Drawing.Point)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ZoomCamera(System.Int32,System.Double)">
      <summary>
            Zooms the view of the specified amount.
            </summary>
      <param name="dy">Zoom amount</param>
      <param name="zoomSpeed">Zoom speed</param>
      <seealso cref="!:RotateCamera(Viewport,devDept.Geometry.Vector3D,devDept.Geometry.Vector3D)" />
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.PanCamera(System.Drawing.Point,System.Drawing.Point)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ZoomCamera(System.Int32,System.Double,System.Boolean)">
      <summary>
            Zooms the view of the specified amount.
            </summary>
      <param name="dy">Zoom amount</param>
      <param name="zoomSpeed">Zoom speed</param>
      <param name="animate">If true performs an animation when changing the view</param>
      <seealso cref="!:RotateCamera(Viewport,devDept.Geometry.Vector3D,devDept.Geometry.Vector3D)" />
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.PanCamera(System.Drawing.Point,System.Drawing.Point)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ZoomWindow(System.Drawing.Point,System.Drawing.Point)">
      <summary>
            Zooms to the specified window.
            </summary>
      <param name="p1">Window's diagonal start point in screen coordinates</param>
      <param name="p2">Window's diagonal end point in screen coordinates</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ZoomFit">
      <summary>
            Fits the entire model in the viewport control's client area.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ZoomFit(System.Int32)">
      <summary>
            Fits the entire model in the viewport control's client area.
            </summary>
      <param name="margin">Pixels margin from the border</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ZoomFit(System.Boolean,devDept.Eyeshot.Camera.perspectiveFitType)">
      <summary>
            Fits the entire model in the viewport control's client area.
            </summary>
      <param name="selectedOnly">If true, fits only selected entities.</param>
      <param name="perspectiveFitMode">Zoom fit accuracy in perspective projection mode</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ZoomFit(System.Boolean,devDept.Eyeshot.Camera.perspectiveFitType,System.Int32)">
      <summary>
            Fits the entire model in the viewport control's client area.
            </summary>
      <param name="selectedOnly">If true, fits only selected entities.</param>
      <param name="perspectiveFitMode">Zoom fit accuracy in perspective projection mode</param>
      <param name="margin">Pixels margin from the border</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ZoomFit(System.Collections.Generic.IList{devDept.Eyeshot.Entities.Entity},System.Boolean,devDept.Eyeshot.Camera.perspectiveFitType)">
      <summary>
            Fits the entire model in the viewport control's client area.
            </summary>
      <param name="entList">The list of entities to be fitted</param>
      <param name="selectedOnly">If true, fits only selected entities.</param>
      <param name="perspectiveFitMode">Zoom fit accuracy in perspective projection mode</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ZoomFit(System.Collections.Generic.IList{devDept.Eyeshot.Entities.Entity},System.Boolean,devDept.Eyeshot.Camera.perspectiveFitType,System.Int32,System.Boolean)">
      <summary>
            Fits the entire model in the viewport control's client area.
            </summary>
      <param name="entList">The list of entities to be fitted</param>
      <param name="selectedOnly">If true, fits only selected entities.</param>
      <param name="perspectiveFitMode">Zoom fit accuracy in perspective projection mode</param>
      <param name="margin">Pixels margin from the border</param>
      <param name="fitLabels">If true, fits also the labels</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ZoomFitSelectedLeaves">
      <summary>
            Fits the selected entities, including the ones inside BlockReferences.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ZoomFitSelectedLeaves(System.Int32)">
      <summary>
            Fits the selected entities, including the ones inside BlockReferences.
            </summary>
      <param name="margin">Pixels margin from the border</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ZoomFitSelectedLeaves(System.Int32,devDept.Eyeshot.Camera.perspectiveFitType)">
      <summary>
            Fits the selected entities, including the ones inside BlockReferences.
            </summary>
      <param name="margin">Pixels margin from the border</param>
      <param name="perspectiveFitMode">Zoom fit accuracy in perspective projection mode</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ZoomFit(System.Collections.Generic.IList{devDept.Eyeshot.SelectedItem})">
      <summary>
            Fits the selected items.
            </summary>
      <param name="items">The collection of entities to fit</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ZoomFit(System.Collections.Generic.IList{devDept.Eyeshot.SelectedItem},System.Int32)">
      <summary>
            Fits the selected items.
            </summary>
      <param name="items">The collection of entities to fit</param>
      <param name="margin">Pixels margin from the border</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.ZoomFit(System.Collections.Generic.IList{devDept.Eyeshot.SelectedItem},System.Int32,devDept.Eyeshot.Camera.perspectiveFitType)">
      <summary>
            Fits the selected items.
            </summary>
      <param name="items">The collection of entities to fit</param>
      <param name="margin">Pixels margin from the border</param>
      <param name="perspectiveFitMode">Zoom fit accuracy in perspective projection mode</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.PanCamera(System.Drawing.Point,System.Drawing.Point)">
      <summary>
            Pans the view from one screen point to the other.
            </summary>
      <param name="from">StartPoint point</param>
      <param name="to">End point</param>
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.ZoomCamera(System.Int32)" />
      <seealso cref="!:RotateCamera()" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.PanCamera(System.Drawing.Point,System.Drawing.Point,System.Boolean)">
      <summary>
            Pans the view from one screen point to the other.
            </summary>
      <param name="from">StartPoint point</param>
      <param name="to">End point</param>
      <param name="animate">If true performs an animation when changing the view</param>
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.ZoomCamera(System.Int32)" />
      <seealso cref="!:RotateCamera()" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.RotateCamera(System.Int32,System.Int32)">
      <summary>
            Rotates the view of the specified amount.
            </summary>
      <param name="dx">Horizontal rotation amount</param>
      <param name="dy">Vertical rotation amount</param>
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.ZoomCamera(System.Int32)" />
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.PanCamera(System.Drawing.Point,System.Drawing.Point)" />
      <remarks>The orientation of the camera is performed with an animation if <see cref="!:Design.AnimateCamera" /> is true</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.RotateCamera(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Rotates the view of the specified amount.
            </summary>
      <param name="dx">Horizontal rotation amount</param>
      <param name="dy">Vertical rotation amount</param>
      <param name="animate">If true performs an animation when changing the view</param>
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.ZoomCamera(System.Int32)" />
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.PanCamera(System.Drawing.Point,System.Drawing.Point)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.OrientCamera(devDept.Geometry.Point3D,devDept.Geometry.Point3D)">
      <summary>
            Orients the Camera between the two specified points.
            </summary>
      <param name="location">The camera location</param>
      <param name="target">The new camera target</param>
      <remarks>The orientation of the camera is performed with an animation if <see cref="!:Design.AnimateCamera" /> is true</remarks>
      <remarks>The <param nameref="location" /> parameter is used just to determine the direction. The final <see cref="P:devDept.Eyeshot.Camera.Location" /> depends on the <paramref name="target" /> and the <see cref="P:devDept.Eyeshot.Camera.Distance" /></remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.RotateCamera(System.Drawing.Point,System.Drawing.Point)">
      <summary>
            Rotates the view simulating the movement between two mouse position.
            </summary>
      <param name="mousePos1">The initial mouse position</param>
      <param name="mousePos2">The final mouse position</param>
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.ZoomCamera(System.Int32)" />
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.PanCamera(System.Drawing.Point,System.Drawing.Point)" />
      <remarks>The orientation of the camera is performed with an animation if <see cref="!:Design.AnimateCamera" /> is true</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.RotateCamera(System.Drawing.Point,System.Drawing.Point,System.Boolean)">
      <summary>
            Rotates the view simulating the movement between two mouse position.
            </summary>
      <param name="mousePos1">The initial mouse position</param>
      <param name="mousePos2">The final mouse position</param>
      <param name="animate">If true performs an animation when changing the view</param>
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.ZoomCamera(System.Int32)" />
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.PanCamera(System.Drawing.Point,System.Drawing.Point)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.RotateCamera(devDept.Geometry.Vector3D,System.Double,System.Boolean)">
      <summary>
            Rotates the view of the specified amount.
            </summary>
      <param name="axis">Rotation axis</param>
      <param name="rotAngleInDegrees">Rotation amount</param>
      <param name="trackBall">If true, the rotation is applied after the current rotation, else it's applied before</param>
      <remarks>The orientation of the camera is performed with an animation if <see cref="!:Design.AnimateCamera" /> is true</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.RotateCamera(devDept.Geometry.Vector3D,System.Double,System.Boolean,System.Boolean)">
      <summary>
            Rotates the view of the specified amount.
            </summary>
      <param name="axis">Rotation axis</param>
      <param name="rotAngleInDegrees">Rotation amount</param>
      <param name="trackBall">If true, the rotation is applied after the current rotation, else it's applied before</param>
      <param name="animate">If true performs an animation</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.RotateCamera(devDept.Geometry.Vector3D,devDept.Geometry.Vector3D)">
      <summary>
            Rotates the view of the specified amount.
            </summary>
      <param name="last">Previous axis</param>
      <param name="current">Current axis</param>
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.ZoomCamera(System.Int32)" />
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.RotateCamera(devDept.Geometry.Vector3D,devDept.Geometry.Vector3D)" />
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.PanCamera(System.Drawing.Point,System.Drawing.Point)" />
      <remarks>The orientation of the camera is performed with an animation if <see cref="!:Design.AnimateCamera" /> is true</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.RotateCamera(devDept.Geometry.Vector3D,devDept.Geometry.Vector3D,System.Boolean)">
      <summary>
            Rotates the view of the specified amount.
            </summary>
      <param name="last">Previous axis</param>
      <param name="current">Current axis</param>
      <param name="animate">If true performs an animation when changing the view</param>
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.ZoomCamera(System.Int32)" />
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.RotateCamera(devDept.Geometry.Vector3D,devDept.Geometry.Vector3D)" />
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.PanCamera(System.Drawing.Point,System.Drawing.Point)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.SetView(devDept.Geometry.Vector3D,System.Boolean,System.Int32,System.Boolean)">
      <summary>Sets the view direction of the camera to the specified direction.</summary>
      <param name="direction">The new camera direction</param>
      <param name="fit">if true fits the scene in the viewport</param>
      <param name="margin">Pixels margin from the border, if <paramref name="fit" /> is true</param>
      <param name="selectedOnly">If <paramref name="fit" /> is true, fits only the selected entities</param>
      <remarks>The orientation of the camera is performed with an animation if <see cref="!:Design.AnimateCamera" /> is true</remarks>
      <remarks>The direction points outside the screen, so the Camera is actually looking in the opposite direction.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.SetView(devDept.Geometry.Vector3D,System.Boolean,System.Boolean,System.Int32,System.Boolean)">
      <summary>Sets the view direction of the camera to the specified direction.</summary>
      <param name="direction">The new camera direction</param>
      <param name="fit">if true fits the scene in the viewport</param>
      <param name="animate">If true performs an animation when changing the view</param>
      <param name="margin">Pixels margin from the border, if <paramref name="fit" /> is true</param>
      <param name="selectedOnly">If <paramref name="fit" /> is true, fits only the selected entities</param>
      <remarks>The direction points outside the screen, so the Camera is actually looking in the opposite direction.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.SetView(devDept.Geometry.Vector3D,devDept.Geometry.Vector3D,System.Boolean,System.Int32,System.Boolean)">
      <summary>Sets the view direction of the camera to the specified direction.</summary>
      <param name="direction">The new camera direction</param>
      <param name="upVector">The camera up vector</param>
      <param name="fit">if true fits the scene in the viewport</param>
      <param name="margin">Pixels margin from the border, if <paramref name="fit" /> is true</param>
      <param name="selectedOnly">If <paramref name="fit" /> is true, fits only the selected entities</param>
      <remarks>The orientation of the camera is performed with an animation if <see cref="!:Design.AnimateCamera" /> is true</remarks>
      <remarks>The direction points outside the screen, so the Camera is actually looking in the opposite direction.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.SetView(devDept.Geometry.Vector3D,devDept.Geometry.Vector3D,System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Collections.Generic.IList{devDept.Eyeshot.Entities.Entity})">
      <summary>Sets the view direction of the camera to the specified direction.</summary>
      <param name="direction">The new camera direction</param>
      <param name="upVector">The camera up vector</param>
      <param name="fit">if true fits the scene in the viewport</param>
      <param name="animate">If true performs an animation when changing the view</param>
      <param name="margin">Pixels margin from the border, if <paramref name="fit" /> is true</param>
      <param name="selectedOnly">If <paramref name="fit" /> is true, fits only the selected entities</param>
      <param name="entList">When <paramref name="fit" /> is true, the list of entities to fit.</param>
      <remarks>The direction points outside the screen, so the Camera is actually looking in the opposite direction.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Viewport.RotateCamera(System.Drawing.Point)">
      <summary>Sets the view direction as the normal of the plane under the mouse cursor.</summary>
      <param name="mouseLocation">Location of the mouse</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.Rotate">
      <summary>
            Gets or sets the Rotate settings.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.CenterOfRotation">
      <summary>
            Gets the current center of rotation.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.Navigation">
      <summary>
            Gets or sets the Navigation settings for the <see cref="F:devDept.Eyeshot.Camera.navigationType.Walk" /> and <see cref="F:devDept.Eyeshot.Camera.navigationType.Fly" /> camera navigation modes.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.Zoom">
      <summary>
            Gets or sets the Zoom settings.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Viewport.Pan">
      <summary>
            Gets or sets the Pan settings.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.TurboSettings.MaxComplexity">
      <summary>
            Gets or sets the number of objects beyond which fast Turbo kicks-in.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.TurboSettings.OperatingMode">
      <summary>
            Gets or sets the secondary representation build mode.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.TurboSettings.Enabled">
      <summary>
            Returns true when Turbo is active: scene complexity &gt; <see cref="P:devDept.Eyeshot.Control.TurboSettings.MaxComplexity" /></summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.TurboSettings.DetailedDrawingDelay">
      <summary>
            Gets or sets the time, in milliseconds, before to start the last frame detailed drawing after a mouse action (e.g. Zoom, Pan, Rotate, Resize) during Turbo mode.
            </summary>
      <remarks> Set 0 to disable(Default is 1000ms).</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.TurboSettings.Lag">
      <summary>
            Gets the (last) regeneration time in milliseconds.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.operatingType">
      <summary>
            Secondary representation operating type definition.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.operatingType.Geometry">
      <summary>
            Wireframe and polygons
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.operatingType.GeometryAndEdges">
      <summary>
            Wireframe, polygons and edges (default).
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.operatingType.Edges">
      <summary>
            Wireframe and edges
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.operatingType.Boxes">
      <summary>
            Super-fast, mostly for debugging purpose.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.Workspace">
      <summary>
            Base abstract class for Eyeshot controls.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.Mouse3D">
      <summary>
            3D mouse settings.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.OnMouse3DMove(System.Object,devDept.Eyeshot.Control.Mouse3D.MoveEventArgs)">
      <summary>
            Occurs every <see cref="E:devDept.Eyeshot.Control.Workspace.Mouse3DMove" /> event.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.OnMouse3DButtonUp(System.Object,devDept.Eyeshot.Control.Mouse3D.ButtonEventArgs)">
      <summary>
            Occurs every <see cref="E:devDept.Eyeshot.Control.Workspace.Mouse3DButtonUp" /> event.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.OnMouse3DButtonDown(System.Object,devDept.Eyeshot.Control.Mouse3D.ButtonEventArgs)">
      <summary>
            Occurs every <see cref="E:devDept.Eyeshot.Control.Workspace.Mouse3DButtonDown" /> event.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data</param>
    </member>
    <member name="E:devDept.Eyeshot.Control.Workspace.Mouse3DButtonDown">
      <summary>
            Occurs when a Mouse3D button is pressed.
            </summary>
    </member>
    <member name="E:devDept.Eyeshot.Control.Workspace.Mouse3DButtonUp">
      <summary>
            Occurs when a Mouse3D button is pressed.
            </summary>
    </member>
    <member name="E:devDept.Eyeshot.Control.Workspace.Mouse3DMove">
      <summary>
            Occurs when a Mouse3D movement operation is performed.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.AddMouse3DContextMenuItems">
      <summary>
            Adds the context menu items related to the Mouse3D.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.RemoveMouse3DContextMenuItems">
      <summary>
            Removes the context menu items related to the Mouse3D.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.MultiTouch">
      <summary>
            Gets or sets the Multitouch settings.
            </summary>
    </member>
    <member name="E:devDept.Eyeshot.Control.Workspace.MultiTouchDown">
      <summary>
            Occurs when a multitouch surface is pressed.
            </summary>
    </member>
    <member name="E:devDept.Eyeshot.Control.Workspace.MultiTouchUp">
      <summary>
            Occurs when a multitouch surface is released.
            </summary>
    </member>
    <member name="E:devDept.Eyeshot.Control.Workspace.MultiTouchMove">
      <summary>
            Occurs when a multitouch movement is performed.
            </summary>
    </member>
    <member name="E:devDept.Eyeshot.Control.Workspace.MultiTouchDoubleClick">
      <summary>
            Occurs when a multitouch surface is double-clicked.
            </summary>
    </member>
    <member name="E:devDept.Eyeshot.Control.Workspace.MultiTouchClick">
      <summary>
            Occurs when a finger touches and holds a multitouch surface.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.OnMultiTouchMove(System.Object,devDept.Eyeshot.Control.MultiTouch.TouchEventArgs)">
      <summary>
            Occurs every <see cref="E:devDept.Eyeshot.Control.Workspace.MultiTouchMove" /> event.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.OnMultiTouchDown(System.Object,devDept.Eyeshot.Control.MultiTouch.TouchEventArgs)">
      <summary>
            Occurs every <see cref="E:devDept.Eyeshot.Control.Workspace.MultiTouchDown" /> event.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.OnMultiTouchUp(System.Object,devDept.Eyeshot.Control.MultiTouch.TouchEventArgs)">
      <summary>
            Occurs every <see cref="E:devDept.Eyeshot.Control.Workspace.MultiTouchUp" /> event.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.OnMultiTouchClick(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>
            Occurs every <see cref="E:devDept.Eyeshot.Control.Workspace.MultiTouchClick" /> event.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.OnMultiTouchDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>
            Occurs every <see cref="E:devDept.Eyeshot.Control.Workspace.MultiTouchDoubleClick" /> event.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.Document">
      <summary>
            Gets the <see cref="T:devDept.Eyeshot.Document" />.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.SetParentHandle(System.IntPtr)">
      <summary>
            Sets the handle of the parent control.
            </summary>
      <param name="hwnd">The handle of the parent to set.</param>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.GetParentHandle" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.GetParentHandle">
      <summary>
            Gets the handle of the parent control.
            </summary>
      <returns>
            The handle of the parent.
            </returns>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.SetParentHandle(System.IntPtr)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.GetAssembly(System.String@,System.String@,System.String@,System.Version@,System.String@)">
      <summary>
            Gets the currently loaded assembly.
            </summary>
      <param name="product">Gets assembly product</param>
      <param name="title">Gets assembly title</param>
      <param name="company">Gets assembly company</param>
      <param name="version">Gets assembly version</param>
      <param name="edition">Gets assembly edition</param>
      <returns>The currently loaded assembly.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.GetInstallFolder">
      <summary>
            Gets the Eyeshot installation folder.
            </summary>
      <returns>The full path where the Eyeshot assemblies are located.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.GetSamplesFolder">
      <summary>
            Gets the Eyeshot samples path.
            </summary>
      <returns>The full path where Eyeshot's source code samples are located.</returns>
    </member>
    <member name="E:devDept.Eyeshot.Control.Workspace.BoundingBoxChanged">
      <summary>
            Occurs when the scene bounding box has changed.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.IsHardwareAccelerated">
      <summary>Returns true if OpenGL hardware acceleration is currently in use.</summary>
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.AskForHardwareAcceleration">AskForHardwareAcceleration Property</seealso>
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.ForceHardwareAcceleration">ForceHardwareAcceleration Property</seealso>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.IsAntiAliasingAvailable">
      <summary>Returns true if Full Screen Anti-Aliasing is available.</summary>
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.AntiAliasing" />
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.AskForAntiAliasing" />
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.AntiAliasingSamples" />
      <remarks>This value is written during the control's initialization, so it must be read after the control is correctly loaded.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.ForceHardwareAcceleration">
      <summary>Forces accelerated hardware modes. By default, Eyeshot automatically disables hardware acceleration on some embedded
            GPUs to obtain the maximum level of graphical output consistency between all hardware. In these cases, enabling this property 
            will forcibly activate hardware acceleration, though the resulting graphics output may be unpredictable.</summary>
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.AskForAntiAliasing" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.IsBestAdapterAvailable">
      <summary>Indicates whether the best adapter is available for the renderer initialization or not.</summary>
      <remarks>
        <para>This value is written during the control's initialization, so it must be read after the control is correctly loaded.</para>
        <para>This property is not valid when the <see cref="P:devDept.Eyeshot.Control.WorkspaceBase.Renderer" /> is <see cref="F:devDept.Eyeshot.Control.rendererType.OpenGL" />.</para>
      </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.Entities">
      <summary>
            Gets the EntityList of the <see cref="P:devDept.Eyeshot.Control.Workspace.CurrentBlock" />. This collection contains the entities displayed in the viewport.
            </summary>
      <seealso cref="P:devDept.Eyeshot.Block.Entities" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.SetCurrent(devDept.Eyeshot.Entities.BlockReference,System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.OpenCurrentBlock(System.Boolean)" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.TempEntities">
      <summary>Temporary Entity collection. This collection contains the entities displayed in the viewport on top of the others as temporary entities.</summary>
      <remarks>
            Only <see cref="T:devDept.Eyeshot.Entities.IFace">IFace</see> and <see cref="T:devDept.Eyeshot.Entities.ICurve">ICurve</see> types are supported into this collection.
            Each entity added to this list needs to the regenerated first.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.Blocks">
      <summary>
            Gets or sets the blocks collection.       
            </summary>
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.Entities">
      </seealso>
      <seealso cref="T:devDept.Eyeshot.Entities.BlockReference">
      </seealso>
      <exception cref="T:devDept.EyeshotException">Thrown when trying to set a new collection already linked to another <see cref="P:devDept.Eyeshot.Control.Workspace.Document" />.</exception>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.RootBlock">
      <summary>
            Gets the root block.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.RemoveJittering(System.String)">
      <summary>        
            Creates a block with the selected <see cref="P:devDept.Eyeshot.Control.Workspace.Entities" />, computes the center of their bounding box, translates them all of the negative of that quantity and returns a BlockReference to that block.
            </summary>
      <param name="blockName">The name of the block that will contain the selected entities.</param>
      <returns>The blockReference referring to the created block.</returns>
      <remarks>When the entities are very far from the origin their appearance on screen may become very compromised, and the camera may shake badly when moving/rotating the view. To fix this issue you can select these entities and call this method.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.RemoveJittering(devDept.Eyeshot.Entities.BlockReference)">
      <summary>        
            Gets the blockreference entities, computes the center of their bounding box, translates them all of the negative of that quantity and translates the blockreference back to the original position.
            </summary>
      <param name="blockReference">The blockreference name of the block that will contain the selected entities.</param>
      <remarks>When the entities are very far from the origin their appearance on screen may become very compromised, and the camera may shake badly when moving/rotating the view. To fix this issue you can select these entities and call this method.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.Layers">
      <summary>
            Gets or sets the layers collection.       
            </summary>
      <remarks>If the collection is empty,  the "Default" layer is added.</remarks>
      <exception cref="T:devDept.EyeshotException">Thrown when trying to set a new collection already linked to another <see cref="P:devDept.Eyeshot.Control.Workspace.Document" />.</exception>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.LineTypes">
      <summary>
            Gets or sets the line types collection.       
            </summary>
      <remarks>"ByBlock", "ByLayer", "Continuous" are reserved names and should not be used to avoid issues when exporting.</remarks>
      <exception cref="T:devDept.EyeshotException">Thrown when trying to set a new collection already linked to another <see cref="P:devDept.Eyeshot.Control.Workspace.Document" />.</exception>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.HatchPatterns">
      <summary>
            Gets or sets the hatch patterns collection.       
            </summary>
      <exception cref="T:devDept.EyeshotException">Thrown when trying to set a new collection already linked to another <see cref="P:devDept.Eyeshot.Control.Workspace.Document" />.</exception>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.TextStyles">
      <summary>
            Gets or sets the text styles collection.
            </summary>
      <remarks>The "Default" text style is added if missing.</remarks>
      <exception cref="T:devDept.EyeshotException">Thrown when trying to set a new collection already linked to another <see cref="P:devDept.Eyeshot.Control.Workspace.Document" />.</exception>
    </member>
    <member name="F:devDept.Eyeshot.Control.Workspace.hasFocus">
      <summary>
            Hold the focus status.
            </summary>
    </member>
    <member name="E:devDept.Eyeshot.Control.Workspace.ProgressChanged">
      <summary>
            Occurs when the read/write progress has changed.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.IsDesignMode">
      <summary>
            Gets a boolean indicating whether the control is running at design time.
            </summary>
      <remarks>For internal use only.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.InstanceId">
      <summary>
            For internal use only. Gets the instance id for the logging.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.Clear">
      <summary>
            Clears all the viewport master collections: entities, tempEntities, blocks, layers, materials, text styles, line types and labels.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ScaleForDPI">
      <summary>
            Scales the element for high DPI settings.
            </summary>
      <seealso cref="M:devDept.Geometry.UtilityEx.GetScalingLevel" />
      <remarks>This method needs to be called if the element is added outside of the InitializeComponents() to adjust the rendering for high dpi settings.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.InitializeViewports">
      <summary>
            Ensures that at least one <see cref="T:devDept.Eyeshot.Control.Viewport" /> is present in the <see cref="!:devDept.Eyeshot.Design.Viewports" /> collection.
            </summary>
      <remarks>This method must be called only when creating the <see cref="!:devDept.Eyeshot.Design" /> object at run time. It must not be called when creating the object at design time.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.CompileUserInterfaceElements">
      <summary>
            Compiles 3D user interface elements like the origin symbol, the bitmap background, the FEM restraint and load symbols, etc.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.CompileUserInterfaceElements(devDept.Eyeshot.Control.Viewport)">
      <summary>
            Compiles 3D user interface elements like the origin symbol, the bitmap background, the FEM restraint and load symbols, etc.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.Font">
      <summary>
            Gets or sets viewport font (WinForms).
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.ErrorInPaint">
      <summary>
            Gets a value indicating if an error occurred during paint.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.Workspace.ErrorOccurredEventArgs">
      <summary>Provides data for the <see cref="E:devDept.Eyeshot.Control.Workspace.ErrorOccurred" /> event.</summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.ErrorOccurredEventArgs.Message">
      <summary>
            Gets the error message.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.ErrorOccurredEventArgs.StackTrace">
      <summary>
            Gets the stack trace of the error.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.ErrorOccurredEventArgs.ObjectNotCompiled">
      <summary>
            Gets the object whose not compiled status caused the error.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.Workspace.ErrorEventHandler">
      <summary>Represents the method that will handle the <see cref="E:devDept.Eyeshot.Control.Workspace.ErrorOccurred" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="E:devDept.Eyeshot.Control.Workspace.ErrorOccurred" /> that contains the event data.</param>
    </member>
    <member name="E:devDept.Eyeshot.Control.Workspace.ErrorOccurred">
      <summary>
            Occurs when an error happens during the drawing.
            </summary>
      <remarks>When an error occurs during the drawing, to make the control usable again it's necessary to call the <see cref="M:devDept.Eyeshot.Control.Workspace.Clear" /></remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ResizeBegin">
      <remarks>You need to subscribe to the ResizeBegin event of the parent control and call this method there.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ResizeViewports">
      <summary>
            Resizes the Viewports.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.OnLostFocus(System.EventArgs)">
      <summary>
            Synchronize <paramref name="hasFocus" /> parameter, reset <paramref name="action" />, redraw the control.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.FireProgressChanged(devDept.WorkUnit.ProgressChangedEventArgs)">
      <summary>
            Raises the <see cref="T:System.ComponentModel.ProgressChangedEventHandler">ProgressChanged</see> event.
            </summary>
      <param name="e">A <see cref="T:devDept.WorkUnit.ProgressChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.SaveScene(System.String)">
      <summary>
            Saves the current scene on disk, including entities, textures, blocks and
            layouts.
            </summary>
      <remarks>
        <para>This command can be very attractive to save and load models in you program
                but has a serious pitfall: it is based on standard .NET Serialization. This means
                that any change on the Eyeshot binaries (dll versions, dll names, type names, etc.) will
                invalidate all your existing files. 
                <strong>We strongly recommend</strong> to use the Eyeshot proprietary file format or to
                implement your own file format (simply writing entities properties and recreating
                entities during file loading) if you need continuity between different Eyeshot DLL
                versions. Another option can be to use one of the standard format supported
                (DWG/DXF/IGES) where applicable.</para>
      </remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.LoadScene(System.String)">LoadScene Method</seealso>
      <param name="fileName">File name</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.SaveScene(System.IO.Stream)">
      <summary>
            Saves the current scene on disk, including entities, textures, blocks and
            layouts.
            </summary>
      <remarks>
        <para>This command can be very attractive to save and load models in you program
                but has a serious pitfall: it is based on standard .NET Serialization. This means
                that any change on the Eyeshot binaries (dll versions, dll names, type names, etc.) will
                invalidate all your existing files.
                <strong>We strongly recommend</strong> to use the Eyeshot proprietary file format or to
                implement your own file format (simply writing entities properties and recreating
                entities during file loading) if you need continuity between different Eyeshot DLL
                versions. Another option can be to use one of the standard format supported
                (DWG/DXF/IGES) where applicable.</para>
        <para>The closing of the stream is delegated to you.</para>
      </remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.LoadScene(System.IO.Stream)">LoadScene Method</seealso>
      <param name="stream">The file stream</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.LoadScene(System.String)">
      <summary>
        <para>Restores the current scene from disk, including entities, textures, blocks
                and labels.</para>
      </summary>
      <remarks>
        <para>This command can be very attractive to save and load models in you program
                but has a serious pitfall: it is based on standard .NET Serialization. This means
                that any change on the Eyeshot binaries (dll versions, dll names, type names, etc.) will
                invalidate all your existing files. 
                <strong>We strongly recommend</strong> to use the Eyeshot proprietary file format or to
                implement your own file format (simply writing entities properties and recreating
                entities during file loading) if you need continuity between different Eyeshot DLL
                versions. Another option can be to use one of the standard format supported
                (DWG/DXF/IGES) where applicable.</para>
      </remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.SaveScene(System.String)">SaveScene Method</seealso>
      <param name="fileName">File name</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.LoadScene(System.IO.Stream)">
      <summary>
        <para>Restores the current scene from disk, including entities, textures, blocks
                and labels.</para>
      </summary>
      <remarks>
        <para>This command can be very attractive to save and load models in you program
                but has a serious pitfall: it is based on standard .NET Serialization. This means
                that any change on the Eyeshot binaries (dll versions, dll names, type names, etc.) will
                invalidate all your existing files. 
                <strong>We strongly recommend</strong> to use the Eyeshot proprietary file format or to
                implement your own file format (simply writing entities properties and recreating
                entities during file loading) if you need continuity between different Eyeshot DLL
                versions. Another option can be to use one of the standard format supported
                (DWG/DXF/IGES) where applicable.</para>
        <para>The closing of the stream is delegated to you.</para>
      </remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.SaveScene(System.IO.Stream)">SaveScene Method</seealso>
      <param name="stream">The file stream</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.EvaluateBoundingBox(System.Collections.Generic.ICollection{devDept.Eyeshot.Entities.Entity},devDept.Geometry.Point3D@,devDept.Geometry.Point3D@)">
      <summary>
            Evaluates the bounding box of a collection of entities without taking care of entity visibility.
            </summary>
      <param name="entList">The collection of entities</param>
      <param name="globalMin">Output the min corner</param>
      <param name="globalMax">Output the max corner</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.SelectionBoxColors">
      <summary>
            Gets or sets the colors used to draw the selection box and polygon.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.MagnifyingGlass">
      <summary>
            Gets or sets the settings for the magnifying glass displayed under the mouse cursor.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.UseFrameBufferObject">
      <summary>
            When true the frame buffer objects are used. Affects the quality of Realistic shadows. For debugging purpose only.
            </summary>
      <remarks>When using Direct3D renderer, disabling this will disable also the realistic shadows.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.UseShaders">
      <summary>
            If true, the <see cref="F:devDept.Eyeshot.Control.rendererType.OpenGL" /> renderer uses Phong shading for better lighting, has the <see cref="P:devDept.Eyeshot.Control.DisplayModeSettingsRendered.PlanarReflections" /> with a fading out effect and better performances for the <see cref="F:devDept.Graphics.shadowType.Realistic" /> shadows.
            </summary>
      <remarks>With the <see cref="F:devDept.Eyeshot.Control.rendererType.Direct3D" /> renderer it doesn't have any effect.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.AttributeReferenceVisibilityMode">
      <summary>
            Gets or sets the AttributeReferences visibility mode.
            </summary>
      <seealso cref="T:devDept.Eyeshot.AttributeReference" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.Invalidate">
      <summary>
            Invalidates the entire surface of the control and causes the control to be redrawn.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.DrawScene(devDept.Eyeshot.Control.Viewport,System.Single,System.Single,System.Drawing.RectangleF,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Main drawing method.
            </summary>
      <param name="viewport">The viewport to draw</param>
      <param name="drawScale">Image resolution scale</param>
      <param name="lineWeightFactor">The factor applied to the line weight of the wire entities</param>
      <param name="zoomRect">Zoom rectangle</param>
      <param name="drawOverlay">If true, the overlaying UI elements are drawn</param>
      <param name="swapBuffer">If true, front and back OpenGL buffers will be swapped</param>
      <param name="designTime">
      </param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.DrawBackground(devDept.Eyeshot.DrawSceneParams)">
      <summary>
            Draws the Background of the Workspace control.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.AccurateTransparency">
      <summary>
            When true, the Accurate Transparency mode is activated. Accurate Transparency provides slower but more accurate semi-transparent object drawing
            with support for non-concave objects and for objects intersection.
            </summary>
      <remarks>For better rendering of transparent entities with <see cref="P:devDept.Eyeshot.Control.Workspace.AccurateTransparency" /> turned off, override the <see cref="M:devDept.Eyeshot.Control.Workspace.DrawViewport(devDept.Eyeshot.DrawSceneParams)" /> and call the <see cref="M:devDept.Eyeshot.Control.Workspace.SortEntitiesForTransparency(devDept.Eyeshot.Control.Viewport,System.Collections.Generic.IList{devDept.Eyeshot.Entities.Entity})" />.
            It does not works with selection inside components or of the faces.</remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.SortEntitiesForTransparency(devDept.Eyeshot.Control.Viewport,System.Collections.Generic.IList{devDept.Eyeshot.Entities.Entity})" />
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.AssemblySelectionMode" />
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.SelectionFilterMode" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.DrawVertices(devDept.Eyeshot.DrawEntitiesParams)">
      <summary>
            Draws the vertices of the entities.
            </summary>
      <remarks>When <see cref="P:devDept.Eyeshot.Control.Viewport.ShowVertices" /> is true.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ComputeNonCurrentEntityColor(devDept.Eyeshot.Entities.Entity,System.Drawing.Color,System.Boolean,System.Boolean)">
      <summary>
            Gets the color used to draw the given non-current entity.
            </summary>
      <param name="entity">The entity being processed</param>
      <param name="color">The color of the entity</param>
      <returns>The color used to draw the entity not belonging to the current BlockReference.</returns>
      <remarks>See <see cref="M:devDept.Eyeshot.Control.Workspace.SetCurrent(devDept.Eyeshot.Entities.BlockReference,System.Boolean)" /></remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.GetEntityLineWeight(devDept.Eyeshot.Entities.Entity,devDept.Eyeshot.Entities.Entity,devDept.Eyeshot.LayerKeyedCollection)">
      <summary>
            Gets the entity line weight.
            </summary>
      <param name="ent">The entity</param>
      <param name="parent">The parent BlockReference</param>
      <param name="layers">The layers list</param>
      <returns>The line entity.</returns>
      <remarks>If the parent is not null and the <see cref="P:devDept.Eyeshot.Entities.Entity.LineWeightMethod" /> is <see cref="F:devDept.Eyeshot.Entities.colorMethodType.byParent" /> it recursively computes the LineWeight of the parent.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.DrawOverlay(devDept.Eyeshot.DrawSceneParams)">
      <summary>
            Draws overlaying UI elements.
            </summary>
      <param name="data">The draw data</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.Draw3D(devDept.Eyeshot.DrawSceneParams)">
      <summary>
            Draws design, shadow and bounding box.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.SortEntitiesForTransparency(devDept.Eyeshot.Control.Viewport,System.Collections.Generic.IList{devDept.Eyeshot.Entities.Entity})">
      <summary>
            Sorts the transparent entities from the farthest to the nearest to the camera for better rendering. Don't use if <see cref="P:devDept.Eyeshot.Control.Design.MinimumFramerate" /> is enabled.
            </summary>
      <param name="viewport">The viewport</param>
      <returns>The sorted list of entities.</returns>
      <remarks>It can be called in an Workspace derived class in the <see cref="M:devDept.Eyeshot.Control.Workspace.DrawViewport(devDept.Eyeshot.DrawSceneParams)" /> method when <see cref="P:devDept.Eyeshot.Control.Workspace.AccurateTransparency" /> is false.</remarks>
      <example>
            Usage Sample.
            	<code lang="CS" title="[Ordered Transparency]">
            public class MyDesign : Design
            {
                protected override void DrawViewport(DrawSceneParams myParams)
                {
                    myParams.Entities = SortEntitiesForTransparency(myParams.Viewport);
                    base.DrawViewport(myParams);
                }
            }
            </code><code lang="VB" title="[Ordered Transparency]">
            Public Class MyDesign
            Inherits Design
                Protected Overrides Sub DrawViewport(myParams As DrawSceneParams)
                    myParams.Entities = SortEntitiesForTransparency(myParams.Viewport)
                    MyBase.DrawViewport(myParams)
                End Sub
            End Class
            </code></example>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.DrawShadow(System.Single)">
      <summary>
            Draws the design shadow
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.PaintBackBuffer">
      <summary>
            Paints the viewport surface without redrawing the whole scene.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.SwapBuffers">
      <summary>
            Swaps the front and back buffers.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.DrawViewport(devDept.Eyeshot.DrawSceneParams)">
      <summary>
            Draws the viewport.
            </summary>
      <param name="myParams">The parameters</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.DrawViewportBackground(devDept.Eyeshot.DrawSceneParams)">
      <summary>
            Draws the viewport background and reflections.
            </summary>
      <param name="data">The drawing parameters</param>
      <remarks>Override this to draw some custom graphics before the scene is drawn.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.CreateShaderParams(devDept.Eyeshot.DrawSceneParams)">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.GetPresetManagerThumbnail(System.Int32)">
      <summary>
            Returns a thumbnail bitmap of the whole Workspace control. The maximum size is 256x256.
            </summary>
      <param name="thumbnailSize">Desired size of the biggest dimension of the Workspace control.</param>
      <returns>The bitmap of the current Workspace control with viewports' borders included.</returns>
      <remarks>For internal use only.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.Turbo">
      <summary>
            Gets or sets the FastZPR settings. When FastZPR is active a simplified representation of the current geometry is drawn during dynamic movements (Zoom/Pan/Rotate).
            </summary>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.UpdateBoundingBox" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.DrawText(System.Int32,System.Int32,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.ContentAlignment)">
      <summary>
            Draws a text on the <see cref="T:devDept.Eyeshot.Control.Workspace" />'s client area.
            </summary>
      <param name="x">The text's x coordinate</param>
      <param name="y">The text's y coordinate (from the bottom of the viewport)</param>
      <param name="text">The text string to draw</param>
      <param name="textFont">The text font</param>
      <param name="textColor">The text color</param>
      <param name="textAlign">The text alignment</param>
      <returns>The size of the text bitmap</returns>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.DrawTextOutlined(System.Int32,System.Int32,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Single,System.Drawing.ContentAlignment)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.DrawImage(System.Int32,System.Int32,System.Drawing.Bitmap,System.Drawing.ContentAlignment,System.Boolean,System.Boolean)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.DrawText(System.Int32,System.Int32,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.ContentAlignment)">
      <summary>
            Draws a text on the <see cref="T:devDept.Eyeshot.Control.Workspace" />'s client area.
            </summary>
      <param name="x">The text's x coordinate</param>
      <param name="y">The text's y coordinate (from the bottom of the viewport)</param>
      <param name="text">The text string to draw</param>
      <param name="textFont">The text font</param>
      <param name="textColor">The text color</param>
      <param name="fillColor">The background color (can be semi-transparent)</param>
      <param name="textAlign">The text alignment</param>
      <returns>The size of the text bitmap</returns>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.DrawTextOutlined(System.Int32,System.Int32,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Single,System.Drawing.ContentAlignment)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.DrawImage(System.Int32,System.Int32,System.Drawing.Bitmap,System.Drawing.ContentAlignment,System.Boolean,System.Boolean)" />
      <remarks>For better performances use the <see cref="M:devDept.Eyeshot.Control.Workspace.GetTextImage(System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.ContentAlignment,System.Drawing.RotateFlipType,System.Boolean)" /> to get the text image, then create a texture and draw the texture directly</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.DrawText(System.Int32,System.Int32,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.ContentAlignment,System.Drawing.RotateFlipType)">
      <summary>
            Draws a text on the <see cref="T:devDept.Eyeshot.Control.Workspace" />'s client area.
            </summary>
      <param name="x">The text x coordinate</param>
      <param name="y">The text y coordinate (from the bottom of the viewport)</param>
      <param name="text">The text string to draw</param>
      <param name="textFont">The text font</param>
      <param name="textColor">The text color</param>
      <param name="fillColor">The background color (can be semi-transparent)</param>
      <param name="textAlign">The text alignment</param>
      <param name="rotateFlip">The text rotation</param>
      <returns>The size of the text bitmap</returns>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.DrawTextOutlined(System.Int32,System.Int32,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Single,System.Drawing.ContentAlignment)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.DrawImage(System.Int32,System.Int32,System.Drawing.Bitmap,System.Drawing.ContentAlignment,System.Boolean,System.Boolean)" />
      <remarks>For better performances use <see cref="M:devDept.Eyeshot.Control.Workspace.GetTextImage(System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.ContentAlignment,System.Drawing.RotateFlipType,System.Boolean)" />, create the texture and draw it directly.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.GetTextImage(System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.ContentAlignment,System.Drawing.RotateFlipType,System.Boolean)">
      <summary>
            Gets the text bitmap.
            </summary>
      <param name="text">The text</param>
      <param name="font">The text font</param>
      <param name="color">The text color</param>
      <param name="fillColor">The background color</param>
      <param name="textAlign">The text alignment (used to clip the image when the background is transparent)</param>
      <param name="rotateFlip">The rotation and flip to apply to the bitmap</param>
      <param name="antialias">If true, the text is antialiased</param>
      <returns>The text bitmap</returns>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.GetTextOutlinedImage(System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.RotateFlipType,System.Single)" />
      <example>
            The following code demonstrates how to efficiently draw a text on screen
            <code lang="CS" title="[New Example]">
            private TextureBase texture1;
            private bool firstTime = false;
            protected override void DrawOverlay(DrawSceneParams data)
            {
                base.DrawOverlay(data);
            
                if (!firstTime)
                {
                    firstTime = true;
            
                    Font font = new Font("Tahoma", 50, FontStyle.Italic);
            
                    Image image1 = GetTextImage("My Text", font, Color.Red, Color.Transparent, ContentAlignment.TopRight, RotateFlipType.RotateNoneFlipY);
                    texture1 = renderContext.CreateTexture2D(image1, textureFilteringFunctionType.Nearest, textureFilteringFunctionType.Nearest, true, true);        
                    image1.Dispose();
                    font.Dispose();
                }
            
                DrawTexture(texture1, 100, 100, ContentAlignment.BottomLeft);        
                // Remember to Dispose the texture when it is no more needed, or before quitting the application
            }
            </code><code lang="VB" title="[New Example]">
            Private texture1 As TextureBase
            Private firstTime As Boolean = False
            Protected Overrides Sub DrawOverlay(data As DrawSceneParams)
            	MyBase.DrawOverlay(data)
            
            	If Not firstTime Then
            		firstTime = True
            
            		Dim font As New Font("Tahoma", 50, FontStyle.Italic)
            
            		Dim image1 As Image = GetTextImage("My Text", font, Color.Red, Color.Transparent, ContentAlignment.TopRight, RotateFlipType.RotateNoneFlipY)
            		texture1 = renderContext.CreateTexture2D(image1, textureFilteringFunctionType.Nearest, textureFilteringFunctionType.Nearest, True, True)
                    image1.Dispose()
            		font.Dispose()
            	End If
            
            	DrawTexture(texture1, 100, 100, ContentAlignment.BottomLeft)
                ' Remember to Dispose the texture when it is no more needed, or before quitting the application
            End Sub
            
            </code></example>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.DrawTexture(devDept.Graphics.TextureBase,System.Int32,System.Int32,System.Drawing.ContentAlignment,System.Boolean)">
      <summary>
            Draws a texture.
            </summary>
      <param name="texture">The texture to draw</param>
      <param name="x">The texture x position</param>
      <param name="y">The texture y position</param>
      <param name="align">The texture alignment</param>
      <param name="flipY">If true, flips the image in the Y direction</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.DrawTextOutlined(System.Int32,System.Int32,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Single,System.Drawing.ContentAlignment)">
      <summary>
            Draws a text on the <see cref="T:devDept.Eyeshot.Control.Workspace" />'s client area.
            </summary>
      <param name="x">The text's x coordinate</param>
      <param name="y">The text's y coordinate (from the bottom of the viewport)</param>
      <param name="text">The text string to draw</param>
      <param name="textFont">The text font</param>
      <param name="textColor">The text color</param>
      <param name="outlineColor">The outline color</param>
      <param name="outlineThickness">The outline thickness</param>
      <param name="textAlign">The text alignment</param>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.DrawText(System.Int32,System.Int32,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.ContentAlignment)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.DrawImage(System.Int32,System.Int32,System.Drawing.Bitmap,System.Drawing.ContentAlignment,System.Boolean,System.Boolean)" />
            /// <remarks>For better performances use <see cref="M:devDept.Eyeshot.Control.Workspace.GetTextOutlinedImage(System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.RotateFlipType,System.Single)" />, create the texture and draw it directly.</remarks></member>
    <member name="M:devDept.Eyeshot.Control.Workspace.DrawImage(System.Int32,System.Int32,System.Drawing.Bitmap)">
      <summary>
            Draws an image on the <see cref="T:devDept.Eyeshot.Control.Workspace" />'s client area.
            </summary>
      <param name="x">The image's x corrdinate</param>
      <param name="y">The image's y coordinate (from the bottom of the viewport)</param>
      <param name="image">The image to draw</param>
      <remarks>Alpha channel is supported. Use the <see cref="M:System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)" /> method to flip the image upside down.</remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.DrawText(System.Int32,System.Int32,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.ContentAlignment)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.DrawTextOutlined(System.Int32,System.Int32,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Single,System.Drawing.ContentAlignment)" />
      <remarks>For better performances create a texture and call <see cref="M:devDept.Eyeshot.Control.Workspace.DrawTexture(devDept.Graphics.TextureBase,System.Int32,System.Int32,System.Drawing.ContentAlignment,System.Boolean)" /> (see code below)</remarks>
      <example>
            The following code demonstrates how to efficiently draw an image on screen
            <code lang="CS" title="[New Example]">
                    
            private TextureBase texture1;
            private bool firstTime = false;
            protected override void DrawOverlay(DrawSceneParams data)
            {
                base.DrawOverlay(data);
            
                if (!firstTime)
                {
                    firstTime = true;
                    texture1 = renderContext.CreateTexture2D(Properties.Resources.Smiley, textureFilteringFunctionType.Nearest, textureFilteringFunctionType.Nearest, true, true);        
                    font.Dispose();
                }
            
                DrawTexture(texture1, 100, 100, ContentAlignment.BottomLeft);        
                // Remember to Dispose the texture when it is no more needed, or before quitting the application
            }
            </code><code lang="VB" title="[New Example]">
            Private texture1 As TextureBase
            Private firstTime As Boolean = False
            Protected Overrides Sub DrawOverlay(data As DrawSceneParams)
            	MyBase.DrawOverlay(data)
            
            	If Not firstTime Then
            		firstTime = True
            		texture1 = renderContext.CreateTexture2D(Properties.Resources.Smiley, textureFilteringFunctionType.Nearest, textureFilteringFunctionType.Nearest, True, True)
            		font.Dispose()
            	End If
            
            	DrawTexture(texture1, 100, 100, ContentAlignment.BottomLeft)
                ' Remember to Dispose the texture when it is no more needed, or before quitting the application
            End Sub
            
            </code></example>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.GetTextOutlinedImage(System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.RotateFlipType,System.Single)">
      <summary>
            Gets the outlined text image.
            </summary>
      <param name="text">The text</param>
      <param name="font">The text font</param>
      <param name="color">The text color</param>
      <param name="outlineColor">The outline color</param>
      <param name="rotateFlip">The rotation and flip to apply to the bitmap</param>
      <param name="thickness">The outline thickness</param>
      <returns>The text bitmap</returns>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.GetTextImage(System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.ContentAlignment,System.Drawing.RotateFlipType,System.Boolean)" />
      <example>
            The following code demonstrates how to efficiently draw an outlined text on screen
            <code lang="CS" title="[New Example]">
                    
            private TextureBase texture1;
            private bool firstTime = false;
            protected override void DrawOverlay(DrawSceneParams data)
            {
                base.DrawOverlay(data);
            
                if (!firstTime)
                {
                    firstTime = true;
            
                    Font font = new Font("Tahoma", 50, FontStyle.Italic);
            
                    Image image1 = GetTextOutlinedImage("My Text", font, Color.Red, Color.Black, RotateFlipType.RotateNoneFlipY, 1);
                    texture1 = renderContext.CreateTexture2D(image1, textureFilteringFunctionType.Nearest, textureFilteringFunctionType.Nearest, true, true);        
                    image1.Dispose();
                    font.Dispose();
                }
            
                DrawTexture(texture1, 100, 100, ContentAlignment.BottomLeft);   
                // Remember to Dispose the texture when it is no more needed, or before quitting the application
            }
            </code><code lang="VB" title="[New Example]">
            Private texture1 As TextureBase
            Private firstTime As Boolean = False
            Protected Overrides Sub DrawOverlay(data As DrawSceneParams)
            	MyBase.DrawOverlay(data)
            
            	If Not firstTime Then
            		firstTime = True
            
            		Dim font As New Font("Tahoma", 50, FontStyle.Italic)
            
            		Dim image1 As Image = GetTextOutlinedImage("My Text", font, Color.Red, Color.Black, RotateFlipType.RotateNoneFlipY, 1)
            		texture1 = renderContext.CreateTexture2D(image1, textureFilteringFunctionType.Nearest, textureFilteringFunctionType.Nearest, True, True)
                    image1.Dispose()
            		font.Dispose()
            	End If
            
            	DrawTexture(texture1, 100, 100, ContentAlignment.BottomLeft)
                ' Remember to Dispose the texture when it is no more needed, or before quitting the application
            End Sub
            
            </code></example>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.AllocatedCharDefs">
      <summary>
            Gets the number of loaded character definitions.
            </summary>
      <returns>The character definitons count.</returns>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.IsOpenRootLevel">
      <summary>
            True if the OpenBlock is the RootBlock, false otherwise.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.CurrentBlockReference">
      <summary>
            Gets the current BlockReference.
            </summary>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.SetCurrent(devDept.Eyeshot.Entities.BlockReference,System.Boolean)" />
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.Parents" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.CurrentBlock">
      <summary>
            Gets the current block if a BlockReference is set as current, the <see cref="P:devDept.Eyeshot.Control.Workspace.OpenBlock" /> otherwise.
            </summary>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.SetCurrent(devDept.Eyeshot.Entities.BlockReference,System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.OpenCurrentBlock(System.Boolean)" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.OpenBlock">
      <summary>
            Gets the open block.
            </summary>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.OpenCurrentBlock(System.Boolean)" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.CurrentTransformation">
      <summary>
            Gets the accumulated <see cref="P:devDept.Eyeshot.Control.Workspace.CurrentBlockReference" /> transformation (including its parents transformations).
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.OpenCurrentBlock(System.Boolean)">
      <summary>
            Open <see cref="P:devDept.Eyeshot.Control.Workspace.CurrentBlock" />. The <see cref="T:devDept.Eyeshot.Control.OriginSymbol" /> and <see cref="T:devDept.Eyeshot.Control.Grid" /> are in the Block reference system.
            </summary>
      <param name="updateBoundingBox">If true, updates the scene bounding box. Set it to false for better performances in off-screen methods.</param>
      <remarks>
        <para>When a Block is "open" only its entities are shown, the rest of the scene is hidden.</para>
        <para>Entities are shown in the Block reference system, without the parents transformation.</para>
      </remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.CloseOpenBlock(System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.ResetOpenBlocks(System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.UpdateBoundingBox" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.CloseOpenBlock(System.Boolean)">
      <summary>
            Close the <see cref="P:devDept.Eyeshot.Control.Workspace.OpenBlock" /> and goes back to the visualization of the previously opened block.
            </summary>
      <param name="updateBoundingBox">If true, updates the scene bounding box. Set it to false for better performances in off-screen methods.</param>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.OpenCurrentBlock(System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.ResetOpenBlocks(System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.UpdateBoundingBox" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ResetOpenBlocks(System.Boolean)">
      <summary>
            Close all opened blocks up to the root one.
            </summary>
      <param name="updateBoundingBox">If true, updates the scene bounding box. Set it to false for better performances in off-screen methods.</param>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.OpenCurrentBlock(System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.CloseOpenBlock(System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.UpdateBoundingBox" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.SetCurrentStack(System.Collections.Generic.Stack{devDept.Eyeshot.Entities.BlockReference},System.Boolean)">
      <summary>
            Sets a sequence of BlockReferences as current.
            </summary>
      <param name="parents">The stack of BlockReferences to set as current (the bottom-most is the first parent, which must be in the entities of the <see cref="P:devDept.Eyeshot.Control.Workspace.CurrentBlock" />, 
            the top-most is the last parent of the hierarchy). If null or empty, the current BlockReference is unset.</param>
      <param name="updateBoundingBox">If true, updates the scene bounding box. Set it to false for better performances in off-screen methods that call this to just use the <see cref="P:devDept.Eyeshot.Entities.BlockReference.AccumulatedParentsTransform" /></param>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.SetParentAsCurrent(System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.SetSelectionAsCurrent(System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.SetCurrent(devDept.Eyeshot.Entities.BlockReference,System.Boolean)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.GetStackTransformation(System.Collections.Generic.Stack{devDept.Eyeshot.Entities.BlockReference})">
      <summary>
            Gets the cumulative transformation of a blockreference stack.
            </summary>
      <param name="parents">The stack of BlockReferences to evaluate (the one on top of the stack is the last parent of the hierarchy)</param>
    </member>
    <member name="F:devDept.Eyeshot.Control.Workspace.ROOT_SCENE_PREFIX">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.SetCurrent(devDept.Eyeshot.Entities.BlockReference,System.Boolean)">
      <summary>
            Sets a BlockReference as current.
            </summary>
      <param name="blockReference">The BlockReference to set as current</param>
      <param name="updateBoundingBox">If true, updates the scene bounding box. Set it to false for better performances in off-screen methods that call this to just use the <see cref="P:devDept.Eyeshot.Entities.BlockReference.AccumulatedParentsTransform" /></param>
      <remarks>
        <para>If it is null, the current BlockReference is unset.</para>
        <para>The BlockReference must be a first-level child of the one that is currently set (i.e. it must be in the entities of the <see cref="P:devDept.Eyeshot.Control.Workspace.CurrentBlock" />).</para>
        <para>When a BlockReference is set as current, only the referenced block entities are active on the scene, others are still visible but in a "frozen" state.</para>
      </remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.SetParentAsCurrent(System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.SetSelectionAsCurrent(System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.SetCurrentStack(System.Collections.Generic.Stack{devDept.Eyeshot.Entities.BlockReference},System.Boolean)" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.Parents">
      <summary>
            Gets the stack of the parents of the current BlockReference.
            </summary>
      <remarks>The BlockReference on top of the stack is the <see cref="P:devDept.Eyeshot.Control.Workspace.CurrentBlockReference" />.</remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.SetCurrent(devDept.Eyeshot.Entities.BlockReference,System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.SetParentAsCurrent(System.Boolean)" />
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.CurrentBlockReference" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.SetParentAsCurrent(System.Boolean)">
      <summary>
            Sets the parent of the current BlockReference (if it exists) as current.
            </summary>
      <param name="updateBoundingBox">If true, updates the scene bounding box. Set it to false for better performances in off-screen methods that call this to just use the <see cref="P:devDept.Eyeshot.Entities.BlockReference.AccumulatedParentsTransform" /></param>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.SetCurrent(devDept.Eyeshot.Entities.BlockReference,System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.SetSelectionAsCurrent(System.Boolean)" />
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.Parents" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.SetSelectionAsCurrent(System.Boolean)">
      <summary>
            Sets the selected BlockReference as current (if there is one).
            </summary>
      <param name="updateBoundingBox">If true, updates the scene bounding box. Set it to false for better performances in off-screen methods that call this to just use the <see cref="P:devDept.Eyeshot.Entities.BlockReference.AccumulatedParentsTransform" /></param>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.SetCurrent(devDept.Eyeshot.Entities.BlockReference,System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.SetParentAsCurrent(System.Boolean)" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.IsolateAvailable">
      <summary>
            Indicates whether the Isolate feature is currently available.
            </summary>
      <remarks>
            The feature allows to focus on a part of the model while still seeing the rest
            of the scene in a transparent. It may be not available due to hardware
            limitations or when the <see cref="P:devDept.Eyeshot.Control.Design.MinimumFramerate" /> is disabled.
            </remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.IsolateBlocks(System.Collections.Generic.IReadOnlyCollection{devDept.Eyeshot.Block})" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.IsolateInstances(System.Collections.Generic.IReadOnlyList{System.Tuple{System.Collections.Generic.Stack{devDept.Eyeshot.Entities.BlockReference},devDept.Eyeshot.Entities.Entity}})" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.IsolateSelected(System.Collections.Generic.IReadOnlyList{devDept.Eyeshot.SelectedItemBase})" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.IsolateBlocks(System.Collections.Generic.IReadOnlyCollection{devDept.Eyeshot.Block})">
      <summary>
            Isolate a collection of blocks by showing the others in a transparent state.
            Pass null to unset the isolated blocks.
            </summary>
      <remarks>
        <para>This method is useful to focus on a part of the model while still seeing
            the rest of the scene in a transparent state.</para>
        <para>Check the <see cref="P:devDept.Eyeshot.Control.Workspace.IsolateAvailable" /> property before calling this
            method.</para>
      </remarks>
      <param name="blocks">The blocks to isolate</param>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.IsolateInstances(System.Collections.Generic.IReadOnlyList{System.Tuple{System.Collections.Generic.Stack{devDept.Eyeshot.Entities.BlockReference},devDept.Eyeshot.Entities.Entity}})" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.IsolateSelected(System.Collections.Generic.IReadOnlyList{devDept.Eyeshot.SelectedItemBase})" />
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.IsolateAvailable" />
      <exception cref="T:devDept.EyeshotException">Throw when the feature is not <see cref="P:devDept.Eyeshot.Control.Workspace.IsolateAvailable">available</see></exception>
      <exception cref="T:devDept.EyeshotException">Throw when a BlockReference is set as <see cref="M:devDept.Eyeshot.Control.Workspace.SetCurrent(devDept.Eyeshot.Entities.BlockReference,System.Boolean)">current</see>.</exception>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.IsolateInstances(System.Collections.Generic.IReadOnlyList{System.Tuple{System.Collections.Generic.Stack{devDept.Eyeshot.Entities.BlockReference},devDept.Eyeshot.Entities.Entity}})">
      <summary>
            Isolate a collection of entities by showing the others in a transparent state.
            Pass null to unset the isolated entities.
            </summary>
      <remarks>
        <para>This method is useful to focus on a part of the model while still seeing
            the rest of the scene in a transparent state.</para>
        <para>Check the <see cref="P:devDept.Eyeshot.Control.Workspace.IsolateAvailable" /> property before calling this
            method.</para>
      </remarks>
      <param name="instances">The entities instance to isolate</param>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.IsolateBlocks(System.Collections.Generic.IReadOnlyCollection{devDept.Eyeshot.Block})" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.IsolateSelected(System.Collections.Generic.IReadOnlyList{devDept.Eyeshot.SelectedItemBase})" />
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.IsolateAvailable" />
      <exception cref="T:devDept.EyeshotException">Throw when the feature is not <see cref="P:devDept.Eyeshot.Control.Workspace.IsolateAvailable">available</see></exception>
      <exception cref="T:devDept.EyeshotException">Throw when a BlockReference is set as <see cref="M:devDept.Eyeshot.Control.Workspace.SetCurrent(devDept.Eyeshot.Entities.BlockReference,System.Boolean)">current</see>.</exception>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.IsolateSelected(System.Collections.Generic.IReadOnlyList{devDept.Eyeshot.SelectedItemBase})">
      <summary>
            Isolate a collection of entities by showing the others in a transparent state.
            Pass null to unset the isolated entities.
            </summary>
      <remarks>
        <para>This method is useful to focus on a part of the model while still seeing
            the rest of the scene in a transparent state.</para>
        <para>Check the <see cref="P:devDept.Eyeshot.Control.Workspace.IsolateAvailable" /> property before calling this
            method.</para>
      </remarks>
      <param name="instances">The entities instance to isolate</param>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.IsolateBlocks(System.Collections.Generic.IReadOnlyCollection{devDept.Eyeshot.Block})" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.IsolateInstances(System.Collections.Generic.IReadOnlyList{System.Tuple{System.Collections.Generic.Stack{devDept.Eyeshot.Entities.BlockReference},devDept.Eyeshot.Entities.Entity}})" />
      <exception cref="T:devDept.EyeshotException">Throw when the feature is not <see cref="P:devDept.Eyeshot.Control.Workspace.IsolateAvailable">available</see></exception>
      <exception cref="T:devDept.EyeshotException">Throw when a BlockReference is set as <see cref="M:devDept.Eyeshot.Control.Workspace.SetCurrent(devDept.Eyeshot.Entities.BlockReference,System.Boolean)">current</see>.</exception>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.UpdateBoundingBox">
      <summary>
            Computes the scene bounding box, rebuilds simplified representation and updates some important variables.
            If the bounding box, grid or shadow are visible, it updates them too.
            </summary>
      <remarks>
        <para>Shadow is updated only if it is visible and if the design has the bounding box height bigger than zero.</para>
        <para>It's important to call this method when the visibility status of some entities changes.</para>
        <para>
          <see cref="M:devDept.Eyeshot.Control.Workspace.GetVisualRefinementDeviation">Visual refinement deviation</see> is updated as well but you need to set <see cref="P:devDept.Eyeshot.Entities.Entity.RegenMode" /> as <see cref="F:devDept.Eyeshot.Entities.regenType.RegenAndCompile" /> for all entities and call <see cref="M:devDept.Eyeshot.EntityList.Regen(devDept.Eyeshot.RegenOptions)">Workspace.Entities.Regen()</see> method to see objects with new tessellation.</para>
      </remarks>
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.BoundingBox" />
      <seealso cref="M:devDept.Eyeshot.EntityList.UpdateBoundingBox" />
      <seealso cref="P:devDept.Eyeshot.EntityList.BoxMin" />
      <seealso cref="P:devDept.Eyeshot.EntityList.BoxMax" />
      <seealso cref="P:devDept.Eyeshot.EntityList.BoxSize" />
      <seealso cref="P:devDept.Eyeshot.Entities.Entity.Visible" />
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.Turbo" />
      <seealso cref="T:devDept.Eyeshot.Control.Grid" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.GetVisualRefinementDeviation">
      <summary>
            Gets the visual refinement deviation value used by the <see cref="M:devDept.Eyeshot.EntityList.Regen(devDept.Eyeshot.RegenOptions)" /> method. It's estimated automatically from the root block extents.
            </summary>
      <returns>The estimated deviation</returns>
      <remarks>Can be overridden to return a custom value.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ProcessSemiTransparent">
      <summary>
            Performs semi-transparent entities pre-processing.
            </summary>
      <remarks>It is meaningful only when <see cref="P:devDept.Eyeshot.Control.Workspace.AccurateTransparency" /> is true.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.ShortcutKeys">
      <summary>
            Gets or sets the keyboard shortcuts.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ZoomIn(System.Int32)">
      <summary>
            Zooms the view in.
            </summary>
      <param name="amount">Amount of zoom (in pixels)</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ZoomOut(System.Int32)">
      <summary>
            Zooms the view out.
            </summary>
      <param name="amount">Amount of zoom (in pixels)</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.PanLeft(System.Int32)">
      <summary>
            Pans the view to the left.
            </summary>
      <param name="amount">Amount of pan (in pixels)</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.PanRight(System.Int32)">
      <summary>
            Pans the view to the right.
            </summary>
      <param name="amount">Amount of pan (in pixels)</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.PanDown(System.Int32)">
      <summary>
            Pans the view downwards.
            </summary>
      <param name="amount">Amount of pan (in pixels)</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.PanUp(System.Int32)">
      <summary>
            Pans the view upwards.
            </summary>
      <param name="amount">Amount of pan (in pixels)</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Workspace.NavigationTimerHandler">
      <summary>Represents the method that will handle the <see cref="E:devDept.Eyeshot.Control.Workspace.NavigationTimerTick" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="E:devDept.Eyeshot.Control.Workspace.NavigationTimerTick">
      <summary>
            Occurs during the scene navigation with the keyboard.
            </summary>
      <remarks>Each key press of the navigation keys starts a small animation to move the camera. Subscribe to this event do something each time the camera is moved.</remarks>
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.ShortcutKeys" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.PickBoxSize">
      <summary>Gets or sets the pick box size in pixel units.</summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.MultipleSelection">
      <summary>
            If true, the selection ActionModes work as if the Control key was pressed, selecting multiple entities.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.CursorTypes">
      <summary>
            The cursor types dictionary.
            </summary>
      <remarks>If <see cref="P:devDept.Eyeshot.Control.WorkspaceBase.Renderer" /> is different from <see cref="!:rendererType.Native" />, use the <see cref="!:WorkspaceBase.SetCursor(cursorType, Stream)" /> instead (WPF Eyeshot control only)</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.ActionMode">
      <summary>
            Gets or sets the active viewport action. 
            </summary>
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.SelectionFilterMode" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.UpdateVisibleSelection" />
    </member>
    <member name="T:devDept.Eyeshot.Control.Workspace.assemblySelectionType">
      <summary>
            The assembly selection type.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Workspace.assemblySelectionType.Branch">
      <summary>
            Selects the entities at the current BlockReference level
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Workspace.assemblySelectionType.Leaf">
      <summary>
            Selects the entities at the deepest level of the BlockReference hierarchy
            </summary>
      <remarks>Not supported by <see cref="P:devDept.Eyeshot.Control.Workspace.AccurateTransparency" /> and all geometry selection types.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.SetCursor(System.Windows.Forms.Cursor)">
      <summary>
            Sets the cursor.
            </summary>
      <param name="cursor">The cursor</param>
      <remarks>If <see cref="P:devDept.Eyeshot.Control.WorkspaceBase.Renderer" /> is different from <see cref="!:rendererType.Native" />, use <see cref="!:WorkspaceBase.SetCursor(Stream)" /> (WPF only)</remarks>
      <seealso cref="P:devDept.Eyeshot.Control.WorkspaceBase.Renderer" />
      <seealso cref="!:WorkspaceBase.SetCursor(Stream)" />
    </member>
    <member name="T:devDept.Eyeshot.Control.Workspace.CursorContainer">
      <summary>
            Structure that holds the Cursor (or Cursors) used by the control.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Workspace.CursorContainer.Cursor">
      <summary>
            Main control Cursor.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.SetDefaultCursor(System.Windows.Forms.Cursor)">
      <summary>
            Sets the default cursor for the viewport control.
            </summary>
      <param name="cursor">The cursor to set as default</param>
      <remarks>If <see cref="P:devDept.Eyeshot.Control.WorkspaceBase.Renderer" /> is different from <see cref="!:rendererType.Native" />, to set
            cursors different from the ones specified in <see cref="T:devDept.Eyeshot.Control.cursorType" /> use the <see cref="!:WorkspaceBase.SetDefaultCursor(Stream)" /> instead (WPF only)</remarks>
      <seealso cref="P:devDept.Eyeshot.Control.WorkspaceBase.Renderer" />
      <seealso cref="!:WorkspaceBase.SetDefaultCursor(Stream)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.GetDefaultCursor">
      <summary>
            Gets the default cursor for the viewport control.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.LoadPickCursor">
      <summary>
            Gets the Pick Cursor stream.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.IsDragAction">
      <summary>
            Tells if the current <see cref="P:devDept.Eyeshot.Control.Workspace.ActionMode" /> requires dragging.
            </summary>
      <returns>True if the current <see cref="P:devDept.Eyeshot.Control.Workspace.ActionMode" /> requires dragging.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.StartZoomPanRotate(System.Windows.Forms.MouseEventArgs,devDept.Eyeshot.Control.Viewport)">
      <summary>
            Starts a sequence of Zoom-Pan-Rotate movements if the proper keys/mouse buttons are pressed.
            </summary>
      <param name="e">The mouse event args</param>
      <param name="viewport">The viewport</param>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.EndZoomPanRotate(devDept.Eyeshot.Control.Viewport)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.GetViewportUnderMouse(System.Drawing.Point)">
      <summary>
            Returns the viewport under the given mouse position.
            </summary>
      <param name="mousePos">The mouse position</param>
      <returns>The viewport under the mouse.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.GetTemporarySelectionFaceData(System.Collections.Generic.Stack{devDept.Eyeshot.Entities.BlockReference},devDept.Eyeshot.Entities.Entity,System.Collections.Generic.List{devDept.Eyeshot.SelectionInfoSubItems},devDept.Eyeshot.selectionStatusType)">
      <summary>
            Gives the chance to overriders to get temporary face selection data and optionally to skip temporary face selection drawing.
            </summary>
      <param name="parents">The stack of parents</param>
      <param name="ent">The entity</param>
      <param name="faceSelInfo">The list of <see cref="T:devDept.Eyeshot.SelectionInfoSubItems" /></param>
      <param name="selStatus">The selection status</param>
      <returns>True to skip standard drawing, false otherwise.</returns>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.Moving">
      <summary>
            Tells if the viewport is performing a zoom-pan-rotate operation.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.Workspace.CameraMoveEventHandler">
      <summary>
             Represents the method that will handle the <see cref="E:devDept.Eyeshot.Control.Workspace.CameraMoveBegin" /> and <see cref="E:devDept.Eyeshot.Control.Workspace.CameraMoveEnd" /> events. 
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:devDept.Eyeshot.Control.CameraMoveEventArgs" /> object that contains the event data.</param>
    </member>
    <member name="E:devDept.Eyeshot.Control.Workspace.CameraMoveBegin">
      <summary>
            Occurs when a camera Zoom/Pan/Rotate camera movement begins.
            </summary>
    </member>
    <member name="E:devDept.Eyeshot.Control.Workspace.CameraMoveEnd">
      <summary>
            Occurs when a Zoom/Pan/Rotate camera movement ends.
            </summary>
    </member>
    <member name="E:devDept.Eyeshot.Control.Workspace.CameraChanged">
      <summary>
            Occurs when camera changes its position.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.CameraChangedFrequency">
      <summary>
            The interval, in milliseconds, of CameraChanged events firing. 
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ZoomCamera(System.Int32)">
      <summary>
            Zooms the view of the specified amount.
            </summary>
      <param name="dy">Zoom amount</param>
      <seealso cref="!:RotateCamera(devDept.Geometry.Vector3D,devDept.Geometry.Vector3D)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.PanCamera(System.Drawing.Point,System.Drawing.Point)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ZoomCamera(System.Int32,System.Boolean)">
      <summary>
            Zooms the view of the specified amount.
            </summary>
      <param name="dy">Zoom amount</param>
      <param name="animate">If true performs an animation when changing the view</param>
      <seealso cref="!:RotateCamera(devDept.Geometry.Vector3D,devDept.Geometry.Vector3D)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.PanCamera(System.Drawing.Point,System.Drawing.Point)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ZoomCamera(System.Drawing.Point,System.Int32)">
      <summary>
            Zooms the view of the specified amount.
            </summary>
      <param name="mousePos">The screen point to keep fixed</param>
      <param name="dy">The zoom amount</param>
      <seealso cref="!:RotateCamera(devDept.Geometry.Vector3D,devDept.Geometry.Vector3D)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.PanCamera(System.Drawing.Point,System.Drawing.Point)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ZoomCamera(System.Drawing.Point,System.Int32,System.Boolean)">
      <summary>
            Zooms the view of the specified amount.
            </summary>
      <param name="mousePos">The screen point to keep fixed</param>
      <param name="dy">The zoom amount</param>
      <param name="animate">If true performs an animation when changing the view</param>
      <seealso cref="!:RotateCamera(devDept.Geometry.Vector3D,devDept.Geometry.Vector3D)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.PanCamera(System.Drawing.Point,System.Drawing.Point)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ZoomCamera(System.Int32,System.Double)">
      <summary>
            Zooms the view of the specified amount.
            </summary>
      <param name="dy">Zoom amount</param>
      <param name="zoomSpeed">Zoom speed</param>
      <seealso cref="!:RotateCamera(devDept.Geometry.Vector3D,devDept.Geometry.Vector3D)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.PanCamera(System.Drawing.Point,System.Drawing.Point)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ZoomCamera(System.Int32,System.Double,System.Boolean)">
      <summary>
            Zooms the view of the specified amount.
            </summary>
      <param name="dy">Zoom amount</param>
      <param name="zoomSpeed">Zoom speed</param>
      <param name="animate">If true performs an animation when changing the view</param>
      <seealso cref="!:RotateCamera(devDept.Geometry.Vector3D,devDept.Geometry.Vector3D)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.PanCamera(System.Drawing.Point,System.Drawing.Point)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.PanCamera(System.Drawing.Point,System.Drawing.Point)">
      <summary>
            Pans the view from one screen point to the other.
            </summary>
      <param name="from">StartPoint point</param>
      <param name="to">End point</param>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.ZoomCamera(System.Int32)" />
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.AnimateCamera" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.PanCamera(System.Drawing.Point,System.Drawing.Point,System.Boolean)">
      <summary>
            Pans the view from one screen point to the other.
            </summary>
      <param name="from">StartPoint point</param>
      <param name="to">End point</param>
      <param name="animate">If true performs an animation when changing the view</param>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.ZoomCamera(System.Int32)" />
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.AnimateCamera" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.EndZoomPanRotate(devDept.Eyeshot.Control.Viewport)">
      <summary>
            Ends a sequence of Zoom-Pan-Rotate movements.
            </summary>
      <viewport>The viewport</viewport>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.StartZoomPanRotate(System.Windows.Forms.MouseEventArgs,devDept.Eyeshot.Control.Viewport)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.IsSelectAction">
      <summary>
            Tells if the current <see cref="P:devDept.Eyeshot.Control.Workspace.ActionMode" /> is one of the selection ones.
            </summary>
      <returns>True if the current <see cref="P:devDept.Eyeshot.Control.Workspace.ActionMode" /> is one of the selection ones.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.IsSelectByPickAction">
      <summary>
            Tells if the current <see cref="P:devDept.Eyeshot.Control.Workspace.ActionMode" /> is one of the ByPick ones.
            </summary>
      <returns>True if the current <see cref="P:devDept.Eyeshot.Control.Workspace.ActionMode" /> is one of the ByPick ones.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.IsSelectByBoxAction">
      <summary>
            Tells if the current <see cref="P:devDept.Eyeshot.Control.Workspace.ActionMode" /> is one of the ByBox ones.
            </summary>
      <returns>True if the current <see cref="P:devDept.Eyeshot.Control.Workspace.ActionMode" /> is one of the ByBox ones.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.IsSelectByPolygonAction">
      <summary>
            Tells if the current <see cref="P:devDept.Eyeshot.Control.Workspace.ActionMode" /> is one of the ByPolygon ones.
            </summary>
      <returns>True if the current <see cref="P:devDept.Eyeshot.Control.Workspace.ActionMode" /> is one of the ByPolygon ones.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.SaveView(devDept.Eyeshot.Camera@)">
      <summary>
            Stores the current view in the active viewport. 
            </summary>
      <param name="saved">Will hold a copy of the active <see cref="T:devDept.Eyeshot.Camera" /> object</param>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.RestoreView(devDept.Eyeshot.Camera)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.RestoreView(devDept.Eyeshot.Camera)">
      <summary>
            Restores the previously saved view in the active viewport.
            </summary>
      <param name="saved">The <see cref="T:devDept.Eyeshot.Camera" /> object previously initialized by <see cref="M:devDept.Eyeshot.Control.Workspace.SaveView(devDept.Eyeshot.Camera@)" /></param>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.SaveView(devDept.Eyeshot.Camera@)" />
      <remarks>If <see cref="P:devDept.Eyeshot.Control.Workspace.AnimateCamera" /> is true, the operation animates the Camera using the time interval specified by <see cref="P:devDept.Eyeshot.Control.Workspace.AnimateCameraDuration" />.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.AdjustNearAndFarPlanes">
      <summary>
            Adjusts camera near and far planes based on design extents and on origin symbol, grid and shadow visibility status.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.SuspendUpdate(System.Boolean)">
      <summary>
            Suspends the updates of Workspace control.
            </summary>
      <param name="suspend">If true suspends the updates, else resumes them</param>
      <remarks>For internal use only.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.UpdateWorkspace">
      <summary>
            Updates the workspace control in both desing-time and run-time mode.
            If necessary adjust near and far planes to accomodate origin
            symbols of various sizes.            
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.ButtonStyle">
      <summary>
            Gets or sets the style used by the <see cref="T:devDept.Eyeshot.Control.ToolBar" /> and <see cref="P:devDept.Eyeshot.Control.Workspace.ProgressBar" /> buttons.
            </summary>
      <remarks>You need to call the Viewport.CompileUserInterfaceElements() to see the effect of this command.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.ShowCurveDirection">
      <summary>
            If true, curve direction is displayed.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.AmbientOcclusion">
      <summary>
            Ambient Occlusion settings, shared by all viewports.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.EnableAmbientOcclusion">
      <summary>
            Enables or disables the screen-space ambient occlusion effect.
            </summary>
      <remarks>
        <para>Screen-space ambient occlusion is available only in <see cref="F:devDept.Eyeshot.displayType.Rendered" /> display mode.</para>
        <para>Use <see cref="P:devDept.Eyeshot.Control.Workspace.AmbientOcclusion" /> to get access to additional settings.</para>
      </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.Selection">
      <summary>
            Gets or sets the selection settings, shared by all viewports.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.SelectionColor">
      <summary>
            Gets or sets the color of selected entities, shared by all viewports.
            </summary>
      <remarks>The <see cref="P:devDept.Eyeshot.Material.Ambient" />, <see cref="P:devDept.Eyeshot.Material.Specular" /> and <see cref="P:devDept.Eyeshot.Material.Shininess" /> components are taken from the <see cref="P:devDept.Eyeshot.Control.Design.DefaultMaterial" />.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.SelectionColorDynamic">
      <summary>
            Gets or sets the color for the dynamic selection, shared by all viewports.
            </summary>
      <remarks>The <see cref="P:devDept.Eyeshot.Material.Ambient" />, <see cref="P:devDept.Eyeshot.Material.Specular" /> and <see cref="P:devDept.Eyeshot.Material.Shininess" /> components are taken from the <see cref="P:devDept.Eyeshot.Control.Design.DefaultMaterial" />.</remarks>
      <see cref="F:devDept.Eyeshot.actionType.SelectVisibleByPickDynamic" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.SelectionLineWeightScaleFactor">
      <summary>
            Gets or sets the factor applied to the line weight for the selected wireframe entities or <see cref="P:devDept.Eyeshot.Entities.Brep.Edges" />.
            </summary>
      <seealso cref="P:devDept.Eyeshot.Entities.Entity.LineWeight" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.ShowFps">
      <summary>
            Gets or sets the frame per second rate text visibility status.
            </summary>
      <remarks>"WF" stands for WindowsForms</remarks>
      <remarks>"D3D" stands <see cref="F:devDept.Eyeshot.Control.rendererType.Direct3D" /></remarks>
      <remarks>"OGL" stands <see cref="F:devDept.Eyeshot.Control.rendererType.OpenGL" /></remarks>
      <remarks>"WPF Native" stands for <see cref="!:rendererType.Native" /></remarks>
      <remarks>HW stands for Hardware accelerated rendering (OpenGL only)</remarks>
      <remarks>SW stands for Software rendering (OpenGL only)</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.WaitCursorMode">
      <summary>
            Gets or sets the wait cursor mode. Controls if and when the wait cursor is displayed.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.AskForHardwareAcceleration">
      <summary>
            If true, OpenGL accelerated hardware modes are requested during viewport initialization.
            </summary>
      <remarks>Has no effect at runtime.</remarks>
      <remarks>Applies to <see cref="F:devDept.Eyeshot.Control.rendererType.OpenGL" /> renderer only.</remarks>
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.IsHardwareAccelerated" />
      <seealso cref="P:devDept.Eyeshot.Control.WorkspaceBase.Renderer" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.AskForDirect3DLevel9_3">
      <summary>
            If true, The Direct3D feature level 9_3 is requested during viewport initialization instead of the highest feature level available.
            </summary>
      <remarks>Used for compatibility problems with old cards.</remarks>
      <remarks>Has no effect at runtime.</remarks>
      <remarks>Direct3D feature level 9_3 has some limitations and does not support all the features of higher profiles</remarks>
      <remarks>Applies only to <see cref="F:devDept.Eyeshot.Control.rendererType.Direct3D" /> renderer.</remarks>
      <seealso cref="!:Workspace.Renderer" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.AskForAntiAliasing">
      <summary>
            If true, Full Screen Anti-Aliasing modes are requested during viewport initialization. 
            The number of samples can be set with the <see cref="P:devDept.Eyeshot.Control.Workspace.AntiAliasingSamples" /> property.
            </summary>
      <remarks>Has no effect at runtime for the OpenGL renderer.</remarks>
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.IsAntiAliasingAvailable" />
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.AntiAliasingSamples" />
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.AntiAliasing" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.AntiAliasing">
      <summary>
            Gets or sets a value indicating if full screen anti-aliasing is enabled.
            </summary>
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.IsAntiAliasingAvailable">IsAntiAliasingAvailable Property</seealso>
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.AskForAntiAliasing">AskForAntiAliasing Property</seealso>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.AntiAliasingSamples">
      <summary>
            Gets or sets the number of desired samples for Full Screen Anti-Aliasing.
            The Full Screen Anti-alasing can be set with the <see cref="P:devDept.Eyeshot.Control.Workspace.AskForAntiAliasing" /> property.
            </summary>
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.IsAntiAliasingAvailable" />
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.AskForAntiAliasing" />
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.AntiAliasing" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.RendererVendor">
      <summary>
            Gets the company responsible for this GL implementation. This name does not change from release to release.
            </summary>
      <remarks>OpenGL only.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.ShadingLanguageVersion">
      <summary>
            Gets OpenGL Shading Language version.
            </summary>
      <remarks>OpenGL only.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.OpenglExtensions">
      <summary>
            Gets a space-separated list of supported extensions to OpenGL.
            </summary>
      <remarks>OpenGL only.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.MaxTextureSize">
      <summary>
            Gets the maximum texture size allowed on current OpenGL implementation (in pixel).
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.RendererName">
      <summary>
            Gets the name of the renderer. This name is typically specific to a particular configuration of a hardware platform. It does not change from release to release. 
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.RendererVersion">
      <summary>
            Gets graphics API version.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.MaxPatternRepetitions">
      <summary>
            Gets or sets the maximum number of pattern repetitions allowed between two vertices of a curve.
            </summary>
      <remarks>Over this bias the line is drawn continuous without pattern. <seealso cref="P:devDept.Eyeshot.Entities.Entity.LineTypeName" /></remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.MaxHatchPatternLines">
      <summary>
            Gets or sets the maximum number of hatch pattern lines allowed for each <see cref="T:devDept.Eyeshot.Entities.Hatch" />.
            </summary>
      <remarks>
            Over this bias the Hatch is drawn with solid pattern.
            </remarks>
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.HatchPatterns" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.IsInFrustumMode">
      <summary>
            Gets or sets the modality used by IsInFrustum() method.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.ProgressBar">
      <summary>
            Gets or sets the progress bar settings.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.ShowNormals">
      <summary>
            Gets or sets the normals visibility status.
            </summary>
      <seealso cref="!:NormalLength" />
    </member>
    <member name="F:devDept.Eyeshot.Control.Workspace.fps">
      <summary>
            Framerate per second counter.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.FramesPerSecond">
      <summary>
            Gets current frames per second rate.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.CompileWires">
      <summary>
            If true, wireframe entities are compiled, otherwise they are drawn on the fly
            using a buffered approach.
            </summary>
      <remarks>
            Set false to reduce memory usage with <see cref="F:devDept.Eyeshot.Control.rendererType.Direct3D" /> renderer and a huge numbers of wireframe
            entities.
            </remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.DoWork(devDept.WorkUnit)">
      <summary>Accomplishes the work and call <see cref="M:devDept.WorkUnit.WorkCompleted(System.Object)" /> method.</summary>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.CancelWork">CancelWork() method.</seealso>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.StartWork(devDept.WorkUnit)">StartWork() method.</seealso>
      <seealso cref="T:devDept.WorkUnit">WorkUnit class.</seealso>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.IsBusy">
      <summary>
            Gets background worker thread status.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.StartWork(devDept.WorkUnit)">
      <summary>
            Starts the work asynchronously.
            </summary>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.CancelWork">CancelWork() method.</seealso>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.DoWork(devDept.WorkUnit)">DoWork() method.</seealso>
      <seealso cref="T:devDept.WorkUnit">WorkUnit class.</seealso>
      <remarks>
        <para>It can handle just one WorkUnit at the time. Every additional call when the first thread is not completed will raise an Exception.</para>
        <para>For handling a queue of WorkUnits, use <see cref="T:devDept.WorkManager`1" /> instead.</para>
      </remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.CancelWork">
      <summary>
            Stops the asynchronous background work.
            </summary>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.StartWork(devDept.WorkUnit)">StartWork() method.</seealso>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.DoWork(devDept.WorkUnit)">DoWork() method.</seealso>
      <seealso cref="T:devDept.WorkUnit">WorkUnit class.</seealso>
    </member>
    <member name="E:devDept.Eyeshot.Control.Workspace.WorkCompleted">
      <summary>
            Occurs when the background work has completed.
            </summary>
    </member>
    <member name="E:devDept.Eyeshot.Control.Workspace.WorkCancelled">
      <summary>
            Occurs when the background work is cancelled.
            </summary>
    </member>
    <member name="E:devDept.Eyeshot.Control.Workspace.WorkFailed">
      <summary>
            Occurs when the background work has failed.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.FireWorkCompleted(devDept.WorkCompletedEventArgs)">
      <summary>
            Raises the <see cref="T:devDept.WorkUnit.WorkCompletedEventHandler">WorkCompleted</see> event.
            </summary>
      <param name="e">A <see cref="T:devDept.WorkCompletedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.FireWorkCancelled(devDept.WorkUnitEventArgs)">
      <summary>
            Raises the <see cref="T:devDept.WorkUnit.WorkCancelledEventHandler">WorkCancelled</see> event.
            </summary>
      <param name="e">A <see cref="T:devDept.WorkUnitEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.FireWorkFailed(devDept.WorkFailedEventArgs)">
      <summary>
            Raises the <see cref="T:devDept.WorkUnit.WorkCancelledEventHandler">WorkCancelled</see> event.
            </summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.PrintDocumentName">
      <summary>Print document name. It also appears during print preview preparation.</summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.RenderToBitmap(System.Drawing.Size)">
      <summary>Returns an image of the current <see cref="T:devDept.Eyeshot.Control.Workspace" /> scene. The image can be scaled even to a poster size one.</summary>
      <param name="bitmapSize">The size in which the viewport will be fitted.</param>
      <returns>The 24-bit image.</returns>
      <remarks>To get a 32-bit image with transparent background set the <see cref="P:devDept.Eyeshot.Control.BackgroundSettings.StyleMode" /> to <see cref="F:devDept.Graphics.backgroundStyleType.None" />.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.RenderToBitmap(System.Drawing.Size,System.Boolean,System.Boolean)">
      <summary>Returns an image of the current <see cref="T:devDept.Eyeshot.Control.Workspace" /> scene. The image can be scaled even to a poster size one.</summary>
      <param name="bitmapSize">The size in which the viewport will be fitted.</param>
      <param name="drawBackground">If true, the drawing of the background is skipped</param>
      <param name="hdwAcceleration">If true, use the hardware acceleration (OpenGL only)</param>
      <returns>The 24-bit image.</returns>
      <remarks>To get a 32-bit image with transparent background set the <see cref="P:devDept.Eyeshot.Control.BackgroundSettings.StyleMode" /> to <see cref="F:devDept.Graphics.backgroundStyleType.None" />.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.RenderToBitmap(System.Drawing.Size,System.Double,System.Boolean,System.Boolean)">
      <summary>Returns an image of the current <see cref="T:devDept.Eyeshot.Control.Workspace" /> scene. The image can be scaled even to a poster size one.</summary>
      <param name="bitmapSize">The size in which the viewport will be fitted.</param>
      <param name="lineWeightFactor">The factor applied to the line weight of the wire entities</param>
      <param name="drawBackground">If true, the drawing of the background is skipped</param>
      <param name="hdwAcceleration">If true, use the hardware acceleration (OpenGL only)</param>
      <returns>The 24-bit image.</returns>
      <remarks>To get a 32-bit image with transparent background set the <see cref="P:devDept.Eyeshot.Control.BackgroundSettings.StyleMode" /> to <see cref="F:devDept.Graphics.backgroundStyleType.None" />.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.RenderToBitmap(System.Drawing.RectangleF,System.Drawing.Size,System.Boolean,System.Boolean)">
      <summary>Returns an image of the current <see cref="T:devDept.Eyeshot.Control.Workspace" /> scene. The image can be scaled even to a poster size one.</summary>
      <param name="rectangle">The rectangle of the viewport to capture in screen coordinates (zero on top)</param>
      <param name="bitmapSize">The size in which the viewport will be fitted.</param>
      <param name="drawBackground">If true, the drawing of the background is skipped</param>
      <param name="hdwAcceleration">If true, use the hardware acceleration (OpenGL only)</param>
      <returns>The 24-bit image.</returns>
      <remarks>To get a 32-bit image with transparent background set the <see cref="P:devDept.Eyeshot.Control.BackgroundSettings.StyleMode" /> to <see cref="F:devDept.Graphics.backgroundStyleType.None" />.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.RenderToBitmap(System.Drawing.RectangleF,System.Drawing.Size,System.Double,System.Boolean,System.Boolean)">
      <summary>Returns an image of the current <see cref="T:devDept.Eyeshot.Control.Workspace" /> scene. The image can be scaled even to a poster size one.</summary>
      <param name="rectangle">The rectangle of the viewport to capture in screen coordinates (zero on top)</param>
      <param name="bitmapSize">The size in which the viewport will be fitted.</param>
      <param name="lineWeightFactor">The factor applied to the line weight of the wire entities</param>
      <param name="drawBackground">If true, the drawing of the background is skipped</param>
      <param name="hdwAcceleration">If true, use the hardware acceleration (OpenGL only)</param>
      <returns>The 24-bit image.</returns>
      <remarks>To get a 32-bit image with transparent background set the <see cref="P:devDept.Eyeshot.Control.BackgroundSettings.StyleMode" /> to <see cref="F:devDept.Graphics.backgroundStyleType.None" />.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.RenderToBitmap(System.Double)">
      <summary>Returns an image of the current viewport scene. The image can be scaled even to a poster size one.</summary>
      <param name="drawScaleFactor">The bitmap scale</param>
      <returns>The 24-bit image.</returns>
      <remarks>To get a 32-bit image with transparent background set the <see cref="P:devDept.Eyeshot.Control.BackgroundSettings.StyleMode" /> to <see cref="F:devDept.Graphics.backgroundStyleType.None" />.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.RenderToBitmap(System.Double,System.Boolean,System.Boolean)">
      <summary>Returns an image of the current <see cref="T:devDept.Eyeshot.Control.Workspace" /> scene of the active viewport. The image can be scaled even to a poster size one.</summary>
      <param name="drawScaleFactor">The bitmap scale</param>
      <param name="drawBackground">If false, the drawing of the background is skipped</param>
      <param name="hdwAcceleration">If true, use the hardware acceleration (OpenGL only)</param>
      <returns>The 24-bit image.</returns>
      <remarks>To get a 32-bit image with transparent background set the <see cref="P:devDept.Eyeshot.Control.BackgroundSettings.StyleMode" /> to <see cref="F:devDept.Graphics.backgroundStyleType.None" />.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.RenderToBitmap(System.Double,System.Double,System.Boolean,System.Boolean)">
      <summary>Returns an image of the current <see cref="T:devDept.Eyeshot.Control.Workspace" /> scene of the active viewport. The image can be scaled even to a poster size one.</summary>
      <param name="drawScaleFactor">The bitmap scale</param>
      <param name="lineWeightFactor">The factor applied to the line weight of the wire entities</param>
      <param name="drawBackground">If false, the drawing of the background is skipped</param>
      <param name="hdwAcceleration">If true, use the hardware acceleration (OpenGL only)</param>
      <returns>The 24-bit image.</returns>
      <remarks>To get a 32-bit image with transparent background set the <see cref="P:devDept.Eyeshot.Control.BackgroundSettings.StyleMode" /> to <see cref="F:devDept.Graphics.backgroundStyleType.None" />.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.RenderToBitmap(System.Drawing.Rectangle,System.Double,System.Boolean,System.Boolean)">
      <summary>Returns an image of the current <see cref="T:devDept.Eyeshot.Control.Workspace" /> scene of the active viewport. The image can be scaled even to a poster size one.</summary>
      <param name="rectangle">The rectangle of the viewport to capture in screen coordinates (zero on top)</param>
      <param name="drawScaleFactor">The bitmap scale factor</param>
      <param name="drawBackground">If false, the drawing of the background is skipped</param>
      <param name="hdwAcceleration">If true, use the hardware acceleration (OpenGL only)</param>
      <returns>The 24-bit image.</returns>
      <remarks>To get a 32-bit image with transparent background set the <see cref="P:devDept.Eyeshot.Control.BackgroundSettings.StyleMode" /> to <see cref="F:devDept.Graphics.backgroundStyleType.None" />.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.RenderToBitmap(System.Drawing.Rectangle,System.Double,System.Double,System.Boolean,System.Boolean)">
      <summary>Returns an image of the current <see cref="T:devDept.Eyeshot.Control.Workspace" /> scene of the active viewport. The image can be scaled even to a poster size one.</summary>
      <param name="rectangle">The rectangle of the viewport to capture in screen coordinates (zero on top)</param>
      <param name="drawScaleFactor">The bitmap scale factor</param>
      <param name="lineWeightFactor">The factor applied to the line weight of the wire entities</param>
      <param name="drawBackground">If false, the drawing of the background is skipped</param>
      <param name="hdwAcceleration">If true, use the hardware acceleration (OpenGL only)</param>
      <returns>The 24-bit image.</returns>
      <remarks>To get a 32-bit image with transparent background set the <see cref="P:devDept.Eyeshot.Control.BackgroundSettings.StyleMode" /> to <see cref="F:devDept.Graphics.backgroundStyleType.None" />.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.WriteToFileRaster(System.Single,System.String,System.Drawing.Imaging.ImageFormat)">
      <summary>Saves a raster image of the current viewport scene on disk.</summary>
      <param name="drawScaleFactor">The image scale factor</param>
      <param name="fileName">A string that contains the name of the file to which to save the raster image</param>
      <param name="format">The file format of the raster image</param>
      <remarks>The saved file will contain a 24-bit image.</remarks>
      <remarks>If the file exists, it's overwritten.</remarks>
      <remarks>To get a 32-bit image with transparent background set the <see cref="P:devDept.Eyeshot.Control.BackgroundSettings.StyleMode" /> to <see cref="F:devDept.Graphics.backgroundStyleType.None" />.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.WriteToFileRaster(System.Single,System.String,System.Drawing.Imaging.ImageFormat,System.Boolean,System.Boolean)">
      <summary>Saves a raster image of the current viewport scene on disk.</summary>
      <param name="drawScaleFactor">The image scale</param>
      <param name="fileName">A string that contains the name of the file to which to save the raster image</param>
      <param name="format">The file format of the raster image</param>
      <param name="drawBackground">If false, the drawing of the background is skipped</param>
      <param name="hdwAcceleration">If true, use the hardware acceleration (OpenGL only)</param>
      <remarks>The saved file will contain a 24-bit image.</remarks>
      <remarks>If the file exists, it's overwritten.</remarks>
      <remarks>To get a 32-bit image with transparent background set the <see cref="P:devDept.Eyeshot.Control.BackgroundSettings.StyleMode" /> to <see cref="F:devDept.Graphics.backgroundStyleType.None" />.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.WriteToFileRaster(System.Single,System.Double,System.String,System.Drawing.Imaging.ImageFormat,System.Boolean,System.Boolean)">
      <summary>Saves a raster image of the current viewport scene on disk.</summary>
      <param name="drawScaleFactor">The image scale</param>
      <param name="lineWeightFactor">The factor applied to the line weight of the wire entities</param>
      <param name="fileName">A string that contains the name of the file to which to save the raster image</param>
      <param name="format">The file format of the raster image</param>
      <param name="drawBackground">If false, the drawing of the background is skipped</param>
      <param name="hdwAcceleration">If true, use the hardware acceleration (OpenGL only)</param>
      <remarks>The saved file will contain a 24-bit image.</remarks>
      <remarks>If the file exists, it's overwritten.</remarks>
      <remarks>To get a 32-bit image with transparent background set the <see cref="P:devDept.Eyeshot.Control.BackgroundSettings.StyleMode" /> to <see cref="F:devDept.Graphics.backgroundStyleType.None" />.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.WriteToFileVector(System.Boolean,System.String)">
      <summary>
            Saves a vectorial image of the current scene of the active viewport on disk in EMF format.
            </summary>
      <param name="fit">If true fits the entire model in the viewport area to captures the whole scene, else uses the current camera</param>
      <param name="fileName">The name of the file to save</param>
      <seealso cref="T:devDept.Eyeshot.Control.HiddenLinesViewOnFile" />
      <remarks>If the file exists, it's overwritten.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.OnAnimationTimerTick(System.Object)">
      <summary>Occurs every timer tick. Call base class method when overriding.</summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.PageSetup(System.Boolean,System.Boolean,System.Nullable{System.Int32},System.Drawing.Printing.PaperSize,System.Nullable{System.Boolean})">
      <summary>
            Defines the Page Setup.
            </summary>
      <param name="allowMargins">When true, the margins section of the dialog box is
            enabled.</param>
      <param name="showDialog">When true, the PageSetup dialog is shown.</param>
      <param name="defaultMargins">The default margins</param>
      <param name="paperSize">The paper size</param>
      <param name="landscape">The orientation mode</param>
      <returns>
            True if the user has confirmed the settings.
            </returns>
      <example>
        <code lang="C#"><![CDATA[ PrinterSettings printerSettings = new PrinterSettings();
             IEnumerable<PaperSize> paperSizes = printerSettings.PaperSizes.Cast<PaperSize>();
             PaperSize sizeA4 = paperSizes.FirstOrDefault<PaperSize>(size => size.Kind == PaperKind.A4);]]></code>
        <code lang="VB"><![CDATA[ Dim printerSettings As PrinterSettings = New PrinterSettings()
            Dim paperSizes As IEnumerable(Of PaperSize) = printerSettings.PaperSizes.Cast(Of PaperSize)()
            Dim sizeA4 As PaperSize = paperSizes.FirstOrDefault(Of PaperSize)(Function(size) size.Kind = PaperKind.A4)]]></code>
      </example>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.SetPrinterSettings(System.Drawing.Printing.PrinterSettings,System.Boolean)">
      <summary>
            Set the printer settings.
            </summary>
      <param name="printerSettings">The printer settings.</param>
      <param name="showDialog">When true the print dialog is shown before printing, otherwise no.</param>
      <remarks>If you also need to use the PageSetup() method, then this method should be called first.</remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.PageSetup(System.Boolean,System.Boolean,System.Nullable{System.Int32},System.Drawing.Printing.PaperSize,System.Nullable{System.Boolean})" />
      <seealso cref="!:Print(bool)">
      </seealso>
      <seealso cref="!:PrintPreview(Size, bool)">
      </seealso>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.CopyToClipboardRaster(System.Drawing.Size)">
      <summary>
            Copies a raster image of the current viewport scene on the clipboard.
            </summary>
      <param name="bitmapSize">The size in which the viewport will be fitted.</param>
      <remarks>The copied image will be a 24-bit bitmap.</remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.CopyToClipboardRaster(System.Drawing.Size)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.CopyToClipboardRaster(System.Drawing.Size,System.Boolean,System.Boolean)">
      <summary>
            Copies a raster image of the current viewport scene on the clipboard.
            </summary>
      <param name="bitmapSize">The size in which the viewport will be fitted.</param>
      <param name="drawBackground">If true, the drawing of the background is skipped</param>
      <param name="hdwAcceleration">If true, use the hardware acceleration (openGL only)</param>
      <remarks>The copied image will be a 24-bit bitmap.</remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.CopyToClipboardRaster(System.Drawing.Size)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.CopyToClipboardRaster(System.Drawing.Size,System.Double,System.Boolean,System.Boolean)">
      <summary>
            Copies a raster image of the current viewport scene on the clipboard.
            </summary>
      <param name="bitmapSize">The size in which the viewport will be fitted.</param>
      <param name="lineWeightFactor">The factor applied to the line weight of the wire entities</param>
      <param name="drawBackground">If true, the drawing of the background is skipped</param>
      <param name="hdwAcceleration">If true, use the hardware acceleration (openGL only)</param>
      <remarks>The copied image will be a 24-bit bitmap.</remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.CopyToClipboardRaster(System.Drawing.Size)" />/// 
        </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.CopyToClipboardRaster">
      <summary>
            Copies a raster image of the current viewport scene on the clipboard.
            </summary>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.CopyToClipboardRaster(System.Single)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.CopyToClipboardRaster(System.Single)">
      <summary>
            Copies a raster image of the current viewport scene on the clipboard.
            </summary>
      <param name="drawScale">The image scale</param>
      <remarks>The copied image will be a 24-bit bitmap.</remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.CopyToClipboardRaster(System.Drawing.Size)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.CopyToClipboardRaster(System.Single,System.Double)">
      <summary>
            Copies a raster image of the current viewport scene on the clipboard.
            </summary>
      <param name="drawScale">The image scale</param>
      <param name="lineWeightFactor">The factor applied to the line weight of the wire entities</param>
      <remarks>The copied image will be a 24-bit bitmap.</remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.CopyToClipboardRaster(System.Drawing.Size)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.CopyToClipboardVector(System.Boolean)">
      <summary>
            Copies a vectorial image of the current scene of the active viewport on the clipboard.
            </summary>
      <param name="fit">If true fits the entire model in the viewport area to captures the whole scene, else uses the current camera</param>
      <seealso cref="T:devDept.Eyeshot.Control.HiddenLinesViewOnClipboard" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.MakeLoop(System.Collections.Generic.IList{devDept.Eyeshot.Entities.ICurve},System.Int32,System.Double,System.Boolean)">
      <summary>
                Analyzes a number of entities and returns a closed loop of points starting from the
                entity at <paramref name="startIndex" />. You can provide an array of 100
                entities an get a 3D loop of a square made up of 4 lines. Entities connection is
                checked using <paramref name="chordalError" /> parameter, if the end
                points of two entities are farther of this value they will not be connected.
            </summary>
      <returns>The resulting loop of points.</returns>
      <param name="curveList">A list of curves</param>
      <param name="startIndex">The first entity to analyze</param>
      <param name="chordalError">The chordal error</param>
      <param name="reverse">If true, reverses the loop orientation.</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Workspace.ViewChangedEventArgs">
      <summary>
            Class that holds the arguments for <see cref="E:devDept.Eyeshot.Control.Workspace.ViewChanged" /> event.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ViewChangedEventArgs.#ctor(devDept.Eyeshot.viewType)">
      <summary>
            Standard constructor.
            </summary>
      <param name="viewType">One of the <see cref="T:devDept.Eyeshot.viewType" /> values that indicates which view was set</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.ViewChangedEventArgs.ViewType">
      <summary>
            Gets which view was set.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.Workspace.ViewChangedEventHandler">
      <summary>
            Represents the method that will handle the <see cref="E:devDept.Eyeshot.Control.Workspace.ViewChanged" /> event.
            </summary>
      <param name="sender">The source of the event</param>
      <param name="e">A <see cref="T:devDept.Eyeshot.Control.Workspace.ViewChangedEventArgs" /> object that contains the event data</param>
    </member>
    <member name="E:devDept.Eyeshot.Control.Workspace.ViewChanged">
      <summary>
            Occurs when the <see cref="M:devDept.Eyeshot.Control.Workspace.SetView(devDept.Eyeshot.viewType)" /> is called.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.Workspace.SelectionChangedEventHandler">
      <summary>
            Represents the method that will handle the <see cref="E:devDept.Eyeshot.Control.Workspace.SelectionChanged" /> and  <see cref="E:devDept.Eyeshot.Control.Viewport.LabelSelectionChanged" />event. 
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:devDept.Eyeshot.Control.SelectionChangedEventArgs" /> object that contains the event data.</param>
    </member>
    <member name="E:devDept.Eyeshot.Control.Workspace.SelectionChanged">
      <summary>
            Occurs when entity selection has changed.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ZoomFit">
      <summary>
            Fits the entire scene in the viewport control's client area.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ZoomFit(System.Int32)">
      <summary>
            Fits the entire scene in the viewport control's client area.
            </summary>
      <param name="margin">Pixels margin from the border</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ZoomFit(System.Boolean)">
      <summary>
            Fits the entire scene in the viewport control's client area.
            </summary>
      <param name="selectedOnly">If true, fits only selected entities.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ZoomFit(System.Boolean,System.Int32)">
      <summary>
            Fits the entire scene in the viewport control's client area.
            </summary>
      <param name="selectedOnly">If true, fits only selected entities.</param>
      <param name="margin">Pixels margin from the border</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ZoomFit(System.Collections.Generic.IList{devDept.Eyeshot.Entities.Entity},System.Boolean)">
      <summary>
            Fits the entire scene in the viewport control's client area.
            </summary>
      <param name="entList">The list of entities to fit</param>
      <param name="selectedOnly">If true, fits only selected entities.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ZoomFit(System.Collections.Generic.IList{devDept.Eyeshot.Entities.Entity},System.Boolean,System.Int32)">
      <summary>
            Fits the entire scene in the viewport control's client area.
            </summary>
      <param name="entList">The list of entities to fit</param>
      <param name="selectedOnly">If true, fits only selected entities.</param>
      <param name="margin">Pixels margin from the border</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ZoomFitSelectedLeaves">
      <summary>
            Fits the selected entities, including the ones inside BlockReferences.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ZoomFitSelectedLeaves(System.Int32)">
      <summary>
            Fits the selected entities, including the ones inside BlockReferences.
            </summary>
      <param name="margin">Pixels margin from the border</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ZoomFitSelectedLeaves(System.Int32,devDept.Eyeshot.Camera.perspectiveFitType)">
      <summary>
            Fits the selected entities, including the ones inside BlockReferences.
            </summary>
      <param name="margin">Pixels margin from the border</param>
      <param name="perspectiveFitMode">Zoom fit accuracy in perspective projection mode</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ZoomFit(System.Collections.Generic.IList{devDept.Eyeshot.SelectedItem})">
      <summary>
            Fits the selected items.
            </summary>
      <param name="items">The collection of entities to fit</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ZoomFit(System.Collections.Generic.IList{devDept.Eyeshot.SelectedItem},System.Int32)">
      <summary>
            Fits the selected items.
            </summary>
      <param name="items">The collection of entities to fit</param>
      <param name="margin">Pixels margin from the border</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ZoomFit(System.Collections.Generic.IList{devDept.Eyeshot.SelectedItem},System.Int32,devDept.Eyeshot.Camera.perspectiveFitType)">
      <summary>
            Fits the selected items.
            </summary>
      <param name="items">The collection of entities to fit</param>
      <param name="margin">Pixels margin from the border</param>
      <param name="perspectiveFitMode">Zoom fit accuracy in perspective projection mode</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ZoomWindow(System.Drawing.Point,System.Drawing.Point)">
      <summary>
            Zooms to the specified window.
            </summary>
      <param name="p1">Window's diagonal start point in screen coordinates</param>
      <param name="p2">Window's diagonal end point in screen coordinates</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.SetView(devDept.Eyeshot.viewType)">
      <summary>
            Sets the specified view in the active viewport.
            </summary>
      <param name="view">View type</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.SetView(devDept.Eyeshot.viewType,System.Boolean,System.Boolean)">
      <summary>
            Sets the specified view in the active viewport.
            </summary>
      <param name="view">View type</param>
      <param name="fit">If true fits the view</param>
      <param name="animate">If true performs an animation when changing the view</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.SetView(devDept.Eyeshot.viewType,System.Boolean,System.Boolean,System.Int32,System.Boolean)">
      <summary>
            Sets the specified view in the active viewport.
            </summary>
      <param name="view">View type</param>
      <param name="fit">If true fits the view</param>
      <param name="margin">Pixels margin from the border, if <paramref name="fit" /> is true</param>
      <param name="animate">If true performs an animation when changing the view</param>
      <param name="selectedOnly">If <paramref name="fit" /> is true, fits only the selected entities</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.SetView(devDept.Geometry.Quaternion,devDept.Geometry.Point3D,System.Double,System.Double)">
      <summary>
            Sets the specified view in the active viewport by doing an animation.
            </summary>
      <param name="rotation">The new camera rotation</param>
      <param name="target">The new cameratarget</param>
      <param name="distance">The new cameradistance</param>
      <param name="zoomFactor">The new camera zoomFactor</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.SetView(devDept.Geometry.Quaternion,devDept.Geometry.Point3D,System.Double,System.Double,System.Boolean)">
      <summary>
            Sets the specified view in the active viewport.
            </summary>
      <param name="rotation">The new camera rotation</param>
      <param name="target">The new cameratarget</param>
      <param name="distance">The new cameradistance</param>
      <param name="zoomFactor">The new camera zoomFactor</param>
      <param name="animate">If true performs an animation when changing the view</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.SaveView">
      <summary>
            Saves the current view on the <see cref="P:devDept.Eyeshot.Control.Viewport.SavedViews" /> stack.
            </summary>
      <remarks>
        <see cref="P:devDept.Eyeshot.Control.Viewport.SavedViews" />
      </remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.PreviousView" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.NextView" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.PreviousView">
      <summary>
            Restores the previous view on the <see cref="P:devDept.Eyeshot.Control.Viewport.SavedViews" /> stack.
            </summary>
      <remarks>
        <see cref="P:devDept.Eyeshot.Control.Viewport.SavedViews" />
      </remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.SaveView" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.NextView" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.NextView">
      <summary>
            Restores the next view previously saved on the <see cref="P:devDept.Eyeshot.Control.Viewport.SavedViews" /> stack.
            </summary>
      <remarks>
        <see cref="P:devDept.Eyeshot.Control.Viewport.SavedViews" />
      </remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.PreviousView" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.NextView" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.AnimateCamera">
      <summary>
            If true, animates the camera in the commands that change its position or orientation.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.AnimateCameraDuration">
      <summary>
            Gets or sets the duration in milliseconds of the camera animations.
            </summary>
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.SetView(devDept.Eyeshot.viewType,System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Int32)" />
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.StopCameraAnimation" />
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.IsCameraAnimating" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ProcessSelectionByPolygon(System.Collections.Generic.List{devDept.Geometry.Point2D},System.Boolean,System.Int32[]@,System.Collections.Generic.List{System.Int32})">
      <summary>
        <para>Selects each entity crossing the specified selection polygon.</para>
        <para>This method is deprecated. Use the overload with the <see cref="T:devDept.Eyeshot.Control.SelectionChangedEventArgs" /> parameter.</para>
      </summary>
      <param name="selectionPolygon">Selection polygon in camera screen coordinates</param>
      <param name="invert">If true, inverts current selection status</param>
      <param name="added">The list of entity indices of entities added to selection</param>
      <param name="removed">The list of entity indices of entities removed from selection</param>
      <remarks>Call <see cref="!:Control.Invalidate(System.Drawing.Region)" /> to see the effect of this function.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ProcessSelectionByPolygon(System.Collections.Generic.List{devDept.Geometry.Point2D},System.Boolean,devDept.Eyeshot.Control.SelectionChangedEventArgs)">
      <summary>
            Selects each entity crossing the specified selection polygon.
            </summary>
      <param name="selectionPolygon">Selection polygon in camera screen coordinates</param>
      <param name="invert">If true, inverts current selection status</param>
      <param name="eventArgs">The selection changed data</param>
      <remarks>Call <see cref="!:Control.Invalidate(System.Drawing.Region)" /> to see the effect of this function.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ProcessSelectionByPolygonEnclosed(System.Collections.Generic.List{devDept.Geometry.Point2D},System.Boolean,System.Int32[]@,System.Collections.Generic.List{System.Int32})">
      <summary>
        <para>Selects each entity completely enclosed in the specified selection rectangle.</para>
        <para>This method is deprecated. Use the overload with the <see cref="T:devDept.Eyeshot.Control.SelectionChangedEventArgs" /> parameter.</para>
      </summary>
      <param name="selectionPolygon">Selection polygon in screen coordinates</param>
      <param name="added">The list of entity indices of entities added to selection</param>
      <param name="removed">The list of entity indices of entities removed from selection</param>
      <param name="invert">If true, inverts current selection status</param>
      <remarks>Call <see cref="!:Control.Invalidate(System.Drawing.Region)" /> to see the effect of this function.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ProcessSelectionByPolygonEnclosed(System.Collections.Generic.List{devDept.Geometry.Point2D},System.Boolean,devDept.Eyeshot.Control.SelectionChangedEventArgs)">
      <summary>
            Selects each entity completely enclosed in the specified selection rectangle.
            </summary>
      <param name="selectionPolygon">Selection polygon in screen coordinates</param>
      <param name="eventArgs">The selection changed data</param>
      <param name="invert">If true, inverts current selection status</param>
      <remarks>Call <see cref="!:Control.Invalidate(System.Drawing.Region)" /> to see the effect of this function.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ProcessSelectionByPolygonVisibleOnly(System.Collections.Generic.List{devDept.Geometry.Point2D},System.Boolean,System.Int32[]@,System.Collections.Generic.List{System.Int32})">
      <summary>
        <para>Selects each visible entity in the specified selection polygon.</para>
        <para>This method is deprecated. Use the overload with the <see cref="T:devDept.Eyeshot.Control.SelectionChangedEventArgs" /> parameter.</para>
      </summary>
      <param name="selectionPolygon">Selection polygon in screen coordinates</param>
      <param name="added">The list of entity indices of entities added to selection</param>
      <param name="removed">The list of entity indices of entities removed from selection</param>
      <param name="invert">If true, inverts current selection status</param>
      <remarks>Call <see cref="!:Control.Invalidate(System.Drawing.Region)" /> to see the effect of this function.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ProcessSelectionByPolygonVisibleOnly(System.Collections.Generic.List{devDept.Geometry.Point2D},System.Boolean,devDept.Eyeshot.Control.SelectionChangedEventArgs)">
      <summary>
            Selects each visible entity in the specified selection polygon.
            </summary>
      <param name="selectionPolygon">Selection polygon in screen coordinates</param>
      <param name="eventArgs">The selection changed data</param>
      <param name="invert">If true, inverts current selection status</param>
      <remarks>Call <see cref="!:Control.Invalidate(System.Drawing.Region)" /> to see the effect of this function.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ProcessSelectionVisibleOnly(System.Drawing.Rectangle,System.Boolean,System.Boolean,devDept.Eyeshot.Control.SelectionChangedEventArgs,System.Boolean,System.Boolean)">
      <summary>
            Selects only visible entities in the specified rectangle.
            </summary>
      <remarks>
            Call <see cref="!:Control.Invalidate()" /> to see the effect of this function.
            </remarks>
      <param name="selectionBox">Selection rectangle in screen coordinates</param>
      <param name="firstOnly">When true, returns immediately after selecting the first
            entity</param>
      <param name="invert">If true, inverts current selection status</param>
      <param name="eventArgs">The selection changed data</param>
      <param name="selectableOnly">When true, checks the <see cref="P:devDept.Eyeshot.Entities.Entity.Selectable" /> property, otherwise no.</param>
      <param name="temporarySelection">Tells if the selection is part of a dynamic
            selection session (see <see cref="F:devDept.Eyeshot.actionType.SelectVisibleByPickDynamic" />)</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ProcessSelectionVisibleOnlyLabels(System.Drawing.Rectangle,System.Boolean,System.Boolean,devDept.Eyeshot.Control.SelectionChangedEventArgs,System.Boolean)">
      <summary>
            Selects only visible labels in the specified rectangle.
            </summary>
      <param name="selectionBox">Selection rectangle in screen coordinates</param>
      <param name="firstOnly">When true, returns immediately after selecting the first entity</param>
      <param name="invert">When true, inverts current selection status</param>
      <param name="eventArgs">The data where the added and removed labels are written</param>
      <param name="selectableOnly">When true, checks the <see cref="P:devDept.Eyeshot.Entities.Entity.Selectable" /> property, otherwise no.</param>
      <remarks>Call <see cref="!:Control.Invalidate(System.Drawing.Region)" /> to see the effect of this function.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ProcessSelection(System.Drawing.Rectangle,System.Boolean,System.Boolean,System.Int32[]@,System.Collections.Generic.List{System.Int32},System.Boolean)">
      <summary>
        <para>Selects each entity crossing the specified selection rectangle.</para>
        <para>This method is deprecated. Use the overload with the <see cref="T:devDept.Eyeshot.Control.SelectionChangedEventArgs" /> parameter.</para>
      </summary>
      <param name="selectionBox">Selection rectangle in screen coordinates</param>
      <param name="added">The list of entity indices of entities added to selection</param>
      <param name="removed">The list of entity indices of entities removed from selection</param>
      <param name="firstOnly">When true, returns immediately after selecting the first entity</param>
      <param name="invert">When true, inverts current selection status</param>
      <param name="selectableOnly">When true, checks the <see cref="P:devDept.Eyeshot.Entities.Entity.Selectable" /> property, otherwise no.</param>
      <remarks>Call <see cref="!:Control.Invalidate(System.Drawing.Region)" /> to see the effect of this function.</remarks>
      <remarks>All entities in the selectionBox are considered, even the ones covered by others.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ProcessSelection(System.Drawing.Rectangle,System.Boolean,System.Boolean,devDept.Eyeshot.Control.SelectionChangedEventArgs,System.Boolean)">
      <summary>
            Selects each entity crossing the specified selection rectangle.
            </summary>
      <param name="selectionBox">Selection rectangle in screen coordinates</param>
      <param name="eventArgs">The selection changed data</param>
      <param name="firstOnly">When true, returns immediately after selecting the first entity</param>
      <param name="invert">When true, inverts current selection status</param>
      <param name="selectableOnly">When true, checks the <see cref="P:devDept.Eyeshot.Entities.Entity.Selectable" /> property, otherwise no.</param>
      <remarks>Call <see cref="!:Control.Invalidate(System.Drawing.Region)" /> to see the effect of this function.</remarks>
      <remarks>All entities in the selectionBox are considered, even the ones covered by others.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.GetAllCrossingEntities(System.Drawing.Rectangle,System.Boolean)">
      <summary>
            Returns the list of all the visible and selectable entities geometrically crossing the selection box, regardless of their actual visibility on screen.
            </summary>
      <param name="selectionBox">Selection rectangle's in screen coordinates</param>
      <param name="selectableOnly">When true, checks the <see cref="P:devDept.Eyeshot.Entities.Entity.Selectable" /> property, otherwise no.</param>
      <returns>The list of entity indices.</returns>
      <remarks>All entities in the selectionBox are considered, even the ones covered by others.</remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.GetAllEntitiesUnderMouseCursor(System.Drawing.Point,System.Boolean)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.GetCrossingEntities(System.Drawing.Rectangle,System.Boolean,System.Boolean)">
      <summary>
            Returns the list of all the visible and selectable entities crossing the specified selection box.
            </summary>
      <param name="selectionBox">Selection Rectangle box in screen coordinates</param>
      <param name="firstOnly">When true, returns immediately after selecting the first entity</param>
      <param name="selectableOnly">When true, checks the <see cref="P:devDept.Eyeshot.Entities.Entity.Selectable" /> property, otherwise no.</param>
      <returns>An array of indices representing the selected entity position.</returns>
      <remarks>
        <para>All entities in the selectionBox are considered, even the ones covered by others.</para>
        <para>Affected by selection scope (<see cref="!:Design.SetSelectionScope()" />).</para>
      </remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.GetCrossingEntities(System.Drawing.Rectangle,System.Collections.Generic.IList{devDept.Eyeshot.Entities.Entity},System.Boolean,System.Boolean,devDept.Geometry.Transformation)">
      <summary>
            Returns the list of all the visible and selectable entities crossing the specified selection box.
            </summary>
      <param name="selectionBox">Selection Rectangle box in screen coordinates</param>
      <param name="entList">A custom list of entities</param>
      <param name="firstOnly">When true, returns immediately after selecting the first entity</param>
      <param name="selectableOnly">When true, checks the <see cref="P:devDept.Eyeshot.Entities.Entity.Selectable" /> property, otherwise no.</param>
      <param name="accParentTransform">Accumulated parent transformation or null/Nothing</param>
      <returns>An array of indices representing the selected entity position.</returns>
      <remarks>All entities in the selectionBox are considered, even the ones covered by others.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ProcessSelectionEnclosed(System.Drawing.Rectangle,System.Boolean,System.Boolean,System.Int32[]@,System.Collections.Generic.List{System.Int32})">
      <summary>
        <para>Selects each entity completely enclosed in the specified selection rectangle.</para>
        <para>This method is deprecated. Use the overload with the <see cref="T:devDept.Eyeshot.Control.SelectionChangedEventArgs" /> parameter.</para>
      </summary>
      <param name="selectionBox">Selection rectangle's in screen coordinates</param>
      <param name="added">The list of entity indices of entities added to selection</param>
      <param name="removed">The list of entity indices of entities removed from selection</param>
      <param name="firstOnly">If true, returns immediately after selecting the first entity</param>
      <param name="invert">If true, inverts current selection status</param>
      <remarks>Call <see cref="!:Control.Invalidate(System.Drawing.Region)" /> to see the effect of this function.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ProcessSelectionEnclosed(System.Drawing.Rectangle,System.Boolean,System.Boolean,devDept.Eyeshot.Control.SelectionChangedEventArgs)">
      <summary>
            Selects each entity completely enclosed in the specified selection rectangle.
            </summary>
      <param name="selectionBox">Selection rectangle's in screen coordinates</param>
      <param name="eventArgs">The selection changed data</param>
      <param name="firstOnly">If true, returns immediately after selecting the first entity</param>
      <param name="invert">If true, inverts current selection status</param>
      <remarks>Call <see cref="!:Control.Invalidate(System.Drawing.Region)" /> to see the effect of this function.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.GetAllEnclosedEntities(System.Drawing.Rectangle)">
      <summary>
            Selects all entities completely enclosed in the specified selection rectangle.
            </summary>
      <param name="selectionBox">Selection rectangle's in screen coordinates</param>
      <returns>The list of entity indices.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.SetColorDrawForSelectionAndUpdateIdItemsMap``1(devDept.Eyeshot.GfxDrawForSelectionParams,devDept.Eyeshot.ISelectableItem,System.Int32,System.Int32)">
      <summary>
            Sets a coded color depending on the entity id.
            </summary>
      <param name="data">The selection parameters</param>
      <param name="item">The item corresponding to the <see cref="F:devDept.Eyeshot.GfxDrawForSelectionParams.FalseColorIndex" />. If null there is no conversion to perform on the falseColorIndex.</param>
      <param name="partIndex">Index of the part (edge, face, vertex). If -1, the item is not a subPart</param>
      <param name="shellIndex">Index of the shell (Brep only)</param>
      <remarks>Used by visible selection methods.</remarks>
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.SuspendSetColorForSelection" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.SetColorDrawForSelection(System.Int32)">
      <summary>
            Sets a coded color depending on the entity id.
            </summary>
      <param name="currentEntityId">The id of the entity</param>
      <remarks>Used by visible selection methods.</remarks>
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.SuspendSetColorForSelection" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Workspace.SuspendSetColorForSelection">
      <summary>
            Suspends the set of the color by the <see cref="M:devDept.Eyeshot.Control.Workspace.SetColorDrawForSelectionAndUpdateIdItemsMap``1(devDept.Eyeshot.GfxDrawForSelectionParams,devDept.Eyeshot.ISelectableItem,System.Int32,System.Int32)" />.
            </summary>
      <remarks>Used to perform custom selection techniques, like the selection of the triangles inside a Mesh.</remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.SetColorDrawForSelectionAndUpdateIdItemsMap``1(devDept.Eyeshot.GfxDrawForSelectionParams,devDept.Eyeshot.ISelectableItem,System.Int32,System.Int32)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ScreenToPlane(System.Drawing.Point,devDept.Geometry.Plane,devDept.Geometry.Point3D@)">
      <summary>
            Maps screen coordinates to world coordinates in the active viewport. 
            </summary>
      <param name="mousePos">Mouse cursor position (zero on top)</param>
      <param name="plane">The plane</param>
      <param name="intPoint">The intersection point. null/Nothing if the plane perpendicular to the screen.</param>
      <returns>True if the mapping succeeded, false otherwise.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ScreenToPlane(System.Drawing.Point,devDept.Geometry.PlaneEquation,devDept.Geometry.Point3D@)">
      <summary>
            Maps screen coordinates to world coordinates in the active viewport. 
            </summary>
      <param name="mousePos">Mouse cursor position (zero on top)</param>
      <param name="pe">The plane equation</param>
      <param name="intPoint">The intersection point. null/Nothing if the plane perpendicular to the screen.</param>
      <returns>True if the mapping succeeded, false otherwise.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ScreenToPlane(System.Collections.Generic.IList{System.Drawing.Point},devDept.Geometry.Plane)">
      <summary>
            Maps screen coordinates to world coordinates in the active viewport. 
            </summary>
      <param name="mousePointList">2D mouse point list (zero on top)</param>
      <param name="plane">The plane</param>
      <returns>The associated 3D world point list.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ScreenToPlane(System.Collections.Generic.IList{System.Drawing.Point},devDept.Geometry.PlaneEquation)">
      <summary>
            Maps screen coordinates to world coordinates in the active viewport. 
            </summary>
      <param name="mousePointList">2D mouse point list (zero on top)</param>
      <param name="pe">The plane equation</param>
      <returns>The associated 3D world point list.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ScreenToWorld(System.Collections.Generic.IList{System.Drawing.Point})">
      <summary>
            Maps screen coordinates to world coordinates. 
            </summary>
      <param name="mousePointList">2D mouse point list (zero on top)</param>
      <returns>The associated 3D world point list.</returns>
      <remarks>Positions that don't have geometry underneath will return null.</remarks>
      <remarks>The depth is read from the depth buffer, so its precision affects accuracy.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.ScreenToWorld(System.Drawing.Point)">
      <summary>
            Maps screen coordinates to world coordinates. 
            </summary>
      <param name="mousePos">Mouse cursor position (zero on top)</param>
      <returns>The associated 3D world point if there is geometry in the point position, null otherwise.</returns>
      <remarks>The depth is read from the depth buffer, so its precision affects accuracy.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.WorldToScreen(devDept.Geometry.Point3D)">
      <summary>
            Maps world coordinates to screen coordinates. 
            </summary>
      <param name="point">The 3D point to project on screen</param>
      <returns>The associated projected screen point (zero on bottom)</returns>
      <remarks>The z-component of the returned point is in the normalized device coordinate space [0,1]. 
            A value outside the [0,1] range means that the point is outside the near-far clipping planes of the camera.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.WorldToScreen(System.Double,System.Double,System.Double)">
      <summary>
            Maps world coordinates to screen coordinates. 
            </summary>
      <param name="x">3D point's x-coordinate</param>
      <param name="y">3D point's y-coordinate</param>
      <param name="z">3D point's z-coordinate</param>
      <returns>The associated projected screen point (zero on bottom).</returns>
      <remarks>The z-component of the returned point is in the normalized device coordinate space [0,1]. 
            A value outside the [0,1] range means that the point is outside the near-far clipping planes of the camera.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.WorldToScreen(System.Collections.Generic.IList{devDept.Geometry.Point3D})">
      <summary>
            Maps world coordinates to screen coordinates. 
            </summary>
      <param name="pointList">3D point list</param>
      <returns>The associated projected screen point list (zero on bottom).</returns>
      <remarks>The z-component of the returned point is in the normalized device coordinate space [0,1]. 
            A value outside the [0,1] range means that the point is outside the near-far clipping planes of the camera.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.FindClosestVertex(System.Drawing.Point,System.Double,devDept.Geometry.Point3D@)">
      <summary>
            Looks for the model vertex whose 2D screen projection is closer to the mouse cursor.
            </summary>
      <param name="mousePos">Mouse position (zero on top)</param>
      <param name="maxDistance">Limit the search to points at this distance in pixels from mouse cursor position</param>
      <param name="closest">The closest vertex as a 3D point</param>
      <returns>The entity index if the closest vertex is nearer than <paramref name="maxDistance" />, -1 otherwise.</returns>
      <remarks>The <paramref name="closest" /> point is in the coordinate space of the <see cref="P:devDept.Eyeshot.Control.Workspace.CurrentBlockReference" /> so, if there is a current BlockReference, to get the 3D world coordinates
            of the <paramref name="closest" /> point you need to transform it by the <see cref="P:devDept.Eyeshot.Control.Workspace.CurrentTransformation" />.</remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.IsCloserVertex(devDept.Geometry.Point3D,System.Double,System.Double)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.FindClosestVertex(System.Drawing.Point,System.Double,System.Type,devDept.Geometry.Point3D@)">
      <summary>
            Looks for the model vertex whose 2D screen projection is closer to the mouse cursor skipping entities different from <paramref name="entType" />.
            </summary>
      <param name="mousePos">Mouse position (zero on top)</param>
      <param name="maxDistance">Limit the search to points at this distance in pixels from mouse cursor position</param>
      <param name="entType">The type of entities to process</param>
      <param name="closest">The closest vertex as a 3D point</param>
      <returns>The entity index if the closest vertex is nearer than <paramref name="maxDistance" /> and the entity type is <paramref name="entType" />, -1 otherwise.</returns>
      <remarks>The returned entity index refers to the <see cref="P:devDept.Eyeshot.Control.Workspace.Entities" /> if there is no current BlockReference, else it refers to the <see cref="P:devDept.Eyeshot.Block.Entities" />
            of the Block referred by the <see cref="P:devDept.Eyeshot.Control.Workspace.CurrentBlockReference" />.
            Also, the <paramref name="closest" /> point is in the coordinate space of the <see cref="P:devDept.Eyeshot.Control.Workspace.CurrentBlockReference" /> so, if there is a current BlockReference, to get the 3D world coordinates
            of the <paramref name="closest" /> point you need to transform it by the <see cref="P:devDept.Eyeshot.Control.Workspace.CurrentTransformation" />.</remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.IsCloserVertex(devDept.Geometry.Point3D,System.Double,System.Double)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.FindClosestVertex(System.Drawing.Point,System.Double,System.Int32@)">
      <summary>
            Looks for the model vertex whose 2D screen projection is closer to the mouse cursor.
            </summary>
      <param name="mousePos">Mouse position (zero on top)</param>
      <param name="maxDistance">Limit the search to points at this distance in pixels from mouse cursor position</param>
      <param name="closestIndex">The closest vertex index</param>
      <returns>The entity index if the closest vertex is nearer than <paramref name="maxDistance" />, -1 otherwise.</returns>
      <remarks>The returned entity index refers to the <see cref="P:devDept.Eyeshot.Control.Workspace.Entities" /> if there is no current BlockReference, else it refers to the <see cref="P:devDept.Eyeshot.Block.Entities" />
            of the Block referred by the <see cref="P:devDept.Eyeshot.Control.Workspace.CurrentBlockReference" />.
            Also, the <paramref name="closestIndex" /> point is in the coordinate space of the <see cref="P:devDept.Eyeshot.Control.Workspace.CurrentBlockReference" /> so, if there is a current BlockReference, to get the 3D world coordinates
            of the <paramref name="closestIndex" /> point you need to transform it by the <see cref="P:devDept.Eyeshot.Control.Workspace.CurrentTransformation" />.</remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.IsCloserVertex(devDept.Geometry.Point3D,System.Double,System.Double)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.FindClosestVertex(devDept.Eyeshot.Entities.Entity,System.Drawing.Point,System.Double)">
      <summary>
            Looks for the vertex of the specified <paramref name="entity" /> whose 2D screen projection is closer to the mouse cursor.
            </summary>
      <param name="entity">The entity to process</param>
      <param name="mousePos">Mouse position (zero on top)</param>
      <param name="maxDistance">Limit the search to points at this distance in pixels from mouse cursor position</param>
      <returns>The closest vertex, if any is found.</returns>
      <remarks>The returned point is in the coordinate space of the <see cref="P:devDept.Eyeshot.Control.Workspace.CurrentBlockReference" /> so, if there is a current BlockReference, to get the 3D world coordinates
            of the point you need to transform it by the <see cref="P:devDept.Eyeshot.Control.Workspace.CurrentTransformation" />.</remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.IsCloserVertex(devDept.Geometry.Point3D,System.Double,System.Double)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.FindClosestVertex(System.Drawing.Point,System.Double,devDept.Eyeshot.Entities.HitVertex@)">
      <summary>
            Looks for the model vertex whose 2D screen projection is closer to the mouse cursor.
            </summary>
      <param name="mousePos">Mouse position (zero on top)</param>
      <param name="maxDistance">Limit the search to points at this distance in pixels from mouse cursor position</param>
      <param name="closestVertex">The closest vertex</param>
      <returns>The entity index if the closest vertex is nearer than <paramref name="maxDistance" />, -1 otherwise.</returns>
      <remarks>The <paramref name="closestVertex" /> point is in the coordinate space of the <see cref="P:devDept.Eyeshot.Control.Workspace.CurrentBlockReference" /> so, if there is a current BlockReference, to get the 3D world coordinates
            of the <paramref name="closestVertex" /> point you need to transform it by the <see cref="P:devDept.Eyeshot.Control.Workspace.CurrentTransformation" />.</remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.IsCloserVertex(devDept.Geometry.Point3D,System.Double,System.Double)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.FindClosestVertex(System.Drawing.Point,System.Double,System.Type,devDept.Eyeshot.Entities.HitVertex@)">
      <summary>
            Looks for the model vertex whose 2D screen projection is closer to the mouse cursor skipping entities different from <paramref name="entType" />.
            </summary>
      <param name="mousePos">Mouse position (zero on top)</param>
      <param name="maxDistance">Limit the search to points at this distance in pixels from mouse cursor position</param>
      <param name="entType">The type of entities to process</param>
      <param name="closestVertex">The closest vertex, with the full information to retrieve the vertex from a <see cref="T:devDept.Eyeshot.Entities.Brep" /> or <see cref="T:devDept.Eyeshot.Entities.Solid" /></param>
      <returns>The entity index if the closest vertex is nearer than <paramref name="maxDistance" /> and the entity type is <paramref name="entType" />, -1 otherwise.</returns>
      <remarks>The <paramref name="closestVertex" /> point is in the coordinate space of the <see cref="P:devDept.Eyeshot.Control.Workspace.CurrentBlockReference" /> so, if there is a current BlockReference, to get the 3D world coordinates
            of the <paramref name="closestVertex" /> point you need to transform it by the <see cref="P:devDept.Eyeshot.Control.Workspace.CurrentTransformation" />.</remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.IsCloserVertex(devDept.Geometry.Point3D,System.Double,System.Double)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.FindClosestVertices(System.Drawing.Point,System.Double)">
      <summary>
            Looks for the model vertices whose 2D screen projections are closer to the mouse than the <paramref name="maxDistance" />.
            </summary>
      <param name="mousePos">Mouse position (zero on top)</param>
      <param name="maxDistance">Limit the search to points at this distance in pixels from mouse cursor position</param>
      <returns>The list of vertices nearer than <paramref name="maxDistance" />.</returns>
      <remarks>The returned points are in the coordinate space of the <see cref="P:devDept.Eyeshot.Control.Workspace.CurrentBlockReference" /> so, if there is a current BlockReference, to get the 3D world coordinates
            of the points you need to transform them by the <see cref="P:devDept.Eyeshot.Control.Workspace.CurrentTransformation" />.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.FindClosestVertices(System.Drawing.Point,System.Double,System.Type)">
      <summary>
            Looks for the model vertices whose 2D screen projections are closer to the mouse cursor skipping entities different from <paramref name="entType" />.
            </summary>
      <param name="mousePos">Mouse position (zero on top)</param>
      <param name="maxDistance">Limit the search to points at this distance in pixels from mouse cursor position</param>
      <param name="entType">The type of entities to process</param>
      <returns>The list of vertices nearer than <paramref name="maxDistance" /> and belonging to entities of type <paramref name="entType" />.</returns>
      <remarks>The returned points are in the coordinate space of the <see cref="P:devDept.Eyeshot.Control.Workspace.CurrentBlockReference" /> so, if there is a current BlockReference, to get the 3D world coordinates
            of the points you need to transform them by the <see cref="P:devDept.Eyeshot.Control.Workspace.CurrentTransformation" />.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.FindClosestVertices(devDept.Eyeshot.Entities.Entity,System.Drawing.Point,System.Double)">
      <summary>
            Looks for the model vertices of the specified <paramref name="entity" /> whose 2D screen projections are closer to the mouse cursor.
            </summary>
      <param name="entity">The entity to process</param>
      <param name="mousePos">Mouse position (zero on top)</param>
      <param name="maxDistance">Limit the search to points at this distance in pixels from mouse cursor position</param>
      <returns>The list of vertices of the specified <paramref name="entity" /> nearer than <paramref name="maxDistance" />.</returns>
      <remarks>The returned points are in the coordinate space of the <see cref="P:devDept.Eyeshot.Control.Workspace.CurrentBlockReference" /> so, if there is a current BlockReference, to get the 3D world coordinates
            of the points you need to transform them by the <see cref="P:devDept.Eyeshot.Control.Workspace.CurrentTransformation" />.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.FindClosestVertex(System.Drawing.Point,System.Double,System.Type,System.Int32@)">
      <summary>
            Looks for the model vertex whose 2D screen projection is closer to the mouse cursor skipping entities different from entType.
            </summary>
      <param name="mousePos">Mouse position (zero on top)</param>
      <param name="maxDistance">Limit the search to points at this distance from mouse cursor position</param>
      <param name="entType">Entity type</param>
      <param name="closestIndex">The closest vertex index</param>
      <returns>The entity index if the closest vertex is nearer than <paramref name="maxDistance" /> and the entity type is <paramref name="entType" />, -1 otherwise.</returns>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.IsCloserVertex(devDept.Geometry.Point3D,System.Double,System.Double)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.IsCloserVertex(devDept.Geometry.Point3D,System.Double,System.Double)">
      <summary>
            Tells if the projected point, whose square distance from the mouse cursor is <paramref name="squareDistance" />, is closer than the <paramref name="currentMinimumSquareDistance" />.
            </summary>
      <param name="projectedPt">The point in projected Camera coordinates</param>
      <param name="squareDistance">The 2D square distance from the mouse position</param>
      <param name="currentMinimumSquareDistance">The current minimum 2D square distance from the mouse position</param>
      <returns>True if the point is closer, false otherwise.</returns>
      <remarks>This method is used by the <see cref="M:devDept.Eyeshot.Control.Workspace.FindClosestVertex(System.Drawing.Point,System.Double,devDept.Geometry.Point3D@)" /> to compute the closest vertex to the mouse in 2D. Override this method to consider also the Z of the <paramref name="projectedPt" />.</remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.FindClosestVertex(System.Drawing.Point,System.Double,devDept.Geometry.Point3D@)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.FindClosestVertex(System.Drawing.Point,System.Double,System.Type,devDept.Geometry.Point3D@)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.FindClosestVertex(System.Drawing.Point,System.Double,System.Int32@)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.FindClosestVertex(System.Drawing.Point,System.Double,System.Type,System.Int32@)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.UpdateVisibleSelection">
      <summary>
            This method needs to be called before using one of the visible selection action modes or one of the methods that get the entities (or labels) under the mouse cursor if 
            the <see cref="P:devDept.Eyeshot.Entities.Entity.Visible" /> or the <see cref="P:devDept.Eyeshot.Entities.Entity.Selectable" /> (or <see cref="P:devDept.Eyeshot.Control.Labels.Label.Visible" /> or <see cref="P:devDept.Eyeshot.Control.Labels.Label.Selectable" /> in case of labels selection) changed and the camera was not moved.
            </summary>
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.ActionMode" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.GetEntityUnderMouseCursor(System.Drawing.Point,System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.GetItemUnderMouseCursor(System.Drawing.Point,System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.GetAllEntitiesUnderMouseCursor(System.Drawing.Point,System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.GetAllItemsUnderMouseCursor(System.Drawing.Point,System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.GetAllLabelsUnderMouseCursor(System.Drawing.Point,System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.GetLabelUnderMouseCursor(System.Drawing.Point,System.Boolean)" />
      <seealso cref="P:devDept.Eyeshot.Entities.Entity.Visible" />
      <seealso cref="P:devDept.Eyeshot.Entities.Entity.Selectable" />
      <seealso cref="P:devDept.Eyeshot.Control.Labels.Label.Visible" />
      <seealso cref="P:devDept.Eyeshot.Control.Labels.Label.Selectable" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.GetEntityUnderMouseCursor(System.Drawing.Point,System.Boolean)">
      <summary>
            Returns the index of the first top level entity under the mouse cursor.
            </summary>
      <param name="mousePos">Mouse position in screen coordinates</param>
      <param name="selectableOnly">When true, checks the <see cref="P:devDept.Eyeshot.Entities.Entity.Selectable" /> property, otherwise no.</param>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.GetItemUnderMouseCursor(System.Drawing.Point,System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.GetLabelUnderMouseCursor(System.Drawing.Point,System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.UpdateVisibleSelection" />
      <remarks>The sensitivity is affected by the <see cref="P:devDept.Eyeshot.Control.Workspace.PickBoxSize" /> parameter.</remarks>
      <returns>The index of the entity, -1 otherwise.</returns>
      <example>
                The following code fragment demonstrate how to highlight the entity under the mouse
                cursor.
                <code lang="CS" title="[New Example]">
            private void viewportProfessional1_MouseMove(
                     object sender, MouseEventArgs e)
            {
             
               viewportProfessional1.ClearSelection();
             
               int id = viewportProfessional1.GetEntityUnderMouseCursor(e.Location);
             
               if (id != -1)
               {
             
                  Entity ent = viewportProfessional1.Entities[id] as Entity;
             
                  ent.Selected = true;
             
               }
                        
               viewportProfessional1.Invalidate();
             
            }
                </code><code lang="VB" title="[New Example]">
            Private Sub ViewportProfessional1_Move( _
                      ByVal sender As System.Object, _
                      ByVal e As System.EventArgs) _
                      Handles ViewportProfessional1.Move
                              
               ViewportProfessional1.ClearSelection()
             
               Dim id As Integer = ViewportProfessional1.GetEntityUnderMouseCursor( _ 
                     e.Location)
             
               If id &lt;&gt; -1 Then
               
                  Dim ent As Entity = ViewportProfessional1.Entities(id)
                      
                  ent.Selected = True
             
               End If
                        
               ViewportProfessional1.Invalidate()
             
            End Sub
                </code></example>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.GetItemUnderMouseCursor(System.Drawing.Point,System.Boolean)">
      <summary>
            Gets the first item under the mouse cursor (which may include the parents stack for nested entities).
            </summary>
      <returns>The item</returns>
      <remarks>The <see cref="P:devDept.Eyeshot.Control.Design.AssemblySelectionMode" /> determines whether the top level entities or nested entities are returned.</remarks>
      <seealso cref="P:devDept.Eyeshot.Control.Design.SelectionFilterMode" />
      <seealso cref="P:devDept.Eyeshot.Control.Design.AssemblySelectionMode" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.GetEntityUnderMouseCursor(System.Drawing.Point,System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.GetLabelUnderMouseCursor(System.Drawing.Point,System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.UpdateVisibleSelection" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.GetLabelUnderMouseCursor(System.Drawing.Point,System.Boolean)">
      <summary>
            Returns the index of the first label under the mouse cursor.
            </summary>
      <param name="mousePos">Mouse position in screen coordinates</param>
      <param name="selectableOnly">When true, checks the <see cref="P:devDept.Eyeshot.Control.Labels.Label.Selectable" /> property, otherwise no.</param>
      <remarks>The sensitivity is affected by the <see cref="P:devDept.Eyeshot.Control.Workspace.PickBoxSize" /> parameter.</remarks>
      <returns>The index of the label, -1 otherwise.</returns>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.GetEntityUnderMouseCursor(System.Drawing.Point,System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.GetItemUnderMouseCursor(System.Drawing.Point,System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.UpdateVisibleSelection" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.RotateCamera(System.Drawing.Point)">
      <summary>Sets the view direction as the normal of the plane under the mouse cursor.</summary>
      <param name="mouseLocation">Location of the mouse</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.SetView(devDept.Geometry.Vector3D,System.Boolean,System.Int32,System.Boolean)">
      <summary>Sets the view direction of the camera to the specified direction.</summary>
      <param name="direction">The new camera direction.</param>
      <param name="fit">if true fits the scene in the viewport</param>
      <param name="margin">Pixels margin from the border, if <paramref name="fit" /> is true</param>
      <param name="selectedOnly">If <paramref name="fit" /> is true, fits only the selected entities</param>
      <remarks>The orientation of the camera is performed with an animation if <see cref="P:devDept.Eyeshot.Control.Workspace.AnimateCamera" /> is true.
             The direction points outside the screen, so the Camera is actually looking in the opposite direction.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.SetView(devDept.Geometry.Vector3D,System.Boolean,System.Boolean,System.Int32,System.Boolean)">
      <summary>Sets the view direction of the camera to the specified direction.</summary>
      <param name="direction">The new camera direction.</param>
      <param name="fit">if true fits the scene in the viewport</param>
      <param name="animate">If true performs an animation when changing the view</param>
      <param name="margin">Pixels margin from the border, if <paramref name="fit" /> is true</param>
      <param name="selectedOnly">If <paramref name="fit" /> is true, fits only the selected entities</param>
      <remarks>The direction points outside the screen, so the Camera is actually looking in the opposite direction.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.SetView(devDept.Geometry.Vector3D,devDept.Geometry.Vector3D,System.Boolean,System.Int32,System.Boolean)">
      <summary>Sets the view direction of the camera to the specified direction.</summary>
      <param name="direction">The new camera direction.</param>
      <param name="upVector">The camera up vector</param>
      <param name="fit">if true fits the scene in the viewport</param>
      <param name="margin">Pixels margin from the border, if <paramref name="fit" /> is true</param>
      <param name="selectedOnly">If <paramref name="fit" /> is true, fits only the selected entities</param>
      <remarks>The orientation of the camera is performed with an animation if <see cref="P:devDept.Eyeshot.Control.Workspace.AnimateCamera" /> is true
             The direction points outside the screen, so the Camera is actually looking in the opposite direction.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.SetView(devDept.Geometry.Vector3D,devDept.Geometry.Vector3D,System.Boolean,System.Boolean,System.Int32,System.Boolean)">
      <summary>Sets the view direction of the camera to the specified direction.</summary>
      <param name="direction">The new camera direction.</param>
      <param name="upVector">The camera up vector</param>
      <param name="fit">if true fits the scene in the viewport</param>
      <param name="animate">If true performs an animation when changing the view</param>
      <param name="margin">Pixels margin from the border, if <paramref name="fit" /> is true</param>
      <param name="selectedOnly">If <paramref name="fit" /> is true, fits only the selected entities</param>
      <remarks>The orientation of the camera is performed with an animation if <see cref="P:devDept.Eyeshot.Control.Workspace.AnimateCamera" /> is true
             The direction points outside the screen, so the Camera is actually looking in the opposite direction.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.GetAllEntitiesUnderMouseCursor(System.Drawing.Point,System.Boolean)">
      <summary>
            Returns all the visible (on screen) top level and selectable entities (which may include the parents stack for nested entities) under the mouse cursor in the active viewport.
            </summary>
      <param name="mousePos">Mouse position in screen coordinates</param>
      <param name="selectableOnly">When true, checks the <see cref="P:devDept.Eyeshot.Entities.Entity.Selectable" /> property, otherwise no.</param>
      <remarks>The sensitivity is affected by the <see cref="P:devDept.Eyeshot.Control.Workspace.PickBoxSize" /> parameter.
            Only the entities that are visible on screen and in the selectionBox are considered, the ones covered by other entities are not considered. </remarks>
      <returns>The list of entity indices.</returns>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.UpdateVisibleSelection" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.GetAllCrossingEntities(System.Drawing.Rectangle,System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.GetAllItemsUnderMouseCursor(System.Drawing.Point,System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.GetAllLabelsUnderMouseCursor(System.Drawing.Point,System.Boolean)" />
      <seealso cref="P:devDept.Eyeshot.Control.Design.AssemblySelectionMode" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.GetAllItemsUnderMouseCursor(System.Drawing.Point,System.Boolean)">
      <summary>
            Returns all the visible (on screen) and selectable items (which may include the parents stack for nested entities) under the mouse cursor in the active viewport.
            </summary>
      <param name="mousePos">Mouse position in screen coordinates</param>
      <param name="selectableOnly">When true, checks the <see cref="P:devDept.Eyeshot.Entities.Entity.Selectable" /> property, otherwise no.</param>
      <remarks>The sensitivity is affected by the <see cref="P:devDept.Eyeshot.Control.Workspace.PickBoxSize" /> parameter.</remarks>
      <remarks> Only the items that are visible on screen and in the selectionBox are considered, the ones covered by other entities are not considered.
            The <see cref="P:devDept.Eyeshot.Control.Design.AssemblySelectionMode" /> determines whether the top level entities or nested entities are returned. </remarks>
      <returns>The list of entity indices.</returns>
      <seealso cref="P:devDept.Eyeshot.Control.Design.AssemblySelectionMode" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.UpdateVisibleSelection" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.GetAllCrossingEntities(System.Drawing.Rectangle,System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.GetAllEntitiesUnderMouseCursor(System.Drawing.Point,System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.GetAllLabelsUnderMouseCursor(System.Drawing.Point,System.Boolean)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.GetAllLabelsUnderMouseCursor(System.Drawing.Point,System.Boolean)">
      <summary>
            Returns all the visible labels under the mouse cursor in the active viewport.
            </summary>
      <param name="mousePos">Mouse position in screen coordinates</param>
      <param name="selectableOnly">When true, checks the <see cref="P:devDept.Eyeshot.Control.Labels.Label.Selectable" /> property, otherwise no.</param>
      <remarks>The sensitivity is affected by the <see cref="P:devDept.Eyeshot.Control.Workspace.PickBoxSize" /> parameter.
            Only the labels that are visible on screen and in the selectionBox are considered, the ones covered by other labels are not considered.</remarks>
      <returns>The list of label indices.</returns>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.UpdateVisibleSelection" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.GetAllEntitiesUnderMouseCursor(System.Drawing.Point,System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.GetAllItemsUnderMouseCursor(System.Drawing.Point,System.Boolean)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.GetAllVisibleEntities(System.Drawing.Rectangle,System.Boolean)">
      <summary>
            Returns the list of all visible entities in the specified selection box in the active viewport.
            </summary>
      <param name="selectionBox">Selection rectangle in screen coordinates</param>
      <param name="selectableOnly">When true, checks the <see cref="P:devDept.Eyeshot.Entities.Entity.Selectable" /> property, otherwise no.</param>
      <returns>The list of entity indices.</returns>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.GetAllVisibleItems(System.Drawing.Rectangle,System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.GetAllVisibleLabels(System.Drawing.Rectangle,System.Boolean)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.GetAllVisibleItems(System.Drawing.Rectangle,System.Boolean)">
      <summary>
            Returns the list of all visible items (which may include the parents stack for
            nested entities) in the specified selection box in the active viewport.
            </summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>The <see cref="P:devDept.Eyeshot.Control.Design.SelectionFilterMode" /> determines the type of the
            item selected.</description>
          </item>
          <item>
            <description>The <see cref="P:devDept.Eyeshot.Control.Design.AssemblySelectionMode" /> determines whether the
            top level entities or nested entities are returned.</description>
          </item>
        </list>
      </remarks>
      <param name="selectionBox">Selection rectangle in screen coordinates</param>
      <param name="selectableOnly">When true, checks the <see cref="P:devDept.Eyeshot.Entities.Entity.Selectable" /> property, otherwise no.</param>
      <returns>
            The selected items array.
            </returns>
      <seealso cref="P:devDept.Eyeshot.Control.Design.SelectionFilterMode" />
      <seealso cref="P:devDept.Eyeshot.Control.Design.AssemblySelectionMode" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.GetAllVisibleEntities(System.Drawing.Rectangle,System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.GetAllVisibleLabels(System.Drawing.Rectangle,System.Boolean)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.GetAllVisibleLabels(System.Drawing.Rectangle,System.Boolean)">
      <summary>
            Returns the list of all visible labels in the specified selection box.
            </summary>
      <param name="selectionBox">Selection rectangle in screen coordinates</param>
      <param name="selectableOnly">When true, checks the <see cref="P:devDept.Eyeshot.Control.Labels.Label.Selectable" /> property, otherwise no.</param>
      <returns>The list of label indices in the selection box.</returns>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.GetAllVisibleEntities(System.Drawing.Rectangle,System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.GetAllVisibleItems(System.Drawing.Rectangle,System.Boolean)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.GetVisibleEntitiesFromBackBuffer(devDept.Eyeshot.Control.Viewport,System.Byte[],System.Int32,System.Int32,System.Drawing.Rectangle,System.Boolean)">
      <summary>
            Returns the indices of the entities read from the back buffer in the selectionBox.
            </summary>
      <param name="viewport">The viewport</param>
      <param name="stride">The number of bytes per image row</param>
      <param name="bpp">Bytes per pixel</param>
      <param name="selectionBox">Selection rectangle in screen coordinates</param>
      <param name="firstOnly">If true, returns the first entity that is found in the selectionBox</param>
      <param name="rgbValues">The array of pixels drawn in false colors</param>
      <returns>The array of the indices of the visible entities found in the selection box.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.GetPixel(System.Int32,System.Int32)">
      <summary>
            Gets the color of the specified pixel in this viewport
            </summary>
      <param name="x">The x window coordinate of the pixel to retrieve</param>
      <param name="y">The y window coordinate of the pixel to retrieve (0 on bottom)</param>
      <returns>The color of the pixel</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.CopyTo(devDept.Eyeshot.Control.Workspace,System.Boolean)">
      <summary>
            Copies all items inside control master collections (<see cref="P:devDept.Eyeshot.Control.Viewport.Labels" />, <see cref="P:devDept.Eyeshot.Control.Workspace.Blocks" />, <see cref="P:devDept.Eyeshot.Control.Workspace.Layers" />, <see cref="P:devDept.Eyeshot.Control.Design.Materials" />, <see cref="P:devDept.Eyeshot.Control.Workspace.TextStyles" />, <see cref="P:devDept.Eyeshot.Control.Workspace.LineTypes" />, <see cref="P:devDept.Eyeshot.Control.Workspace.HatchPatterns" />) to the specified Workspace control.
            </summary>
      <param name="destination">The Workspace control that is the destination of the elements copied.</param>
      <param name="replaceRootBlock">&gt;When true the root block of the destination Workspace is replaced.</param>
      <remarks>
            If the <see cref="P:devDept.Eyeshot.Control.Design.Viewports" /> collection is empty then a new <see cref="T:devDept.Eyeshot.Control.Viewport" /> is added to it.
            You need to call <see cref="M:devDept.Eyeshot.Control.Workspace.Invalidate" /> to see the effect of this command in the destination Workspace control.
            </remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Workspace.Purge">
      <summary>
            Removes unused items from the Workspace master collections (Layers, Blocks, Materials, etc.).
            </summary>
      <remarks> The original order of the items is kept inside each collection and the removed items are disposed. Any BlockReference set as current will be unset.</remarks>
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.CurrentBlockReference" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.SetCurrent(devDept.Eyeshot.Entities.BlockReference,System.Boolean)" />
    </member>
    <member name="T:devDept.Eyeshot.Control.BiDictionary`2">
      <summary>
            This is a dictionary guaranteed to have only one of each value and key. 
            It may be searched either by TFirst or by TSecond, giving a unique answer because it is 1 to 1.
            </summary>
      <typeparam name="TFirst">The type of the "key"</typeparam>
      <typeparam name="TSecond">The type of the "value"</typeparam>
    </member>
    <member name="M:devDept.Eyeshot.Control.BiDictionary`2.Add(`0,`1)">
      <summary>
            Tries to add the pair to the dictionary.
            Throws an exception if either element is already in the dictionary
            </summary>
      <param name="first">
      </param>
      <param name="second">
      </param>
    </member>
    <member name="M:devDept.Eyeshot.Control.BiDictionary`2.GetByFirst(`0)">
      <summary>
            Find the TSecond corresponding to the TFirst first
            Throws an exception if first is not in the dictionary.
            </summary>
      <param name="first">the key to search for</param>
      <returns>the value corresponding to first</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.BiDictionary`2.GetBySecond(`1)">
      <summary>
            Find the TFirst corresponding to the Second second.
            Throws an exception if second is not in the dictionary.
            </summary>
      <param name="second">the key to search for</param>
      <returns>the value corresponding to second</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.BiDictionary`2.RemoveByFirst(`0)">
      <summary>
            Remove the record containing first.
            If first is not in the dictionary, throws an Exception.
            </summary>
      <param name="first">the key of the record to delete</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.BiDictionary`2.RemoveBySecond(`1)">
      <summary>
            Remove the record containing second.
            If second is not in the dictionary, throws an Exception.
            </summary>
      <param name="second">the key of the record to delete</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.BiDictionary`2.TryAdd(`0,`1)">
      <summary>
            Tries to add the pair to the dictionary.
            Returns false if either element is already in the dictionary        
            </summary>
      <param name="first">
      </param>
      <param name="second">
      </param>
      <returns>true if successfully added, false if either element are already in the dictionary</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.BiDictionary`2.TryGetByFirst(`0,`1@)">
      <summary>
            Find the TSecond corresponding to the TFirst first.
            Returns false if first is not in the dictionary.
            </summary>
      <param name="first">the key to search for</param>
      <param name="second">the corresponding value</param>
      <returns>true if first is in the dictionary, false otherwise</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.BiDictionary`2.TryGetBySecond(`1,`0@)">
      <summary>
            Find the TFirst corresponding to the TSecond second.
            Returns false if second is not in the dictionary.
            </summary>
      <param name="second">the key to search for</param>
      <param name="first">the corresponding value</param>
      <returns>true if second is in the dictionary, false otherwise</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.BiDictionary`2.TryRemoveByFirst(`0)">
      <summary>
            Remove the record containing first, if there is one.
            </summary>
      <param name="first">
      </param>
      <returns> If first is not in the dictionary, returns false, otherwise true</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.BiDictionary`2.TryRemoveBySecond(`1)">
      <summary>
            Remove the record containing second, if there is one.
            </summary>
      <param name="second">
      </param>
      <returns> If second is not in the dictionary, returns false, otherwise true</returns>
    </member>
    <member name="P:devDept.Eyeshot.Control.BiDictionary`2.Count">
      <summary>
            The number of pairs stored in the dictionary
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.BiDictionary`2.Clear">
      <summary>
            Removes all items from the dictionary.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.SketchManager">
      <summary>
            Class Manager that handles the synchronization between the eyeshot entities and the Sketch entities.
            </summary>
      <summary>
            Class Manager that handles the synchronization between the eyeshot entities and the Sketch entities.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.SketchManager.zoomFitType">
      <summary>
            Sketch edit zoom fit type.
            </summary>
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.CurrentBlock" />
    </member>
    <member name="F:devDept.Eyeshot.Control.SketchManager.zoomFitType.Face">
      <summary>
            Fits the specified face with a margin.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.SketchManager.zoomFitType.Body">
      <summary>
            Fits the specified object.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.SketchManager.zoomFitType.Block">
      <summary>
            Fits current block entities.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.EqualConstraintImage">
      <summary>
            Gets or sets the equal constraint image.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.MirrorConstraintImage">
      <summary>
            Gets or sets the mirror constraint image.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.EqualRadiusConstraintImage">
      <summary>
            Gets or sets the equal radius constraint image.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.PointOnConstraintImage">
      <summary>
            Gets or sets the point on constraint image.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.PointAtConstraintImage">
      <summary>
            Gets or sets the join constraint image.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.JoinConstraintImage">
      <summary>
            Gets or sets the join constraint image.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.HorizontalConstraintImage">
      <summary>
            Gets or sets the vertical constraint image.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.VerticalConstraintImage">
      <summary>
            Gets or sets the vertical constraint image.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.PerpendicularConstraintImage">
      <summary>
            Gets or sets the perpendicular constraint image.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.FixConstraintImage">
      <summary>
            Gets or sets the fix constraint image.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.PolygonConstraintImage">
      <summary>
            Gets or sets the polygon constraint image.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.ParallelConstraintImage">
      <summary>
            Gets or sets the parallel constraint image.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.TangentConstraintImage">
      <summary>
            Gets or sets the tangent constraint image.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.CollinearConstraintImage">
      <summary>
            Gets or sets the collinear constraint image.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.MidPointConstraintImage">
      <summary>
            Gets or sets the mid point constraint image.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.CurvesThickness">
      <summary>
            Gets or sets the size used to display curves for Sketch.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.PointsThickness">
      <summary>
            Gets or sets the size used to display points during the Sketch editing.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.PointsColor">
      <summary>
            Gets or sets the color used to display points during the Sketch editing.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.DimensionsThickness">
      <summary>
            Gets or sets the size used to display dimensions during the Sketch editing.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.DimensionsColor">
      <summary>
            Gets or sets the color used to display dimensions during the Sketch editing.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.DimensionsReferenceColor">
      <summary>
            Gets or sets the color used to display dimensions with reference during the Sketch editing.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.ConstructionCurvesThickness">
      <summary>
            Gets or sets the size used to display the construction curves during the Sketch editing.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.ConstructionCurvesColor">
      <summary>
            Gets or sets the color used to display construction curves during the Sketch editing.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.HoveringColor">
      <summary>
            Gets or sets the color used to display the entities when the mouse is over a constraint label.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.SketchPlane">
      <summary>
            The Sketch plane.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.DrawingPlane">
      <summary>
             The plane where the constraint labels and the entities are drawn in overlay during the sketch editing.
             </summary>
      <remarks>It takes in account also the <see cref="P:devDept.Eyeshot.Control.Workspace.CurrentTransformation" />.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.DOF">
      <summary>
            The degrees of freedom of the constrained entities of the Sketch
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.SketchEntity">
      <summary>
            The Sketch opened for editing. Can be null/Nothing.
            </summary>
      <seealso cref="P:devDept.Eyeshot.Control.SketchManager.Editing" />
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.FilledRegionColor">
      <summary>
            Gets or sets the color of the sketch region.
            <seealso cref="P:devDept.Eyeshot.Control.SketchManager.ShowFilledRegion" /></summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.DimensionsWidthFactor">
      <summary>
            Gets or sets the <see cref="P:devDept.Eyeshot.Entities.Text.WidthFactor" /> for the dimensions constraint.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.Editing">
      <summary>
            True when editing a sketch, otherwise false.
            </summary>
      <seealso cref="P:devDept.Eyeshot.Control.SketchManager.SketchEntity" />
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.TextHeight">
      <summary>
            Gets or sets the text height. 
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.AutomaticTextHeight">
      <summary>
            If true, the text height of the dimensions is computed based on the entities boundingbox.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.TextScaleFactor">
      <summary>
            Gets or sets the text height scale factor for the sketch's dimensions.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.Constraints">
      <summary>
            Gets the array of constraints.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.Entities">
      <summary>
            Gets the array of entities related to the sketch.
            </summary>
      <seealso cref="M:devDept.Eyeshot.Control.SketchManager.IsSketchEntity(devDept.Eyeshot.Entities.Entity)" />
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.ShowFilledRegion">
      <summary>
            If true, a semitransparent region that represents the Sketch is displayed. 
            </summary>
      <remarks> The region is drawn only if it is valid.</remarks>
      <seealso cref="P:devDept.Eyeshot.Control.SketchManager.FilledRegionColor" />
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.IsFixed(devDept.Eyeshot.Entities.Entity)">
      <summary>
            Tells if the curve is fixed.
            </summary>
      <param name="entity">The entity.</param>
      <returns>True if the entity is fixed, false otherwise.</returns>
      <remarks>When the entity is fixed, it is ignored when solving the equation system.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.AnimateCamera">
      <summary>
             When true, animates the camera when the <see cref="M:devDept.Eyeshot.Control.Design.EditSketch(devDept.Eyeshot.Entities.SketchEntity)" /> or <see cref="M:devDept.Eyeshot.Control.SketchManager.EditExit(System.Boolean)" /> methods are called.
             </summary>
      <remarks>Meaningful when <see cref="P:devDept.Eyeshot.Control.SketchManager.RotateToPlane" /> is true.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.RotateToPlane">
      <summary>
            When true, aligns the camera with the sketch plane when a new sketch is created or an existing one is edited.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.Fit">
      <summary>
            When true, fits the current block entities when a new sketch is created or an existing one is edited.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.Margin">
      <summary>
            Zoom fit margin in pixels, if <see cref="P:devDept.Eyeshot.Control.SketchManager.Fit" /> is true.
            </summary>
      <remarks>
            0 by default. In this case the margin is computed internally based on the viewport size. 
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.ZoomFitMode">
      <summary>
            Gets or sets the SketchManager zoom fit mode when a new sketch is created.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.EnableEdgeSelection">
      <summary>
            Enables the edge selection for the current Brep
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.DisableEdgeSelection">
      <summary>
            Disables the edge selection for the current Brep
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.SketchManager.exitType">
      <summary>
            It represents what to do when exiting the sketch.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.EditExit(System.Boolean)">
      <summary>
            Exits and regenerates and compiles the sketch entity.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.EditExit(devDept.Eyeshot.Control.SketchManager.exitType)">
      <summary>
            Exits and regenerates and compiles the sketch entity.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.RedundantConstraints">
      <summary>
            Returns the collection of the redundant constraints of the active sketch.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.Map``1(devDept.Eyeshot.Entities.Entity)">
      <summary>
            Maps the given graphical entity to its geometrical counterpart (Eyeshot -&gt;
            Sketch). Throws an exception if the geometrical counterpart does not exist or if it is
            not of the specified type.
            </summary>
      <typeparam name="T">The type required for the sketch entity</typeparam>
      <param name="ent">Eyeshot entity to map</param>
      <returns>
            The sketch entity.
            </returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.Map``1(devDept.Geometry.ConstraintSolver.SketchCurve)">
      <summary>
            Maps the given geometrical entity to its graphical counterpart (Sketch -&gt;
            Eyeshot). Throws an exception if the graphical counterpart does not exist or if it is
            not of the specified type.
            </summary>
      <typeparam name="T">The type required for the eyeshot entity</typeparam>
      <param name="ent">Sketch entity to map</param>
      <returns>
            The graphical entity.
            </returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.DisplayConstraintEntities(devDept.Eyeshot.Control.Labels.StackedLabel)">
      <summary>
            Displays the entities involved for the specific constraint.
            </summary>
      <param name="label">The constraint label.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.IsSketchEntity(devDept.Eyeshot.Entities.Entity)">
      <summary>
            Returns true if the given entity is related to the sketch, false otherwise.
            For example, returns false for constraint dimension entities.
            </summary>
      <param name="entity">The entity to evaluate</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.IsConstruction(devDept.Eyeshot.Entities.Entity)">
      <summary>
            Tells if the specified entity is a construction one.
            </summary>
      <param name="entity">The entity</param>
      <returns>True if the specified entity is a construction one, false otherwise.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.SetConstruction(devDept.Eyeshot.Entities.Entity,System.Boolean)">
      <summary>
            Change the entity construction status.
            </summary>
      <param name="entity">The entity</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.GetEntities(devDept.Eyeshot.Control.Labels.StackedLabel)">
      <summary>
            Gets the entities associated with a constraint label.
            </summary>
      <param name="stackedLabel">The constraint label.</param>
      <returns>The array containing the entities associated with the constraint label.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.StartPoint(devDept.Eyeshot.Entities.EllipticalArc)">
      <summary>
            Returns the start point of the specified elliptical arc.
            </summary>
      <param name="ellipticalArc">The elliptical arc.</param>
      <returns>
            The <see cref="T:devDept.Eyeshot.Entities.Point" /> entity linked to the start point of the elliptical arc.
            </returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.EndPoint(devDept.Eyeshot.Entities.EllipticalArc)">
      <summary>
            Returns the end point of the specified elliptical arc.
            </summary>
      <param name="ellipticalArc">The elliptical arc</param>
      <returns>
            The <see cref="T:devDept.Eyeshot.Entities.Point" /> entity linked to the end point of the elliptical arc.
            </returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.StartPoint(devDept.Eyeshot.Entities.Arc)">
      <summary>
            Returns the start point of the specified arc.
            </summary>
      <param name="arc">The arc</param>
      <returns>
            The <see cref="T:devDept.Eyeshot.Entities.Point" /> entity linked to the start point of the arc.
            </returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.StartPoint(devDept.Eyeshot.Entities.Line)">
      <summary>
            Returns the start point of the specified line.
            </summary>
      <param name="line">The line</param>
      <returns>
            The <see cref="T:devDept.Eyeshot.Entities.Point" /> entity linked to the start point of the line.
            </returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.StartPoint(devDept.Eyeshot.Entities.Curve)">
      <summary>
            Returns the start point of the specified spline.
            </summary>
      <param name="line">The spline</param>
      <returns>
            The <see cref="T:devDept.Eyeshot.Entities.Point" /> entity linked to the start point of the spline.
            </returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.EndPoint(devDept.Eyeshot.Entities.Arc)">
      <summary>
            Returns the end point of the specified arc.
            </summary>
      <param name="arc">The arc</param>
      <returns>
            The <see cref="T:devDept.Eyeshot.Entities.Point" /> entity linked to the end point of the arc.
            </returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.EndPoint(devDept.Eyeshot.Entities.Line)">
      <summary>
            Returns the end point of the specified line.
            </summary>
      <param name="line">The line</param>
      <returns>
            The <see cref="T:devDept.Eyeshot.Entities.Point" /> entity linked to the end point of the line.
            </returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.EndPoint(devDept.Eyeshot.Entities.Curve)">
      <summary>
            Returns the end point of the specified spline.
            </summary>
      <param name="spline">The spline</param>
      <returns>
            The <see cref="T:devDept.Eyeshot.Entities.Point" /> entity linked to the end point of the spline.
            </returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.CenterPoint(devDept.Eyeshot.Entities.Circle)">
      <summary>
            Returns the center point of the specified circle.
            </summary>
      <param name="circle">The circle</param>
      <returns>
            The <see cref="T:devDept.Eyeshot.Entities.Point" /> entity linked to the center point of the circle.
            </returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.CenterPoint(devDept.Eyeshot.Entities.Arc)">
      <summary>
            Returns the center point of the specified arc.
            </summary>
      <param name="arc">The arc</param>
      <returns>
            The <see cref="T:devDept.Eyeshot.Entities.Point" /> entity linked to the center point of the arc.
            </returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.CenterPoint(devDept.Eyeshot.Entities.Ellipse)">
      <summary>
            Returns the center point of the specified ellipse.
            </summary>
      <param name="ellipse">The ellipse</param>
      <returns>
            The <see cref="T:devDept.Eyeshot.Entities.Point" /> entity linked to the center point of the ellipse.
            </returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.GetPoints(devDept.Eyeshot.Entities.Entity)">
      <summary>
            Returns the points of the specified entity. For example,
            for an arc the method will return the center, the start
            point and the end point.
            </summary>
      <param name="entity">The entity to evaluate</param>
      <returns>An array of points linked to the entity.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.Move(devDept.Eyeshot.Entities.Point,devDept.Geometry.Point3D)">
      <summary>
            Moves the specified point to the given location (in world coordinates, not plane
            coordinates).
            </summary>
      <param name="p">The point to move</param>
      <param name="newLocation">The new location of the point in world
            coordinates</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.DrawOverlay(devDept.Eyeshot.DrawSceneParams)">
      <summary>
            Draws overlaying the filled region.
            </summary>
      <param name="data">The draw data</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.AddPoint(devDept.Geometry.Point2D)">
      <summary>
            Creates a sketch spline starting from the curve entity and adds it to the sketch.
            </summary>
      <param name="point">The point.</param>
      <returns>A Point entity at the specified location.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.AddSketchSplineFromCurveEntity(devDept.Eyeshot.Entities.Curve)">
      <summary>
            Creates a sketch spline starting from the curve entity and adds it to the sketch.
            </summary>
      <param name="curve">The curve entity.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.AddSpline(System.Collections.Generic.IList{devDept.Geometry.Point2D})">
      <summary>
            Create a set of sketch spline curves interpolating the given list of 2D points.
            </summary>
      <param name="points">The list of 2D point coordinates relative to the sketch
            plane.</param>
      <returns>
            A list of Bézier curves, with <see cref="P:devDept.Eyeshot.Entities.Curve.Degree">degree</see> equal to 3
            and 4 <see cref="P:devDept.Eyeshot.Entities.Curve.ControlPoints">control points</see>.
            </returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.AddEllipse(devDept.Geometry.Point2D,System.Double,System.Double)">
      <summary>
            Adds an ellipse to the sketch.
            </summary>
      <param name="center">The center.</param>
      <param name="radiusX">The X-radius.</param>
      <param name="radiusY">The Y-radius.</param>
      <returns>
      </returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.AddEllipse(devDept.Eyeshot.Entities.Ellipse)">
      <summary>
            Adds the ellipse to the sketch.
            </summary>
      <param name="ellipse">The ellipse.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.AddLine(devDept.Geometry.Point2D,devDept.Geometry.Point2D)">
      <summary>
            Adds a line to the sketch.
            </summary>
      <param name="start">The start point.</param>
      <param name="end">The end point.</param>
      <returns>The newly added line.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.FixEntity(devDept.Eyeshot.Entities.Entity,System.Boolean)">
      <summary>
            Fix the entity and its children.
            </summary>
      <param name="ent">The entity to fix.</param>
      <param name="fix">When true, the entity is ignored when solving the equation system.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.ProjectCurve(devDept.Eyeshot.Entities.ICurve,System.Boolean)">
      <summary>
            Project the given ICurve into the sketch.
            </summary>
      <param name="curve">The curve</param>
      <param name="fix">When true, the entity is fixed.</param>
      <returns>The projected ICurve array.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.AddLine(devDept.Eyeshot.Entities.Line)">
      <summary>
            Adds the line to the sketch.
            </summary>
      <param name="line">The line.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.AddCircle(devDept.Eyeshot.Entities.Circle)">
      <summary>
            Adds the circle to the sketch.
            </summary>
      <param name="circle">the circle.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.AddCircle(devDept.Geometry.Point2D,System.Double)">
      <summary>
            Adds a circle to the sketch.
            </summary>
      <param name="center">The center.</param>
      <param name="radius">The radius.</param>
      <returns>
      </returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.AddCircle(devDept.Geometry.Point2D,devDept.Geometry.Point2D)">
      <summary>
            Adds a circle to the sketch.
            </summary>
      <param name="center">The center.</param>
      <param name="pointOnCircle">The point from which the circle must pass. </param>
      <returns>The newly added circle.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.AddArc(devDept.Geometry.Point2D,devDept.Geometry.Point2D,devDept.Geometry.Point2D)">
      <summary>
            Adds an arc to the sketch.
            </summary>
      <param name="centerPoint">The center.</param>
      <param name="startPoint">The start point.</param>
      <param name="endPoint">The end point.</param>
      <returns>The newly added arc.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.Translate(System.Double,System.Double)">
      <summary>
            Translates all the entities of the current active sketch.
            </summary>
      <param name="x">amount in X</param>
      <param name="y">Amount in Y</param>
      <remarks> This method removes all the constraints in sketch.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.Rotate(devDept.Geometry.Point2D,System.Double)">
      <summary>
            Rotates all the entities of the current active sketch.
            </summary>
      <param name="center">The center point.</param>
      <param name="angle">The rotation angle in radians.</param>
      <remarks>This method removes all the constraints in sketch.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.Scale(devDept.Geometry.Point2D,System.Double,System.Double)">
      <summary>
            Scales all the entities of the current active sketch.
            </summary>
      <param name="fixedPoint">The fixed point.</param>
      <param name="factorX">The X scale factor.</param>
      <param name="factorY">The Y scale factor.</param>
      <remarks>This method removes all the constraints in sketch.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.Mirror">
      <summary>
            Mirrors all the entities with respect the y-Axis of the sketch plane.
            </summary>
      <remarks>All the <see cref="T:devDept.Geometry.ConstraintSolver.TangentConstraint" />, <see cref="T:devDept.Geometry.ConstraintSolver.PerpendicularConstraint" /> and <see cref="T:devDept.Geometry.ConstraintSolver.AngleConstraint" /> are removed after the mirror.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.PreparesEntitiesForMirror(System.Collections.Generic.List{devDept.Eyeshot.Entities.Entity})">
      <summary>
            Prepares the input list of entities for the mirror constraint. 
            </summary>
      <param name="selectedEntities">The selected entities.</param>
      <returns>
      </returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.AddEntity(devDept.Eyeshot.Entities.Entity)">
      <summary>
            Adds the entity to the sketch.
            </summary>
      <param name="ent">The entity.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.AddPoint(devDept.Eyeshot.Entities.Point)">
      <summary>
            Adds the point to the sketch.
            </summary>
      <param name="point">
      </param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.AddEllipticalArc(devDept.Eyeshot.Entities.EllipticalArc)">
      <summary>
            Adds the elliptical arc to the sketch.
            </summary>
      <param name="ellipticalArc">The elliptical arc.</param>
      <returns>the four quadrant points of the elliptical arc.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.AddArc(devDept.Eyeshot.Entities.Arc)">
      <summary>
            Adds the arc to the sketch.
            </summary>
      <param name="arc">The arc.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.AddSlot(System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Adds a slot to the sketch.
            </summary>
      <param name="x">Left arc center X position</param>
      <param name="y">Left arc center Y position</param>
      <param name="length">The distance between arcs centers</param>
      <param name="radius">The arc radius</param>
      <param name="angle">The slot angle in radians from X axis. When zero, the horizontal constraint is added.</param>
      <returns>The array of sketch entities representing the slot: bottom line, right arc, top line, left arc.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.AddRectangle(System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
      <summary>
            Adds a rectangle to the sketch.
            </summary>
      <param name="x">The lower-left corner X position</param>
      <param name="y">The lower-left corner Y position</param>
      <param name="width">The rectangle width</param>
      <param name="height">The rectangle height</param>
      <param name="angle">The rectangle angle in radians. When zero the horizontal constraint is added.</param>
      <param name="lengthConstraints">When true, adds the length constraints for the rectangle sides.</param>
      <returns>
      </returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.AddCircularSlot(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Adds a circular slot to the sketch.
            </summary>
      <param name="x">The inner arc center X position</param>
      <param name="y">The inner arc center Y position</param>
      <param name="startAngle">The slot start angle in radians</param>
      <param name="deltaAngle">The slot delta angle in radians</param>
      <param name="radius">The arc radius</param>
      <param name="slotRadius">The slot radius</param>
      <returns>The array of sketch entities representing the circular slot: bottom arc, outer arc, top arc, inner arc.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.AddChamfer(devDept.Eyeshot.Entities.ICurve,devDept.Eyeshot.Entities.ICurve,System.Boolean,System.Boolean,System.Double)">
      <summary>
            Add a chamfer between the two specified curves. The two curves
            are required to be intersecting. 
            </summary>
      <param name="c1">First curve</param>
      <param name="c2">Second curve</param>
      <param name="flip1">Flips first curve direction</param>
      <param name="flip2">Flips second curve direction</param>
      <param name="distance">The chamfer distance</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.AddFillet(devDept.Eyeshot.Entities.ICurve,devDept.Eyeshot.Entities.ICurve,System.Boolean,System.Boolean,System.Double)">
      <summary>
            Add a fillet between the two specified curves. The two curves
            are required to be intersecting and the flip parameters must
            produce a valid arc.
            </summary>
      <param name="c1">First curve</param>
      <param name="c2">Second curve</param>
      <param name="flip1">Flips first curve direction</param>
      <param name="flip2">Flips second curve direction</param>
      <param name="radius">Radius of the fillet arc</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.GetConstraint(devDept.Eyeshot.Entities.Entity)">
      <summary>
            Gets the constraint given a constraint entity (may be a linear dimension,
            an angular dimension, etc.).
            </summary>
      <param name="ent">An entity not related to the sketch</param>
      <returns>The geometrical constraint.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.GetVisualConstraint(devDept.Geometry.ConstraintSolver.Constraint)">
      <summary>
            Gets the corresponding visual constraint given a sketch constraint.
            </summary>
      <param name="constraint">the sketch constraint</param>
      <returns>The visual constraint.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.GetParentEntity(devDept.Eyeshot.Entities.Point)">
      <summary>
            Gets the parent entity of which the input point is a vertex.
            </summary>
      <param name="point">The point.</param>
      <returns>
      </returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.GetConstrained(devDept.Eyeshot.Control.VisualConstraint)">
      <summary>
            Get all constrained entities.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.GetAllConstraintsFromEntity(devDept.Eyeshot.Entities.Entity)">
      <summary>
            Returns all the constraints in which the entity is involved.
            </summary>
      <param name="entity">The entity.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.UpdateAndInvalidate(System.Boolean)">
      <summary>
            Solves the sketch and regens and compiles the entities.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.Solve">
      <summary>
            Solves the system.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.ClearHistory">
      <summary>
            Erase current history (remove all undo/redo records).
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.Undo">
      <summary>
            Undo the last operation performed. If no record of previous operations is
            available, an <see cref="T:devDept.EyeshotException" /> is thrown. To check if this method
            is safe to call, use <see cref="P:devDept.Eyeshot.Control.SketchManager.UndoReady" />.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.Redo">
      <summary>
            Redo the last operation undone. If no record of previous undone operations is
            available, an <see cref="T:devDept.EyeshotException" /> is thrown. To check if this method
            is safe to call, use <see cref="P:devDept.Eyeshot.Control.SketchManager.RedoReady" />.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.ResetRedoCount">
      <summary>
            Resets the number of available redo operations to zero. Used to make an undo
            operation permanent.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.UndoReady">
      <summary>
            Gets a value indicating whether at least one undo operation can be performed.
            </summary>
      <value>
        <see langword="true" /> if at least one undo operation can be performed;
            otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.RedoReady">
      <summary>
            Gets a value indicating whether at least one redo operation can be performed.
            </summary>
      <value>
        <see langword="true" /> if at least one redo operation can be performed;
            otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.PasteOffset">
      <summary>
            Gets or sets the offset along the X-axis and Y-axis of the sketch plane for the pasted entities.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SketchManager.Dragging">
      <summary>
            Returns true if <see cref="M:devDept.Eyeshot.Control.SketchManager.DragStart(devDept.Geometry.Point2D,devDept.Eyeshot.Entities.Entity[])" /> was invoked and
            <see cref="M:devDept.Eyeshot.Control.SketchManager.DragEnd" /> has not yet been called.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.DragStart(devDept.Geometry.Point2D,devDept.Eyeshot.Entities.Entity[])">
      <summary>
            Starts dragging the specified entities from the specified point. Throws an
            exception if <see cref="P:devDept.Eyeshot.Control.SketchManager.Dragging" /> is true.
            </summary>
      <param name="start">The start point for the dragging process</param>
      <param name="entities">The entities to drag</param>
      <seealso cref="M:devDept.Eyeshot.Control.SketchManager.DragEnd" />
      <seealso cref="M:devDept.Eyeshot.Control.SketchManager.DragTo(devDept.Geometry.Point2D)" />
      <exception cref="T:devDept.EyeshotException">Thrown when this method is called twice
            without invoking <see cref="M:devDept.Eyeshot.Control.SketchManager.DragEnd" /> before the second call</exception>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.DragTo(devDept.Geometry.Point2D)">
      <summary>
            Drags the entities to the specified point. Throws an exception if <see cref="P:devDept.Eyeshot.Control.SketchManager.Dragging" /> is false.
            </summary>
      <param name="to">New drag destination, relative to the sketch plane</param>
      <seealso cref="M:devDept.Eyeshot.Control.SketchManager.DragStart(devDept.Geometry.Point2D,devDept.Eyeshot.Entities.Entity[])" />
      <seealso cref="M:devDept.Eyeshot.Control.SketchManager.DragEnd" />
      <exception cref="T:devDept.EyeshotException">Thrown when this method is called without
            calling <see cref="M:devDept.Eyeshot.Control.SketchManager.DragStart(devDept.Geometry.Point2D,devDept.Eyeshot.Entities.Entity[])" /> first</exception>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.DragEnd">
      <summary>
            Stops the dragging process. Throws an exception if <see cref="P:devDept.Eyeshot.Control.SketchManager.Dragging" /> is
            false.
            </summary>
      <seealso cref="M:devDept.Eyeshot.Control.SketchManager.DragStart(devDept.Geometry.Point2D,devDept.Eyeshot.Entities.Entity[])" />
      <seealso cref="M:devDept.Eyeshot.Control.SketchManager.DragTo(devDept.Geometry.Point2D)" />
      <exception cref="T:devDept.EyeshotException">Thrown when this method is called without
            calling <see cref="M:devDept.Eyeshot.Control.SketchManager.DragStart(devDept.Geometry.Point2D,devDept.Eyeshot.Entities.Entity[])" /> first</exception>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.DeleteEntity(devDept.Eyeshot.Entities.Entity)">
      <summary>
            Deletes the entity and its associated constraints.
            </summary>
      <param name="entity">The entity to delete</param>
      <returns>
            True if the entity has been deleted, false if the
            entity was not present among the entities related
            to the sketch.
            </returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.RemoveConstraint(devDept.Eyeshot.Control.VisualConstraint)">
      <summary>
            Removes the specific constraint from the sketch.
            </summary>
      <param name="constraint">The constraint</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.RemoveConstraint(devDept.Eyeshot.Entities.Entity)">
      <summary>
            Removes the constraint given a constraint entity (may be a linear dimension,
            an angular dimension, etc.).
            </summary>
      <param name="entity">The entity representing a specific constraint</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.CreateLengthConstraint(devDept.Eyeshot.Entities.Line,System.Double,System.Boolean,devDept.Geometry.Point2D)">
      <summary>
            Adds a line constraint on the input line.
            </summary>
      <param name="line">the line.</param>
      <param name="value">Optional, the desired length value.</param>
      <param name="reference">Optional, when true the constraint is considered only as reference.</param>
      <param name="dimLinePos">Optional, the dimension line position.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.CreateDiameterConstraint(devDept.Eyeshot.Entities.Circle,System.Double,System.Boolean,devDept.Geometry.Point2D)">
      <summary>
            Adds a diameter/radius constraint on the input circle.
            </summary>
      <param name="circle">the circle.</param>
      <param name="value">Optional, the desired diameter/radius value.</param>
      <param name="reference">Optional, when true the constraint is considered only as reference.</param>
      <param name="dimLinePos">Optional, the dimension line position.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.CreateJoinConstraint(devDept.Eyeshot.Entities.Point,devDept.Eyeshot.Entities.Entity)">
      <summary>
            Adds a point on entity constraint.
            </summary>
      <param name="p">The point.</param>
      <param name="ent">The entity.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.CreatePointFixedConstraint(devDept.Eyeshot.Entities.Point)">
      <summary>
            Adds a point fixed constraint for the input point.
            </summary>
      <param name="p1">the point.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.CreateHorizontalConstraint(devDept.Eyeshot.Entities.Line)">
      <summary>
            Create an horizontal constraint on the input line.
            </summary>
      <param name="l1">The line.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.CreateHorizontalConstraint(devDept.Eyeshot.Entities.Point,devDept.Eyeshot.Entities.Point)">
      <summary>
            Adds an horizontal constraints between two points.
            </summary>
      <param name="p1">The first point.</param>
      <param name="p2">The second point.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.CreateVerticalConstraint(devDept.Eyeshot.Entities.Point,devDept.Eyeshot.Entities.Point)">
      <summary>
            Adds a vertical constraints between two points.
            </summary>
      <param name="p1">The first point.</param>
      <param name="p2">The second point.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.CreateVerticalConstraint(devDept.Eyeshot.Entities.Line)">
      <summary>
            Adds a vertical constraint for the input line.
            </summary>
      <param name="l1">The line.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.CreateParallelLinesConstraint(devDept.Eyeshot.Entities.Line,devDept.Eyeshot.Entities.Line)">
      <summary>
            Adds a parallel constraint between two lines.
            </summary>
      <param name="l1">The first line.</param>
      <param name="l2">The second line.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.CreatePerpendicularConstraint(devDept.Eyeshot.Entities.Line,devDept.Eyeshot.Entities.Line)">
      <summary>
            Adds a perpendicular constraint between two lines.
            </summary>
      <param name="l1">The first line.</param>
      <param name="l2">The second line.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.CreateEqualConstraint(devDept.Eyeshot.Entities.Entity,devDept.Eyeshot.Entities.Entity,System.Boolean)">
      <summary>
            Adds an equal-length constraint between two entities.
            </summary>
      <param name="e1">The first entity.</param>
      <param name="e2">The second entity.</param>
      <param name="eqRadius">Optional, if true the radius length is considered.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.CreateCollinearPointsConstraint(devDept.Eyeshot.Entities.Point,devDept.Eyeshot.Entities.Point,devDept.Eyeshot.Entities.Point)">
      <summary>
            Adds a collinear constraint between points.
            </summary>
      <param name="p1">The first point.</param>
      <param name="p2">The second point.</param>
      <param name="p3">The third point.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.CreateTangentConstraint(devDept.Eyeshot.Entities.Entity,devDept.Eyeshot.Entities.Entity)">
      <summary>
            Adds a tangent constraint between two entities.
            </summary>
      <param name="e1">The first entity.</param>
      <param name="e2">The second entity.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.CreateCollinearConstraint(devDept.Eyeshot.Entities.Line,devDept.Eyeshot.Entities.Line)">
      <summary>
            Adds a collinear constraint between two lines.
            </summary>
      <param name="l1">The first line.</param>
      <param name="l2">The second line.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.CreateMirrorConstraint(devDept.Eyeshot.Entities.Entity,devDept.Eyeshot.Entities.Entity,devDept.Eyeshot.Entities.Line)">
      <summary>
            Adds a mirror constraint between  two entites.
            </summary>
      <param name="e1">The first entity.</param>
      <param name="e2">The second entity.</param>
      <param name="axis">The symmetry axis.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.CreateAngleConstraint(devDept.Eyeshot.Entities.Arc,System.Double,System.Boolean,devDept.Geometry.Point2D)">
      <summary>
            Adds an angle constraint on the input arc.
            </summary>
      <param name="arc">The arc.</param>
      <param name="value">Optional, the desired distance value.</param>
      <param name="reference">Optional, when true the constraint is considered only as reference.</param>
      <param name="dimLinePos">Optional, the dimension line position.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.CreateAngleConstraint(devDept.Eyeshot.Entities.Line,devDept.Eyeshot.Entities.Line,devDept.Geometry.Point2D,System.Double,System.Boolean,devDept.Geometry.Point2D)">
      <summary>
            Adds an angle constraint between the two specified lines. The quadrant point
            allows to choose where to apply the constraint.
            </summary>
      <param name="l1">First line delimiting the angle</param>
      <param name="l2">Second line delimiting the angle</param>
      <param name="quadrantPoint">A point in one of the four sectors formed by the two
            lines (considering them as infinite). The angle constraint will be applied in
            the quadrant where the point lies.</param>
      <param name="value">Optional, the desired distance value.</param>
      <param name="reference">Optional, when true the constraint is considered only as reference.</param>
      <param name="dimLinePos">Optional, the dimension line position.</param>
    </member>
    <!-- Badly formed XML comment ignored for member "M:devDept.Eyeshot.Control.SketchManager.CreatePointLineDistanceConstraint(devDept.Eyeshot.Entities.Point,devDept.Eyeshot.Entities.Line,System.Double,System.Boolean,devDept.Geometry.Point2D)" -->
    <!-- Badly formed XML comment ignored for member "M:devDept.Eyeshot.Control.SketchManager.CreateAlignedPointsDistanceConstraint(devDept.Eyeshot.Entities.Point,devDept.Eyeshot.Entities.Point,System.Double,System.Boolean,devDept.Geometry.Point2D)" -->
    <!-- Badly formed XML comment ignored for member "M:devDept.Eyeshot.Control.SketchManager.CreateHorizontalPointsDistanceConstraint(devDept.Eyeshot.Entities.Point,devDept.Eyeshot.Entities.Point,System.Double,System.Boolean,devDept.Geometry.Point2D)" -->
    <member name="M:devDept.Eyeshot.Control.SketchManager.CreateVerticalPointsDistanceConstraint(devDept.Eyeshot.Entities.Point,devDept.Eyeshot.Entities.Point,System.Double,System.Boolean,devDept.Geometry.Point2D)">
      <summary>
            Adds a vertical points distance constraint.
            </summary>
      <param name="p1">The first point.</param>
      <param name="p2">the second point.</param>
      <param name="value">Optional, the desired distance value.</param>
      <param name="reference">Optional, when true the constraint is considered only as reference.</param>
      <param name="dimLinePos">Optional, the dimension line position.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.CreateLinesDistanceConstraint(devDept.Eyeshot.Entities.Line,devDept.Eyeshot.Entities.Line,System.Double,System.Boolean,devDept.Geometry.Point2D)">
      <summary>
            Adds a distance constraint between two lines.
            </summary>
      <param name="l1">The first line.</param>
      <param name="l2">The second line.</param>
      <param name="value">Optional, the desired distance value.</param>
      <param name="reference">Optional, when true the constraint is considered only as reference.</param>
      <param name="dimLinePos">Optional, the dimension line position.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.CreateConcentricDistanceConstraint(devDept.Eyeshot.Entities.Circle,devDept.Eyeshot.Entities.Circle,System.Boolean,devDept.Geometry.Point2D)">
      <summary>
            Adds a distance constraint between two concentric circles.
            </summary>
      <param name="c1">The first circle.</param>
      <param name="c2">The second circle.</param>
      <param name="reference">Optional, when true the constraint is considered only as reference.</param>
      <param name="dimLinePos">Optional, the dimension line position.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.CreatePointOnConstraint(devDept.Eyeshot.Entities.Point,devDept.Eyeshot.Entities.Entity)">
      <summary>
            Adds a point on constraint, forcing the specified point to stay on the given curve.
            </summary>
      <param name="point">The point that should lie on the curve</param>
      <param name="entity">The curve where the point should lie</param>
      <param name="value">Optional, position of the point in the curve domain.</param>
      <param name="reference">
      </param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.CreatePointAtConstraint(devDept.Eyeshot.Entities.Point,devDept.Eyeshot.Entities.Entity,System.Double)">
      <summary>
            Adds a point on constraint, forcing the specified point to stay on the given curve.
            </summary>
      <param name="point">The point that should lie on the curve</param>
      <param name="entity">The curve where the point should lie</param>
      <param name="value">Position of the point in the curve domain.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.CreateMidPointConstraint(devDept.Eyeshot.Entities.Point,devDept.Eyeshot.Entities.Entity)">
      <summary>
            Adds a point on constraint, forcing the specified point to stay on the given curve.
            </summary>
      <param name="point">The point that should lie on the curve</param>
      <param name="entity">The curve where the point should lie</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.SketchManager.SolveEventHandler">
      <summary>
            Represents the method that will handle the <see cref="E:devDept.Eyeshot.Control.SketchManager.SystemSolved" /> event.
            </summary>
      <param name="source">The source of the event.</param>
      <param name="e">An object that contains the event data.</param>
    </member>
    <member name="E:devDept.Eyeshot.Control.SketchManager.SystemSolved">
      <summary>
            Occurs every time that the equation system of the sketch is solved.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.SketchManager.EditEndedEventHandler">
      <summary>
            Represents the method that will handle the <see cref="E:devDept.Eyeshot.Control.SketchManager.EditEnded" /> event.
            </summary>
      <param name="source">The source of the event.</param>
      <param name="e">An object that contains the event data.</param>
    </member>
    <member name="E:devDept.Eyeshot.Control.SketchManager.EditEnded">
      <summary>
            Occurs when the SketchManager exits from the current editing sketch.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.SketchManager.EditStartedEventHandler">
      <summary>
            Represents the method that will handle the <see cref="E:devDept.Eyeshot.Control.SketchManager.EditStarted" /> event.
            </summary>
      <param name="source">The source of the event.</param>
      <param name="e">An object that contains the event data.</param>
    </member>
    <member name="E:devDept.Eyeshot.Control.SketchManager.EditStarted">
      <summary>
            Occurs when the SketchManager enters in the edit mode.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.SketchManager.SketchCurveLinkedEventHandler">
      <summary>
            Represents the method that will handle the <see cref="E:devDept.Eyeshot.Control.SketchManager.SketchCurveLinked" /> event.
            </summary>
      <param name="source">The source of the event.</param>
      <param name="e">An object that contains the event data.</param>
    </member>
    <member name="E:devDept.Eyeshot.Control.SketchManager.SketchCurveLinked">
      <summary>
            Occurs when the SketchManager links a new SketchCurve with its graphical representation into the current editing sketch.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.SketchManager.SketchCurveDeletedEventHandler">
      <summary>
            Represents the method that will handle the <see cref="E:devDept.Eyeshot.Control.SketchManager.SketchCurveDeleted" /> event.
            </summary>
      <param name="source">The source of the event.</param>
      <param name="e">An object that contains the event data.</param>
    </member>
    <member name="E:devDept.Eyeshot.Control.SketchManager.SketchCurveDeleted">
      <summary>
            Occurs when the SketchManager links a new SketchCurve with its graphical representation into the current editing sketch.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.AddPolygon(devDept.Geometry.Point2D,System.Double,System.Int32,devDept.Eyeshot.Entities.Point@,devDept.Eyeshot.Entities.Point@,System.Double)">
      <summary>
            Adds a regular polygon to the sketch.
            </summary>
      <param name="center">The center.</param>
      <param name="radius">The radius of the circle circumscribed to the polygon.</param>
      <param name="numOfVertices">The number of vertices.</param>
      <param name="polygonCenter">The polygon center.</param>
      <param name="angle">The angle of rotation of the polygon with respect its center.</param>
      <returns>The array of lines representing the polygon.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.AddEntities(System.Collections.Generic.IList{devDept.Eyeshot.Entities.Entity},System.Boolean)">
      <summary>
             Imports a list of entities inside the current sketch.
             </summary>
      <param name="entities">The list of entities to import.</param>
      <param name="fix">TWhen true, the entities are fixed.</param>
      <remarks>The entity list must contain only exploded entities on the XY Plane.
             To import BlockReferences you must first call  <see cref="M:devDept.Eyeshot.Entities.BlockReference.ExplodeDeep(devDept.Eyeshot.BlockKeyedCollection,System.Boolean)" />.
             To import Texts, you must first call <see cref="M:devDept.Eyeshot.Entities.Text.ConvertToCurves(devDept.Eyeshot.IWorkspace)" />.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.IsValid(devDept.Geometry.ConstraintSolver.Constraint)">
      <summary>
            Tells if the constraint is consistent with the others sketch constraints.
            </summary>
      <param name="constraint">The constraint.</param>
      <returns>True if the constraint is consistent with the others sketch constraints,false otherwise.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.TrimPreview(System.Drawing.Point,System.Collections.Generic.List{devDept.Eyeshot.Entities.Entity}@)">
      <summary>
            Generates the entities that would be created due to trim
            </summary>
      <param name="mousePos">The mouse position.</param>
      <param name="previewEntities">The preview entities.</param>
      <returns>True if successful, false otherwise.</returns>
      <remarks>Trims only non-construction curves.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.SketchManager.Trim(System.Drawing.Point)">
      <summary>
            Trims the entity under the mouse cursor at its intersection points.
            </summary>
      <param name="mousePos">The mouse position.</param>
      <returns>True if successful, false otherwise.</returns>
      <remarks>Trims only non-construction curves.</remarks>
    </member>
    <member name="T:devDept.Eyeshot.Control.SolveEventArgs">
      <summary>
            Event args for the <see cref="E:devDept.Eyeshot.Control.SketchManager.SystemSolved" /> event.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.SolveEventArgs.Result">
      <summary>
            Result of the solve operation.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.SolveEventArgs.OverConstrained">
      <summary>
            True if the sketch is in an over-constrained state, meaning at least
            one redundant constraint exists.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.SolveEventArgs.Dragging">
      <summary>
            True if the sketch has been solved to perform a mouse dragging operation.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.VisualConstraint">
      <summary>
            Visual constraint class definition.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.VisualConstraint.#ctor">
      <summary>
            Standard constructor.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.VisualConstraint.#ctor(devDept.Eyeshot.Control.Viewport,devDept.Eyeshot.Entities.Dimension,devDept.Geometry.ConstraintSolver.Constraint)">
      <summary>
            Dimension constructor.
            </summary>
      <param name="dimensionConstraint">
      </param>
      <param name="ncConstraint">
      </param>
    </member>
    <member name="M:devDept.Eyeshot.Control.VisualConstraint.#ctor(devDept.Eyeshot.Control.Viewport,devDept.Eyeshot.Control.Labels.StackedLabel[],devDept.Geometry.ConstraintSolver.Constraint)">
      <summary>
            Label constructor.
            </summary>
      <param name="constraintLabel">
      </param>
      <param name="ncConstraint">
      </param>
    </member>
    <member name="P:devDept.Eyeshot.Control.VisualConstraint.ConstraintDimension">
      <summary>
            The dimension associated to this constraint.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.VisualConstraint.ConstraintLabels">
      <summary>
            The labels representing this constraints.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.VisualConstraint.GConstraint">
      <summary>
            The geometrical constraint
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.VisualConstraint.Destroy">
      <summary>
            Deletes the constraint from sketch
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.VisualConstraint.HasLabel(devDept.Eyeshot.Control.Labels.StackedLabel)">
      <summary>
            Tests if the provided label belongs to this constraint.
            </summary>
      <param name="label">The constraint label to evaluate</param>
      <returns>
            True if the label is related to this constraint, false otherwise.
            </returns>
    </member>
    <member name="T:devDept.Eyeshot.Control.PointsDistanceVisualConstraint">
      <summary>
            The Constraint representing the distance between two points.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.PointLineDistanceVisualConstraint">
      <summary>
            The Constraint representing the distance between a line and a point.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.LinesDistanceVisualConstraint">
      <summary>
            The Constraint representing the distance between two lines.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.AngleVisualConstraint">
      <summary>
            The angle constraint (between lines or of arc)
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.ConcentricCirclesDistanceVisualConstraint">
      <summary>
            The constraint representing the distance between two concentric circles.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.TangentVisualConstraint">
      <summary>
            The tangent constraint
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.TangentVisualConstraint.#ctor(devDept.Eyeshot.Control.Viewport,devDept.Eyeshot.Control.Labels.StackedLabel[],devDept.Geometry.ConstraintSolver.TangentConstraint)">
      <summary>
            Standard constructor.
            </summary>
      <param name="entities">
      </param>
      <param name="tangentConstrain">
      </param>
    </member>
    <member name="T:devDept.Eyeshot.Control.LengthVisualConstraint">
      <summary>
            The length of a curve constraint
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.PointOnVisualConstraint">
      <summary>
            The point on curve constraint.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.PointAtVisualConstraint">
      <summary>
            The point at curve constraint.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.MidPointVisualConstraint">
      <summary>
            The midpoint on curve constrain
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.DiameterVisualConstraint">
      <summary>
            The circle diameter constraint
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.DiameterVisualConstraint.#ctor(devDept.Eyeshot.Control.Viewport,devDept.Eyeshot.Entities.Dimension,devDept.Geometry.ConstraintSolver.RadiusConstraint)">
      <summary>
            Standard constructor.
            </summary>
      <param name="viewport">The Viewport.</param>
      <param name="radiusConstraintConstrain">
      </param>
    </member>
    <member name="T:devDept.Eyeshot.Control.CoincidentVisualConstraint">
      <summary>
            The Constraint that represents the coincidence between points 
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.CoincidentVisualConstraint.#ctor(devDept.Eyeshot.Control.Viewport,devDept.Eyeshot.Control.Labels.StackedLabel[],devDept.Geometry.ConstraintSolver.Constraint)">
      <summary>
            Standard constructor.
            </summary>
      <param name="viewport">The Viewport.</param>
      <param name="gConstraint">
      </param>
    </member>
    <member name="T:devDept.Eyeshot.Control.PointFixedVisualConstraint">
      <summary>
            The point fixed constraint.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.PointFixedVisualConstraint.#ctor(devDept.Eyeshot.Control.Viewport,devDept.Eyeshot.Control.Labels.StackedLabel[],devDept.Geometry.ConstraintSolver.PointFixedConstraint)">
      <summary>
            Standard constructor.
            </summary>
      <param name="viewport">The Viewport.</param>
      <param name="pointFixedConstraint">
      </param>
    </member>
    <member name="T:devDept.Eyeshot.Control.PolygonVisualConstraint">
      <summary>
            The polygon constraint.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.PolygonVisualConstraint.#ctor(devDept.Eyeshot.Control.Viewport,devDept.Eyeshot.Control.Labels.StackedLabel[],devDept.Geometry.ConstraintSolver.PolygonConstraint)">
      <summary>
            Standard constructor.
            </summary>
      <param name="viewport">The Viewport.</param>
      <param name="polygonConstraint">The polygon constraint.</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.HvVisualConstraint">
      <summary>
            The Horizontal(Vertical) constraint
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.HvVisualConstraint.#ctor(devDept.Eyeshot.Control.Viewport,devDept.Eyeshot.Control.Labels.StackedLabel[],devDept.Geometry.ConstraintSolver.HVConstraint)">
      <summary>
            Standard constructor.
            </summary>
      <param name="viewport">The Viewport.</param>
      <param name="hvConstraint">
      </param>
    </member>
    <member name="T:devDept.Eyeshot.Control.CollinearPointsVisualConstraint">
      <summary>
            The collinear points constraint
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.CollinearPointsVisualConstraint.#ctor(devDept.Eyeshot.Control.Viewport,devDept.Eyeshot.Control.Labels.StackedLabel[],devDept.Geometry.ConstraintSolver.CollinearPointsConstraint)">
      <summary>
            Standard constructor
            </summary>
      <param name="viewport">The Viewport.</param>
      <param name="constraintLabels">the constraint labels.</param>
      <param name="collinearPointsConstraint">The sketch constraint.</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.CollinearVisualConstraint">
      <summary>
            The collinear lines constraint
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.CollinearVisualConstraint.#ctor(devDept.Eyeshot.Control.Viewport,devDept.Eyeshot.Control.Labels.StackedLabel[],devDept.Geometry.ConstraintSolver.CollinearConstraint)">
      <summary>
            Standard constructor
            </summary>
      <param name="viewport">The Viewport.</param>
      <param name="constraintLabels">the constraint labels.</param>
      <param name="collinearConstraint">The sketch constraint.</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.ValueVisualConstraint">
      <summary>
            Generic value constraint class definition.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ValueVisualConstraint.#ctor(devDept.Eyeshot.Control.Viewport,devDept.Eyeshot.Entities.Dimension,devDept.Geometry.ConstraintSolver.ValueConstraint)">
      <summary>
            Standard constructor.
            </summary>
      <param name="viewport">The Viewport.</param>
      <param name="valueConstraint">
      </param>
    </member>
    <member name="P:devDept.Eyeshot.Control.ValueVisualConstraint.Reference">
      <summary>
            Gets or sets the reference state of the constraint.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ValueVisualConstraint.Value">
      <summary>
            Gets or sets the constraint value.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.EqualVisualConstraint">
      <summary>
            Equal constraint
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.EqualVisualConstraint.#ctor(devDept.Eyeshot.Control.Viewport,devDept.Eyeshot.Control.Labels.StackedLabel[],devDept.Geometry.ConstraintSolver.EqualConstraint)">
      <summary>
            Standard constructor.
            </summary>
      <param name="viewport">The Viewport.</param>
      <param name="equalConstraintConstrain">
      </param>
    </member>
    <member name="T:devDept.Eyeshot.Control.PerpendicularVisualConstraint">
      <summary>
            The perpendicular constraint
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.PerpendicularVisualConstraint.#ctor(devDept.Eyeshot.Control.Viewport,devDept.Eyeshot.Control.Labels.StackedLabel[],devDept.Geometry.ConstraintSolver.PerpendicularConstraint)">
      <summary>
            Standard constructor.
            </summary>
      <param name="viewport">The Viewport.</param>
      <param name="perpendicularConstraintConstrain">
      </param>
    </member>
    <member name="T:devDept.Eyeshot.Control.MirrorVisualConstraint">
      <summary>
            The mirror constraint
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.ParallelLinesVisualConstraint">
      <summary>
            The parallel constraint
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ParallelLinesVisualConstraint.#ctor(devDept.Eyeshot.Control.Viewport,devDept.Eyeshot.Control.Labels.StackedLabel[],devDept.Geometry.ConstraintSolver.ParallelConstraint)">
      <summary>
            Standard constructor.
            </summary>
      <param name="viewport">The Viewport.</param>
      <param name="parallelConstraintConstrain">
      </param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.BoundingBoxConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.MouseButtonConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="M:devDept.Eyeshot.Control.Converters.MouseButtonConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <exclude />
    </member>
    <member name="M:devDept.Eyeshot.Control.Converters.MouseButtonConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <exclude />
    </member>
    <member name="M:devDept.Eyeshot.Control.Converters.MouseButtonConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <exclude />
    </member>
    <member name="M:devDept.Eyeshot.Control.Converters.MouseButtonConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <exclude />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.RotateConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.ShortcutKeysSettingsConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.ManufactureShortcutKeysSettingsConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.ZoomConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.PanConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.Mouse3DConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.MultiTouchConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.NavigationSettingsConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.SelectionBoxColorsConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="M:devDept.Eyeshot.Control.Converters.SelectionBoxColorsConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <exclude />
    </member>
    <member name="M:devDept.Eyeshot.Control.Converters.SelectionBoxColorsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <exclude />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.MagnifyingGlassConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="M:devDept.Eyeshot.Control.Converters.MagnifyingGlassConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <exclude />
    </member>
    <member name="M:devDept.Eyeshot.Control.Converters.MagnifyingGlassConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <exclude />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.DisplayModeSettingsConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.DisplayModeSettingsFlatConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.DisplayModeSettingsShadedConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.DisplayModeSettingsRenderedConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.HiddenLinesConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="M:devDept.Eyeshot.Control.Converters.HiddenLinesConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <exclude />
    </member>
    <member name="M:devDept.Eyeshot.Control.Converters.HiddenLinesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <exclude />
    </member>
    <member name="M:devDept.Eyeshot.Control.Converters.HiddenLinesConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <exclude />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.EnumDescriptionConverter">
      <summary>
            EnumConverter supporting System.ComponentModel.DescriptionAttribute
            </summary>
      <exclude />
      <excludetoc />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.GridConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.HistogramConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.LegendConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.ObjectManipulatorPartPropertiesConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.ObjectManipulatorConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.CoordinateSystemIconConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="M:devDept.Eyeshot.Control.Converters.CoordinateSystemIconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <exclude />
    </member>
    <member name="M:devDept.Eyeshot.Control.Converters.CoordinateSystemIconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <exclude />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.OriginSymbolConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.ProgressBarConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.SavedViewsConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.BorderConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.SimulationTimeLineConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.ToolBarConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="M:devDept.Eyeshot.Control.Converters.ToolBarConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <exclude />
    </member>
    <member name="M:devDept.Eyeshot.Control.Converters.ToolBarConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <exclude />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.ButtonSettingsConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="M:devDept.Eyeshot.Control.Converters.ButtonSettingsConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <exclude />
    </member>
    <member name="M:devDept.Eyeshot.Control.Converters.ButtonSettingsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <exclude />
    </member>
    <member name="M:devDept.Eyeshot.Control.Converters.ButtonSettingsConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <exclude />
    </member>
    <member name="M:devDept.Eyeshot.Control.Converters.ButtonSettingsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <exclude />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.ToolBarButtonConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.DefaultToolBarButtonConverter`1">
      <exclude />
      <excludetoc />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.ViewCubeConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="M:devDept.Eyeshot.Control.Converters.ViewCubeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <exclude />
    </member>
    <member name="M:devDept.Eyeshot.Control.Converters.ViewCubeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <exclude />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.ViewportConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="T:devDept.Eyeshot.Control.Converters.BackgroundConverter">
      <exclude />
      <excludetoc />
    </member>
    <member name="T:devDept.Eyeshot.Control.Dicom.CtSliceInfo">
      <summary>
            CT image information of a single slice.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.CtSliceInfo.TransferSyntax">
      <summary>
            Gets the "Transfer Syntax UID" attribute (0002,0010)
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.CtSliceInfo.PixelRepresentation">
      <summary>
            Gets the "Pixel Representation" attribute (0028,0103)
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.CtSliceInfo.WindowCenter">
      <summary>
            Gets the "Window Center" (brightness) attribute (0028,1050)
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.CtSliceInfo.WindowWidth">
      <summary>
            Gets the "Window Width" (contrast) attribute (0028,1051)
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.CtSliceInfo.PixelPaddingValue">
      <summary>
            Gets the "Pixel Padding Value" attribute (0028,0120)
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.CtSliceInfo.FileName">
      <summary>
            Gets the file name.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.CtSliceInfo.SamplePerPixel">
      <summary>
            Gets the "Sample Per Pixel" attribute (0028,0002)
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.CtSliceInfo.BitsAllocated">
      <summary>
            Gets the "Bits Allocated" attribute (0028,0100)
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.CtSliceInfo.PhotometricInterpretation">
      <summary>
            Gets the "Photometric Interpretation" attribute (0028,0004)
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.CtSliceInfo.RescaleIntercept">
      <summary>
            Gets the "Rescale Intercept" attribute (0028,1052)
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.CtSliceInfo.RescaleSlope">
      <summary>
            Gets the "Rescale Slope" attribute (0028,1053)
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.CtSliceInfo.InstanceNumber">
      <summary>
            Gets the "Instance Number" attribute (0020,0013)
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.CtSliceInfo.Columns">
      <summary>
            Gets the "Columns; attribute (0028,0011)
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.CtSliceInfo.Rows">
      <summary>
            Gets the "Rows" attribute (0028,0010)
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.CtSliceInfo.ImageUpperLeftX">
      <summary>
            Gets the X coordinate of the "Image Position (Patient)" attribute (0020,0032)
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.CtSliceInfo.ImageUpperLeftY">
      <summary>
            Gets the Y coordinate of the "Image Position (Patient)" attribute (0020,0032)
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.CtSliceInfo.ImageUpperLeftZ">
      <summary>
            Gets the Z coordinate of the "Image Position (Patient)" attribute (0020,0032)
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.CtSliceInfo.PixelSpacingRow">
      <summary>
            Gets the first value (row spacing in mm) of the "Pixel Spacing" attribute (0028,0030)
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.CtSliceInfo.PixelSpacingColumn">
      <summary>
            Gets the second value (column spacing in mm) of the "Pixel Spacing" attribute (0028,0030)
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.CtSliceInfo.SliceThickness">
      <summary>
            Gets the "Slice Thickness" attribute (0018,0050)
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Dicom.CtSliceInfo.Clone">
      <summary>
            Creates a deep copy of this CT Slice.
            </summary>
      <returns>The new CT Slice.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Dicom.CtSliceInfo.#ctor(System.Xml.Linq.XDocument,System.String)">
      <summary>
            Standard constructor.
            </summary>
      <param name="xDocument">The XDocument that represents the physical DICOM file.</param>
      <param name="fileName">The file name.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Dicom.CtSliceInfo.GetHounsfieldPixelValue(System.Int32,System.Int32)">
      <summary>
            Gets the Hounsfield value of a specified voxel (RowIndex/ColumnIndex).
            </summary>
      <param name="rowIndex">The row index.</param>
      <param name="columnIndex">The column index.</param>
      <returns>The Hounsfield value of the specified voxel.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Dicom.CtSliceInfo.SetPixelData">
      <summary>
            Fills the Hounsfield Pixel matrix.
            <remarks>If you use an external library to read the DICOM images, then you need to override this method.</remarks></summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Dicom.CtSliceInfo.GetBitmap(System.Int32,System.Int32)">
      <summary>
            Gets the pixel data of a CT slice as gray-scale bitmap.
            </summary>
      <param name="windowCenter">The window center (brightness) value.</param>
      <param name="windowWidth">The window width (contrast) value.</param>
      <remarks>If you use an external library to read the DICOM images, then you need to override this method.</remarks>
      <returns>
      </returns>
    </member>
    <member name="T:devDept.Eyeshot.Control.Dicom.DicomElement">
      <summary>
            The DICOM element
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.Dicom.DicomElement.dicomNodeType">
      <summary>
            DICOM node type.
            </summary>
      <seealso cref="P:devDept.Eyeshot.Control.Dicom.DicomElement.DicomNode" />
    </member>
    <member name="F:devDept.Eyeshot.Control.Dicom.DicomElement.dicomNodeType.Unknown">
      <summary>
            Unknown
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Dicom.DicomElement.dicomNodeType.Patient">
      <summary>
            Patient
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Dicom.DicomElement.dicomNodeType.SopClass">
      <summary>
            SOP Class
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Dicom.DicomElement.dicomNodeType.Study">
      <summary>
            Study
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Dicom.DicomElement.dicomNodeType.Series">
      <summary>
            Series
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Dicom.DicomElement.dicomNodeType.Instance">
      <summary>
            Instance
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Dicom.DicomElement.dicomNodeType.Tag">
      <summary>
            Tag
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Dicom.DicomElement.#ctor(System.String,devDept.Eyeshot.Control.Dicom.DicomElement.dicomNodeType,devDept.Eyeshot.Control.Dicom.DicomElement)">
      <summary>
            Standard constructor.
            </summary>
      <param name="header">The header.</param>
      <param name="dicomNode">The <see cref="T:devDept.Eyeshot.Control.Dicom.DicomElement.dicomNodeType" />.</param>
      <param name="parent">The parent <see cref="T:devDept.Eyeshot.Control.Dicom.DicomElement" />.</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.DicomElement.Header">
      <summary>
            Gets or sets the header.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.DicomElement.DicomNode">
      <summary>
            Gets the <see cref="T:devDept.Eyeshot.Control.Dicom.DicomElement.dicomNodeType" />.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.DicomElement.Elements">
      <summary>
            Gets or sets the collection of the child elements.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.DicomElement.Parent">
      <summary>
            Gets or sets the parent element.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.Dicom.IodElement">
      <summary>
            The IOD (Information Object Definitions) element.
            <remarks>This is the DicomElement that contains the info about the single slice.</remarks></summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.IodElement.Tag">
      <summary>
            The Tag.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.IodElement.SliceInfo">
      <summary>
            Gets or sets the <see cref="T:devDept.Eyeshot.Control.Dicom.CtSliceInfo" />.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Dicom.IodElement.IsSupportedDicomFile">
      <summary>
            Checks the <see cref="T:devDept.Eyeshot.Control.Dicom.DicomVersion" /> to know if the current element is or not a supported DICOM file.
            </summary>
      <returns>True when the current element is a supported DICOM file.</returns>
      <remarks>If you use an external library to read the DICOM images, then you have to remember to set the <see cref="T:devDept.Eyeshot.Control.Dicom.DicomVersion" /> rightly.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Dicom.IodElement.GetTransferSyntax">
      <summary>
            Gets the "Transfer Syntax UID" attribute (0002,0010)
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Dicom.IodElement.GetWindowWidth">
      <summary>
            Gets the "Window Width" (contrast) attribute (0028,1051)
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Dicom.IodElement.GetWindowCenter">
      <summary>
            Gets the "Window Center" (brightness) attribute (0028,1050)
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Dicom.IodElement.GetPixelPaddingValue">
      <summary>
            Gets the "Pixel Padding Value" attribute (0028,0120)
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Dicom.IodElement.GetPixelSpacing(System.Single@,System.Single@)">
      <summary>
            Gets the "Pixel Spacing" attribute (0028,0030)
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Dicom.IodElement.GetSliceThickness">
      <summary>
            Gets the "Slice Thickness" attribute (0018,0050)
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Dicom.IodElement.GetColumns">
      <summary>
            Gets the "Columns; attribute (0028,0011)
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Dicom.IodElement.GetRows">
      <summary>
            Gets the "Rows" attribute (0028,0010)
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Dicom.IodElement.BuildHounsfieldValues">
      <summary>
            Fills the Hounsfield Pixel matrix.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Dicom.IodElement.GetHounsfieldPixelValue(System.Int32,System.Int32)">
      <summary>
            Gets the Hounsfield value of a specified voxel (RowIndex/ColumnIndex).
            </summary>
      <param name="rowIndex">The row index.</param>
      <param name="columnIndex">The column index.</param>
      <returns>The Hounsfield value of the specified voxel.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Dicom.IodElement.GetBitmap">
      <summary>
            Gets the pixel data of the CT slice as bitmap.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Dicom.IodElement.GetBitmap(System.Int32,System.Int32)">
      <summary>
            Gets the pixel data of the CT slice as bitmap.
            </summary>
      <param name="brightness">The brightness (window center)</param>
      <param name="contrast">The contrast (window width)</param>
      <returns>
      </returns>
    </member>
    <member name="T:devDept.Eyeshot.Control.Dicom.DicomTree">
      <summary>
            The DICOM tree.
            <remarks>The hierarchy of the tree is: Patient-SOPClass-Study-Series-Instance(Image).</remarks></summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.DicomTree.Log">
      <summary>
            Gets the list of errors and warnings generated during files reading.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Dicom.DicomTree.#ctor(System.String[])">
      <summary>
            Standard constructor.
            </summary>
      <param name="fileNames">The array of DICOM's filenames</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Dicom.DicomDictionary">
      <summary>
            Dictionary for public DICOM attributes.
            <remarks>Reference: DCIOM Standard 2009, Part 3: Information Object Definitions</remarks></summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.Dicom.DicomVersion">
      <summary>
            DICOM Version
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Dicom.DicomVersion.NotDicom">
      <summary>
            Not DICOM file
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Dicom.DicomVersion.Dicom3">
      <summary>
            DICOM 3.0
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Dicom.DicomVersion.DicomOldType">
      <summary>
            Old DICOM file
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Dicom.DicomVersion.DicomUnknownTransferSyntax">
      <summary>
            Unknown TransferSyntax
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.Dicom.Iod">
      <summary>
            DICOM Instance class.
            <remarks>It represents one physical DICOM file.</remarks></summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.Iod.XDocument">
      <summary>
            The XDocument that represents the physical DICOM file.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.Iod.FileName">
      <summary>
            Gets the file name.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.Iod.StudyInstanceUid">
      <summary>
            Gets the study instance UID.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.Iod.SeriesInstanceUid">
      <summary>
            Gets the series instance UID.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.Iod.SopInstanceUid">
      <summary>
            Gets the SOP instance UID.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.Iod.SopClassUid">
      <summary>
            Gets the SOP class UID.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.Iod.SopClassName">
      <summary>
            Gets the SOP class name.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.Iod.PatientName">
      <summary>
            Gets the patient name.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.Iod.TransferSyntaxUid">
      <summary>
            Gets the transfer syntax UID.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Dicom.Iod.#ctor(System.String)">
      <summary>
            Standard constructor.
            </summary>
      <param name="fileName">The file name.</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Dicom.SopClassDictionary">
      <summary>
            DICOM SOP Class Dictionary
            <remarks>Reference: DICOM Standard 2009, Part 4: Service Class Specifications, Table B.5-1 Standard SOP Classes</remarks></summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Dicom.SopClassDictionary.GetSopClassName(System.String)">
      <summary>
            Gets the SOP class name.
            </summary>
      <param name="sopClassUid">The SOP class uid.</param>
      <returns>The SOP class name.</returns>
    </member>
    <member name="T:devDept.Eyeshot.Control.Dicom.TransferSyntaxDictionary">
      <summary>
            DICOM Transfer Syntax Dictionary.
            <remarks>Reference: DCIOM Standard 2009, Part 5: Data Structures and Encoding.</remarks></summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Dicom.TransferSyntaxDictionary.GetTransferSyntaxName(System.String)">
      <summary>
            Gets the transfer syntax name.
            </summary>
      <param name="transferSyntaxUid">The transfer syntax UID.</param>
      <returns>The transfer syntax name.</returns>
    </member>
    <member name="T:devDept.Eyeshot.Control.Dicom.VolumeRendering">
      <summary>
            Utility class for the volume rendering reconstruction.
            <para>The volume rendering is a set of techniques used to display a 2D projection of a 3D discretely sampled data set, typically a 3D scalar field.</para><para>A typical 3D data set is a group of 2D slice images acquired by a CT, MRI, or MicroCT scanner. Usually these are acquired in a regular pattern (e.g., one slice every millimeter) and usually have a regular number of image pixels in a regular pattern. This is an example of a regular volumetric grid, with each volume element, or voxel represented by a single value that is obtained by sampling the immediate area surrounding the voxel.</para></summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.VolumeRendering.ProgressBarTextLoadHounsfieldValues">
      <summary>
            Gets or sets the text displayed during the loading of the Hounsfield values.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Dicom.VolumeRendering.#ctor(System.Collections.Generic.IList{devDept.Eyeshot.Control.Dicom.DicomElement},devDept.Geometry.Point3D,System.Int32,System.Int32,System.Int32,devDept.Eyeshot.Triangulation.ScalarField3D)">
      <summary>
            Standard constructor.
            </summary>
      <param name="elements">The collection of <see cref="T:devDept.Eyeshot.Control.Dicom.DicomElement" />.</param>
      <param name="gridOrigin">The 3D point that represents the origin of the selection grid.</param>
      <param name="nCellsInX">The number of cells in the X direction.</param>
      <param name="nCellsInY">The number of cells in the Y direction.</param>
      <param name="nCellsInZ">The number of cells in the Z direction.</param>
      <param name="func">The 3D scalar field function</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Dicom.VolumeRendering.#ctor(System.Collections.Generic.IList{System.Drawing.Bitmap},devDept.Geometry.Point3D,System.Single)">
      <summary>
            Constructor with a sorted collection of gray-scale bitmaps.
            </summary>
      <param name="images">The collection of <see cref="T:System.Drawing.Bitmap" />.</param>
      <param name="gridOrigin">The 3D point that represents the origin of the selection grid.</param>
      <param name="cellSizeZ">The cell's size in the Z direction.</param>
      <remarks>The <see cref="P:devDept.Eyeshot.Triangulation.MarchingCubes.IsoLevel" /> must be between 0 and 255.</remarks>
    </member>
    <member name="T:devDept.Eyeshot.Control.Dicom.VolumeRenderingBase`1">
      <summary>
            Volume rendering base definition.
            </summary>
      <typeparam name="T">The struct type.</typeparam>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.VolumeRenderingBase`1.LoadingFilesText">
      <summary>
            Gets or sets the text displayed during the loading of the files.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.VolumeRenderingBase`1.FileNames">
      <summary>
             Gets or sets the list of file names.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.VolumeRenderingBase`1.Pictures">
      <summary>
            Gets or sets the pictures data for volume rendering.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Dicom.VolumeRenderingBase`1.#ctor(System.String[],System.Int32,System.Single,System.Int32,System.Single,System.Int32,System.Single,devDept.Eyeshot.Triangulation.ScalarField3D)">
      <summary>
            Constructor with the grid origin in (0, 0, 0).
            </summary>
      <param name="fileNames">The list of file names</param>
      <param name="nCellsInX">The number of cells in the X direction.</param>
      <param name="cellSizeX">The cell's size in the X direction.</param>
      <param name="nCellsInY">The number of cells in the Y direction.</param>
      <param name="cellSizeY">The cell's size in the Y direction.</param>
      <param name="nCellsInZ">The number of cells in the Z direction.</param>
      <param name="cellSizeZ">The cell's size in the Z direction.</param>
      <param name="func">The 3D scalar field function</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Dicom.VolumeRenderingBase`1.#ctor(System.String[],devDept.Geometry.Point3D,System.Int32,System.Single,System.Int32,System.Single,System.Int32,System.Single,devDept.Eyeshot.Triangulation.ScalarField3D)">
      <summary>
            Standard constructor.
            </summary>
      <param name="fileNames">The list of file names</param>
      <param name="gridOrigin">The 3D point that represents the origin of the selection grid.</param>
      <param name="nCellsInX">The number of cells in the X direction.</param>
      <param name="cellSizeX">The cell's size in the X direction.</param>
      <param name="nCellsInY">The number of cells in the Y direction.</param>
      <param name="cellSizeY">The cell's size in the Y direction.</param>
      <param name="nCellsInZ">The number of cells in the Z direction.</param>
      <param name="cellSizeZ">The cell's size in the Z direction.</param>
      <param name="func">The 3D scalar field function</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.Dicom.VolumeRenderingBase`1.GaussFilter">
      <summary>
            Gets or sets a flag that tells if the gauss filter must be applied to the data.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.ViewBuilderEx">
      <summary>
            Class that builds <see cref="T:devDept.Eyeshot.Entities.VectorView" /> and <see cref="T:devDept.Eyeshot.Entities.RasterView" /> entity.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ViewBuilderEx.#ctor(devDept.Eyeshot.Control.Design,devDept.Eyeshot.Control.Drawing,System.Boolean)">
      <summary>
            Standard constructor.
            </summary>
      <param name="design">The design for building the views.</param>
      <param name="drawing">The drawing control containing sheets with views to rebuild.</param>
      <param name="changedOnly">When true only missing/changed views are built.</param>
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.SilhouettesLayerName" />
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.EdgesLayerName" />
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.WiresLayerName" />
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.HiddenSilhouettesLayerName" />
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.HiddenEdgesLayerName" />
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.HiddenWiresLayerName" />
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.CenterlinesLayerName" />
    </member>
    <member name="M:devDept.Eyeshot.Control.ViewBuilderEx.#ctor(devDept.Eyeshot.Control.Design,devDept.Eyeshot.Control.Drawing,devDept.Eyeshot.Entities.View,devDept.Eyeshot.Sheet)">
      <summary>
            Standard constructor for a single view.
            </summary>
      <param name="design">The design for building the views.</param>
      <param name="drawing">The drawing control containing sheets with views to rebuild.</param>
      <param name="view">The view to rebuild.</param>
      <param name="sheet">The sheet to which the view belong to.</param>
      <remarks>
            If this will be added to a <see cref="T:devDept.WorkManager`1" /> queue, ensures to have added a place holder for the <paramref name="view" /> before.
            </remarks>
      <seealso cref="!:Sheet.AddViewPlaceHolder" />
      <seealso cref="T:devDept.WorkManager`1" />
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.SilhouettesLayerName" />
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.EdgesLayerName" />
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.WiresLayerName" />
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.HiddenSilhouettesLayerName" />
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.HiddenEdgesLayerName" />
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.HiddenWiresLayerName" />
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.CenterlinesLayerName" />
    </member>
    <member name="M:devDept.Eyeshot.Control.ViewBuilderEx.AddTo(devDept.Eyeshot.Control.Drawing)">
      <summary>
            Adds views and blocks to the drawing control.
            </summary>
      <param name="drawing">The drawing control.</param>
      <remarks>If a block already exists its entities are replaced with the new one.</remarks>
    </member>
    <member name="T:devDept.Eyeshot.Control.Labels.ImageOnly">
      <summary>
            Image only label.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Labels.ImageOnly.HotSpot">
      <summary>
             Gets or sets the image hotspot (the point of the image that is drawn at the <see cref="P:devDept.Eyeshot.Control.Labels.Label.AnchorPoint" /> position).
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Labels.ImageOnly.Image">
      <summary>
            Gets or sets the label image.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Labels.ImageOnly.ImageForSelection">
      <summary>
            Gets or sets the image used when the label is selected.
            </summary>
      <remarks>If no image is provided, the label is drawn in negative colors when selected.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.ImageOnly.#ctor(devDept.Geometry.Point3D,System.Drawing.Bitmap)">
      <summary>
            Standard constructor.
            </summary>
      <param name="anchorPoint">Attaching point coords.</param>
      <param name="bitmap">Label image.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.ImageOnly.#ctor(devDept.Geometry.Point3D,System.Drawing.Bitmap,System.Int32,System.Int32)">
      <summary>
            Standard constructor.
            </summary>
      <param name="anchorPoint">Attaching point coords</param>
      <param name="bitmap">Label image</param>
      <param name="hotspotX">Image hotspot X position</param>
      <param name="hotspotY">Image hotspot Y position</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.ImageOnly.#ctor(System.Double,System.Double,System.Double,System.Drawing.Bitmap)">
      <summary>
            Standard constructor.
            </summary>
      <param name="x">Attaching point X coord.</param>
      <param name="y">Attaching point Y coord.</param>
      <param name="z">Attaching point Z coord.</param>
      <param name="bitmap">Label image.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.ImageOnly.#ctor(System.Double,System.Double,System.Double,System.Drawing.Bitmap,System.Int32,System.Int32)">
      <summary>
            Standard constructor.
            </summary>
      <param name="x">Attaching point X coord.</param>
      <param name="y">Attaching point Y coord.</param>
      <param name="z">Attaching point Z coord.</param>
      <param name="bitmap">Label image.</param>
      <param name="hotspotX">Image hotspot X position</param>
      <param name="hotspotY">Image hotspot Y position</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.ImageOnly.Draw(devDept.Graphics.RenderContextBase)">
      <summary>
            Standard draw method.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.ImageOnly.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Constructor for deserializing objects.
            </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance that defines the serialized data.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> instance that contains the serialized data.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.ImageOnly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance with the data needed to serialize the target object.
            </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance that defines the serialized data.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> instance that contains the serialized data.</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Labels.StackedLabel">
      <summary>
            Stacked label to allow to stack multiple labels with the same AnchorPoint .
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.Labels.StackedLabel.orientationType">
      <summary>
            Stack orientation type.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Labels.StackedLabel.orientationType.Horizontal">
      <summary>
            Horizontal orientation.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Labels.StackedLabel.orientationType.Vertical">
      <summary>
            Vertical orientation.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.StackedLabel.#ctor(System.Double,System.Double,System.Double,System.Drawing.Bitmap,System.Int32)">
      <summary>
            Standard constructor.
            </summary>
      <param name="x">Attaching point X coord.</param>
      <param name="y">Attaching point Y coord.</param>
      <param name="z">Attaching point Z coord.</param>
      <param name="bitmap">Label image.</param>
      <param name="position">The position in the stack.</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.Labels.StackedLabel.OrientationMode">
      <summary>
            Gets or sets the stack alignment method.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.StackedLabel.Draw(devDept.Graphics.RenderContextBase)">
      <summary>
            Standard draw method.
            </summary>
      <param name="renderContext">The render context.</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Labels.EqualLabel">
      <summary>
            Equal label.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.EqualLabel.#ctor(devDept.Geometry.ConstraintSolver.SketchCurve,devDept.Geometry.ConstraintSolver.EqualConstraint)">
      <summary>
            Standard constructor.
            </summary>
      <param name="curve">The sketch curve.</param>
      <param name="equalConstraint">The equal constraint.</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Labels.MirrorLabel">
      <summary>
            Mirror label.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.MirrorLabel.#ctor(devDept.Geometry.ConstraintSolver.SketchCurve,devDept.Geometry.ConstraintSolver.MirrorConstraint)">
      <summary>
            Standard constructor.
            </summary>
      <param name="curve">The sketch curve.</param>
      <param name="mirrorConstraint">The mirror constraint.</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Labels.EqualRadiusLabel">
      <summary>
            Equal radius label.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.EqualRadiusLabel.#ctor(devDept.Geometry.ConstraintSolver.SketchCurve,devDept.Geometry.ConstraintSolver.EqualConstraint)">
      <summary>
            Standard constructor.
            </summary>
      <param name="curve">The sketch curve.</param>
      <param name="equalConstraint">The equal constraint.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.PointOnLabel.#ctor(devDept.Geometry.ConstraintSolver.SketchCurve,devDept.Geometry.ConstraintSolver.PointOnConstraint)">
      <summary>
            Standard constructor.
            </summary>
      <param name="curve">The sketch curve.</param>
      <param name="pointOnConstraint">The PointOn constraint</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.PointAtLabel.#ctor(devDept.Geometry.ConstraintSolver.SketchCurve,devDept.Geometry.ConstraintSolver.PointAtConstraint)">
      <summary>
            Standard constructor.
            </summary>
      <param name="curve">The sketch curve.</param>
      <param name="pointAtConstraint">The PointAt constraint</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Labels.JoinLabel">
      <summary>
            Join constraint label
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.JoinLabel.#ctor(devDept.Geometry.ConstraintSolver.SketchCurve,devDept.Geometry.ConstraintSolver.CoincidentConstraint)">
      <summary>
            Standard constructor.
            </summary>
      <param name="curve">The sketch curve.</param>
      <param name="joinConstraint">The Coincident constraint.</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Labels.HorizontalLabel">
      <summary>
            Horizontal constraint label.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.HorizontalLabel.#ctor(devDept.Geometry.ConstraintSolver.SketchCurve,devDept.Geometry.ConstraintSolver.HVConstraint)">
      <summary>
            Standard constructor.
            </summary>
      <param name="curve">The sketch curve.</param>
      <param name="horConstraint">The horizontal constraint.</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Labels.VerticalLabel">
      <summary>
            Vertical constraint label.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.VerticalLabel.#ctor(devDept.Geometry.ConstraintSolver.SketchCurve,devDept.Geometry.ConstraintSolver.HVConstraint)">
      <summary>
            Standard constructor.
            </summary>
      <param name="curve">The sketch curve.</param>
      <param name="horConstraint">the horizontal constraint.</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Labels.ParallelLabel">
      <summary>
            Parallel constraint label.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.ParallelLabel.#ctor(devDept.Geometry.ConstraintSolver.SketchCurve,devDept.Geometry.ConstraintSolver.ParallelConstraint)">
      <summary>
            Standard constructor.
            </summary>
      <param name="curve">The sketch curve.</param>
      <param name="parallelConstraint">The parallel constraint.</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Labels.PerpendicularLabel">
      <summary>
            Perpendicular label constraint.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.PerpendicularLabel.#ctor(devDept.Geometry.ConstraintSolver.SketchCurve,devDept.Geometry.ConstraintSolver.PerpendicularConstraint)">
      <summary>
            Standard constructor.
            </summary>
      <param name="curve">The sketch curve.</param>
      <param name="perpendicularConstraint">The perpendicular constraint.</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Labels.FixLabel">
      <summary>
            Fix constraint label.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.FixLabel.#ctor(devDept.Geometry.ConstraintSolver.SketchCurve,devDept.Geometry.ConstraintSolver.PointFixedConstraint)">
      <summary>
            Standard constructor.
            </summary>
      <param name="curve">The sketch curve.</param>
      <param name="pointFixedConstraint">the PointFixed constraint.</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Labels.PolygonLabel">
      <summary>
            Polygon label.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.PolygonLabel.#ctor(devDept.Geometry.ConstraintSolver.SketchCurve,devDept.Geometry.ConstraintSolver.PolygonConstraint)">
      <summary>
            Standard constructor.
            </summary>
      <param name="curve">The sketch curve.</param>
      <param name="polygonConstraint">The polygon constraint.</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Labels.TangentLabel">
      <summary>
            Tangent constraint label.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.TangentLabel.#ctor(devDept.Geometry.ConstraintSolver.SketchCurve,devDept.Geometry.ConstraintSolver.TangentConstraint)">
      <summary>
            Standard constructor.
            </summary>
      <param name="curve">The sketch curve.</param>
      <param name="tangentConstraint">The tangent constraint.</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Labels.CollinearLabel">
      <summary>
            Collinear constraint label.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.CollinearLabel.#ctor(devDept.Geometry.ConstraintSolver.SketchCurve,devDept.Geometry.ConstraintSolver.CollinearPointsConstraint)">
      <summary>
            Standard constructor
            </summary>
      <param name="curve">The sketch curve.</param>
      <param name="collinearConstraint">The collinear constraint.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.CollinearLabel.#ctor(devDept.Geometry.ConstraintSolver.SketchCurve,devDept.Geometry.ConstraintSolver.CollinearConstraint)">
      <summary>
            Standard constructor
             </summary>
      <param name="curve">The sketch curve.</param>
      <param name="collinearConstraint">The tangent constraint.</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Labels.MidPointLabel">
      <summary>
            MidPoint constraint label.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.MidPointLabel.#ctor(devDept.Geometry.ConstraintSolver.SketchCurve,devDept.Geometry.ConstraintSolver.MidPointConstraint)">
      <summary>
            Standard constructor.
            </summary>
      <param name="curve">The sketch curve.</param>
      <param name="midPointConstraint">The mid-point constraint</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Labels.LeaderAndImage">
      <summary>
            Leader and text image label.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.LeaderAndImage.#ctor(devDept.Geometry.Point3D,System.Drawing.Bitmap,System.Drawing.Color,devDept.Geometry.Vector2D)">
      <summary>
            Standard constructor.
            </summary>
      <param name="anchorPoint">Attaching point coords.</param>
      <param name="bitmap">Label image.</param>
      <param name="leaderColor">Color of the leader line</param>
      <param name="offset">Offset between the label and the attaching point</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.LeaderAndImage.#ctor(devDept.Geometry.Point3D,System.Drawing.Bitmap,System.Drawing.Color,System.Int32,System.Int32,devDept.Geometry.Vector2D)">
      <summary>
            Standard constructor.
            </summary>
      <param name="anchorPoint">Attaching point coords</param>
      <param name="bitmap">Label image</param>
      <param name="leaderColor">Color of the leader line</param>
      <param name="hotspotX">Image hotspot X position</param>
      <param name="hotspotY">Image hotspot Y position</param>
      <param name="offset">Offset between the label and the attaching point</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.LeaderAndImage.#ctor(System.Double,System.Double,System.Double,System.Drawing.Bitmap,System.Drawing.Color,devDept.Geometry.Vector2D)">
      <summary>
            Standard constructor.
            </summary>
      <param name="x">Attaching point X coord.</param>
      <param name="y">Attaching point Y coord.</param>
      <param name="z">Attaching point Z coord.</param>
      <param name="bitmap">Label image.</param>
      <param name="leaderColor">Color of the leader line</param>
      <param name="offset">Offset between the label and the attaching point</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.LeaderAndImage.#ctor(System.Double,System.Double,System.Double,System.Drawing.Bitmap,System.Drawing.Color,System.Int32,System.Int32,devDept.Geometry.Vector2D)">
      <summary>
            Standard constructor.
            </summary>
      <param name="x">Attaching point X coord.</param>
      <param name="y">Attaching point Y coord.</param>
      <param name="z">Attaching point Z coord.</param>
      <param name="bitmap">Label image.</param>
      <param name="leaderColor">Color of the leader line</param>
      <param name="hotspotX">Image hotspot X position</param>
      <param name="hotspotY">Image hotspot Y position</param>
      <param name="offset">Offset between the label and the attaching point</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.Labels.LeaderAndImage.Offset">
      <summary>
            Gets or sets the label screen offset from the 3D attaching point.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.LeaderAndImage.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Constructor for deserializing objects.
            </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance that defines the serialized data.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> instance that contains the serialized data.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.LeaderAndImage.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance with the data needed to serialize the target object.
            </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance that defines the serialized data.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> instance that contains the serialized data.</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Labels.Label">
      <summary>
            Base class for all labels.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.Label.ScaleForDPI">
      <summary>
            Scales the element for high DPI settings.
            </summary>
      <seealso cref="M:devDept.Geometry.UtilityEx.GetScalingLevel" />
      <remarks>This method needs to be called if the element is added outside of the InitializeComponents() to adjust the rendering for high dpi settings.</remarks>
    </member>
    <member name="F:devDept.Eyeshot.Control.Labels.Label.labelColor">
      <summary>
            Label color.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Labels.Label.Size">
      <summary>
            Gets the size of the label.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Labels.Label.Image">
      <summary>
            Gets the label image.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Labels.Label.RegenMode">
      <summary>
            Gets or sets the label regeneration mode.
            </summary>
      <seealso cref="M:devDept.Eyeshot.Control.Labels.LabelList.Regen" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Labels.Label.Alignment">
      <summary>
            Gets or sets the label align mode.
            </summary>
      <remarks>You need to call <see cref="M:devDept.Eyeshot.Control.Labels.LabelList.Regen" /> to apply the changes.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Labels.Label.Selected">
      <summary>
            Gets or sets the label selection status.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.Label.IsAnyInstanceSelected">
      <summary>
            Tells if the label is selected.
            </summary>
      <returns>True if the label is selected.</returns>
      <seealso cref="P:devDept.Eyeshot.Control.Labels.Label.Selected" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.Label.ClearSelectionForAllInstances">
      <summary>
            Clears the selection status.
            </summary>
      <seealso cref="P:devDept.Eyeshot.Control.Labels.Label.Selected" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.Label.IsSelected(System.Collections.Generic.Stack{devDept.Eyeshot.Entities.BlockReference})">
      <summary>
            Tells if the instance referred by the stack of parents is selected.
            </summary>
      <param name="parents">The parents stack that identifies the component instance</param>
      <returns>True if the instance is selected, false otherwise</returns>
    </member>
    <member name="P:devDept.Eyeshot.Control.Labels.Label.Selectable">
      <summary>
            Gets or sets the value that tells if the item can be selected.
            </summary>
      <seealso cref="!:Design.UpdateVisibleSelection" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.Label.#ctor(System.Drawing.Color)">
      <summary>
            Quick constructor, 3D attaching point is (0,0,0).
            </summary>
      <param name="color">A <see cref="P:devDept.Eyeshot.Control.Labels.Label.Color" /> structure that indicates the color of this label.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.Label.#ctor(System.Double,System.Double,System.Double,System.Drawing.Color)">
      <summary>
            Standard constructor.
            </summary>
      <param name="x">Anchor point's X coordinate</param>
      <param name="y">Anchor point's Y coordinate</param>
      <param name="z">Anchor point's Z coordinate</param>
      <param name="color">A <see cref="P:devDept.Eyeshot.Control.Labels.Label.Color" /> structure that indicates the color of this label</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.Label.#ctor(devDept.Geometry.Point3D,System.Drawing.Color)">
      <summary>
            Standard constructor.
            </summary>
      <param name="anchorPoint">Anchor point</param>
      <param name="color">A <see cref="P:devDept.Eyeshot.Control.Labels.Label.Color" /> structure that indicates the color of this label.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.Label.#ctor(devDept.Geometry.Point3D,System.Drawing.Color,System.Boolean)">
      <summary>
            Standard constructor.
            </summary>
      <param name="anchorPoint">Anchor point</param>
      <param name="color">A <see cref="P:devDept.Eyeshot.Control.Labels.Label.Color" /> structure that indicates the color of this label.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.Label.Dispose">
      <summary>
            Releases unmanaged resources.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.Label.UpdatePos(devDept.Graphics.RenderContextBase,System.Double[],System.Int32[])">
      <summary>
            Update label position on screen.
            </summary>
      <param name="renderContext">The render context </param>
      <param name="modelViewProj">The modelview projection matrix</param>
      <param name="viewFrame">The viewport rectangle in camera coordinates ([0,0] at bottom left)</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.Label.Regen(devDept.Graphics.RenderContextBase,System.Single)">
      <summary>
            Regenerates the label creating the internal data needed to draw the label.
            </summary>
      <param name="renderContext">The render context</param>
      <param name="drawScale">The drawing scale</param>
      <remarks>It must be called explicitly only for labels that are not in the <see cref="P:devDept.Eyeshot.Control.Viewport.Labels" /> list.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Labels.Label.Color">
      <summary>
            Gets or sets the label color.
            </summary>
      <remarks>You need to call <see cref="M:devDept.Eyeshot.Control.Labels.LabelList.Regen" /> to apply the changes.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Labels.Label.LabelData">
      <summary>
            Gets or sets the label custom data. If the type implements ICloneable it will be cloned when the Label is cloned.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Labels.Label.OnScreenPosition">
      <summary>
            Gets label position on screen.
            </summary>
      <remarks>This point is changed every time the end user ZoomPanRotate. The point coordinates refers to viewport <b>bottom</b>-left corner.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Labels.Label.AnchorPoint">
      <summary>
            Gets or sets the label anchor point.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.Label.IsClipped(devDept.Eyeshot.ClippingPlaneBase[])">
      <summary>
            Tells if a label is clipped by the clipping planes.
            </summary>
      <param name="planes">The clipping planes</param>
      <returns>True if the label anchor point is clipped by any one of the clipping planes</returns>
      <remarks>Override this to avoid that a label is clipped by the clipping planes</remarks>
      <seealso cref="P:devDept.Eyeshot.Control.Design.ClippingPlane1" />
      <seealso cref="P:devDept.Eyeshot.Control.Design.ClippingPlane2" />
      <seealso cref="P:devDept.Eyeshot.Control.Design.ClippingPlane3" />
      <seealso cref="P:devDept.Eyeshot.Control.Design.ClippingPlane4" />
      <seealso cref="P:devDept.Eyeshot.Control.Design.ClippingPlane5" />
      <seealso cref="P:devDept.Eyeshot.Control.Design.ClippingPlane6" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Labels.Label.Visible">
      <summary>
            If <b>false</b> the label is not drawn.
            </summary>
      <seealso cref="!:Design.UpdateVisibleSelection" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.Label.Draw(devDept.Graphics.RenderContextBase)">
      <summary>
            Standard draw method.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.Label.DrawSelected(devDept.Graphics.RenderContextBase)">
      <summary>
            Draw method for selected labels.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.Label.GetTexture(devDept.Graphics.RenderContextBase)">
      <summary>
            Gets the proper texture according to current selection status.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.Label.GetBitmap">
      <summary>
            Gets the proper image according to current selection status.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.Label.DrawGdi(System.Single,System.Single,System.Drawing.Graphics)">
      <summary>
            GDI draw method.
            </summary>
      <param name="drawScaleFactor">The draw scale factor</param>/
            <param name="lineWeightFactor">The factor applied to the line weight of the wire entities</param><param name="g">Active GDI+ drawing surface</param></member>
    <member name="M:devDept.Eyeshot.Control.Labels.Label.DrawWithOffset(devDept.Graphics.RenderContextBase,System.Int32,System.Int32)">
      <summary>
            Draws the label with an offset from attaching point.
            </summary>
      <param name="dx">Horizontal distance</param>
      <param name="dy">Vertical distance</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.Label.DrawWithOffsetGdi(System.Single,System.Single,System.Single,System.Drawing.Graphics)">
      <summary>
            Draws (GDI) the label with an offset from attaching point.
            </summary>
      <param name="dx">Horizontal distance</param>
      <param name="dy">Vertical distance</param>
      <param name="g">Active GDI+ drawing surface</param>
      <param name="scaleFactor">Scale factor</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.Label.ConvertToSurrogate">
      <summary>
            Converts the label to its surrogate, for serialization purpose.
            </summary>
      <returns>The label surrogate.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.Label.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Constructor for deserializing objects.
            </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance that defines the serialized data.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> instance that contains the serialized data.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.Label.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance with the data needed to serialize the target object.
            </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance that defines the serialized data.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> instance that contains the serialized data.</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Labels.LabelList">
      <summary>
            Label collection.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.LabelList.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.LabelList.#ctor(devDept.Eyeshot.Control.Viewport)">
      <summary>
            Constructor.
            </summary>
      <param name="viewport">The viewport this label list belong to</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.Labels.LabelList.Item(System.Int32)">
      <summary>
            Gets or sets the label at the specified index.
            </summary>
      <param name="index">The zero-based index of the label to get or set</param>
      <returns>The label at the specified index</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.LabelList.Remove(devDept.Eyeshot.Control.Labels.Label)">
      <summary>
            Removes the first occurrence of a specific label from this collection.
            </summary>
      <param name="item">The object to remove from this collection</param>
      <returns>True if label is successfully removed; otherwise, false. This method also
            returns false if label was not found in this collection.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.LabelList.RemoveAt(System.Int32)">
      <summary>
            Removes the label at the specified index of this collection.
            </summary>
      <param name="index">The zero-based index of the label to remove</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.LabelList.RemoveRange(System.Int32,System.Int32)">
      <summary>
            Removes a range of <see cref="T:devDept.Eyeshot.Control.Labels.Label">labels</see> from this collection.
            </summary>
      <param name="index">The zero-based starting index of the range of <see cref="T:devDept.Eyeshot.Control.Labels.Label">labels</see> to remove</param>
      <param name="count">The number of <see cref="T:devDept.Eyeshot.Control.Labels.Label">labels</see> to remove</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.LabelList.RemoveAll(System.Predicate{devDept.Eyeshot.Control.Labels.Label})">
      <summary>Removes all the labels that match the conditions defined by the specified predicate.</summary>
      <param name="match">The predicate delegate that defines the conditions of the labels to remove.</param>
      <returns>The number of elements removed from this collection.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> is null.</exception>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.LabelList.Regen">
      <summary>
            Regenerates only the labels that need it. Each label is automatically regenerated
            when added to the <see cref="P:devDept.Eyeshot.Control.Viewport.Labels" /> collection. 
            You need to call this function only when you modify a label <b>already</b> in
             this collection. 
            </summary>
      <seealso cref="P:devDept.Eyeshot.Control.Labels.Label.RegenMode" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.LabelList.CopySelection">
      <summary>
            Copies selected labels into the clipboard.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.LabelList.CutSelection">
      <summary>
            Cut selected labels into the clipboard.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.LabelList.Paste">
      <summary>
            Pastes copied labels from the clipboard.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.Labels.LeaderAndText">
      <summary>
            Leader and text label attached to a 3D point.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.LeaderAndText.#ctor(System.Double,System.Double,System.Double,System.String,System.Drawing.Font,System.Drawing.Color,devDept.Geometry.Vector2D)">
      <summary>
            Standard constructor.
            </summary>
      <param name="x">Attaching point X coord.</param>
      <param name="y">Attaching point Y coord.</param>
      <param name="z">Attaching point Z coord.</param>
      <param name="text">Label text</param>
      <param name="textFont">Text font</param>
      <param name="textColor">A <see cref="T:System.Drawing.Color" /> structure that indicates the color of this label</param>
      <param name="offset">Offset between the label and the attaching point</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.LeaderAndText.#ctor(devDept.Geometry.Point3D,System.String,System.Drawing.Font,System.Drawing.Color,devDept.Geometry.Vector2D)">
      <summary>
            Standard constructor.
            </summary>
      <param name="p">Attaching point coords.</param>
      <param name="text">Label text</param>
      <param name="textFont">Text font</param>
      <param name="textColor">A <see cref="T:System.Drawing.Color" /> structure that indicates the color of this label</param>
      <param name="offset">Offset between the label and the attaching point</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.LeaderAndText.#ctor(devDept.Geometry.Point3D,System.String,System.Drawing.Font,System.Drawing.Color,System.Int32,System.Int32)">
      <summary>
            Standard constructor.
            </summary>
      <param name="p">Attaching point coords.</param>
      <param name="text">Label text</param>
      <param name="textFont">Text font</param>
      <param name="textColor">A <see cref="T:System.Drawing.Color" /> structure that indicates the color of this label</param>
      <param name="offsetX">X Offset between the label and the attaching point</param>
      <param name="offsetY">Y Offset between the label and the attaching point</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.Labels.LeaderAndText.Offset">
      <summary>
            Gets or sets the label offset from the 3D attaching point.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.LeaderAndText.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Constructor for deserializing objects.
            </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance that defines the serialized data.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> instance that contains the serialized data.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.LeaderAndText.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance with the data needed to serialize the target object.
            </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance that defines the serialized data.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> instance that contains the serialized data.</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Labels.OutlinedText">
      <summary>
            Outlined text label.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.OutlinedText.#ctor(System.Double,System.Double,System.Double,System.String,System.Drawing.Font)">
      <summary>
            Standard constructor.
            </summary>
      <param name="x">Anchor point X coord.</param>
      <param name="y">Anchor point Y coord.</param>
      <param name="z">Anchor point Z coord.</param>
      <param name="text">Label text</param>
      <param name="textFont">Text font</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.OutlinedText.#ctor(System.Double,System.Double,System.Double,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.ContentAlignment)">
      <summary>
            Standard constructor.
            </summary>
      <param name="x">Anchor point X coord</param>
      <param name="y">Anchor point Y coord</param>
      <param name="z">Anchor point Z coord</param>
      <param name="text">Label text</param>
      <param name="textFont">Text font</param>
      <param name="textColor">A <see cref="T:System.Drawing.Color" /> structure that indicates the text color of this label</param>
      <param name="alignment">Text alignment</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.OutlinedText.#ctor(devDept.Geometry.Point3D,System.String,System.Drawing.Font,System.Drawing.Color)">
      <summary>
            Standard constructor.
            </summary>
      <param name="p">Anchor point</param>
      <param name="text">Label text</param>
      <param name="textFont">Text font</param>
      <param name="textColor">A <see cref="T:System.Drawing.Color" /> structure that indicates the text color of this label</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.OutlinedText.#ctor(devDept.Geometry.Point3D,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.ContentAlignment)">
      <summary>
        <see cref="T:devDept.Geometry.Point3D" /> constructor.
            </summary>
      <param name="p">Anchor point</param>
      <param name="text">Label text</param>
      <param name="textFont">Text font</param>
      <param name="textColor">A <see cref="T:System.Drawing.Color" /> structure that indicates the text color of this label</param>
      <param name="alignment">Text alignment</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.Labels.OutlinedText.OutlineColor">
      <summary>
            Gets or sets the outline color.
            </summary>
      <remarks>You need to call <see cref="M:devDept.Eyeshot.Control.Labels.LabelList.Regen" /> to apply the changes.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.OutlinedText.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Constructor for deserializing objects.
            </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance that defines the serialized data.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> instance that contains the serialized data.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.OutlinedText.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance with the data needed to serialize the target object.
            </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance that defines the serialized data.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> instance that contains the serialized data.</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Labels.TextOnly">
      <summary>
            Text only label.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.TextOnly.ScaleForDPI">
      <summary>
            Scales the element for high DPI settings.
            </summary>
      <seealso cref="M:devDept.Geometry.UtilityEx.GetScalingLevel" />
      <remarks>This method needs to be called if the element is added outside of the InitializeComponents() to adjust the rendering for high dpi settings.</remarks>
    </member>
    <member name="F:devDept.Eyeshot.Control.Labels.TextOnly.labelFillColor">
      <summary>
            Background color.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.TextOnly.#ctor(System.Double,System.Double,System.Double,System.String,System.Drawing.Font,System.Drawing.Color)">
      <summary>
            Individual anchor point coordinates constructor.
            </summary>
      <param name="x">Anchor point X coordinate</param>
      <param name="y">Anchor point Y coordinate</param>
      <param name="z">Anchor point Z coordinate</param>
      <param name="text">Label text</param>
      <param name="textFont">Text font</param>
      <param name="textColor">A <see cref="T:System.Drawing.Color" /> structure that indicates the text color of this label</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.TextOnly.#ctor(System.Double,System.Double,System.Double,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.ContentAlignment)">
      <summary>
            Text alignment constructor.
            </summary>
      <param name="x">Anchor point X coordinate</param>
      <param name="y">Anchor point Y coordinate</param>
      <param name="z">Anchor point Z coordinate</param>
      <param name="text">Label text</param>
      <param name="textFont">Text font</param>
      <param name="textColor">A <see cref="T:System.Drawing.Color" /> structure that indicates the text color of this label</param>
      <param name="alignment">Text alignment</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.TextOnly.#ctor(devDept.Geometry.Point3D,System.String,System.Drawing.Font,System.Drawing.Color)">
      <summary>
            3D point constructor.
            </summary>
      <param name="pt">Anchor point</param>
      <param name="text">Label text</param>
      <param name="textFont">Text font</param>
      <param name="textColor">A <see cref="T:System.Drawing.Color" /> structure that indicates the text color of this label</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.TextOnly.#ctor(devDept.Geometry.Point3D,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.ContentAlignment)">
      <summary>
            3D point and text alignment constructor.
            </summary>
      <param name="pt">Anchor point</param>
      <param name="text">Label text</param>
      <param name="textFont">Text font</param>
      <param name="textColor">A <see cref="T:System.Drawing.Color" /> structure that indicates the text color of this label</param>
      <param name="alignment">Text alignment</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.Labels.TextOnly.CornerRadius">
      <summary>
            Get or sets the corner radius of the label
            </summary>
      <remarks>Allowed values: 0 (sharp rectangle), 1, 2, 3.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Labels.TextOnly.Text">
      <summary>
            Gets or sets the label text.
            </summary>
      <remarks>You need to call <see cref="M:devDept.Eyeshot.Control.Labels.LabelList.Regen" /> to apply the changes.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Labels.TextOnly.Font">
      <summary>
            Gets or sets the label font.
            </summary>
      <remarks>You need to call <see cref="M:devDept.Eyeshot.Control.Labels.LabelList.Regen" /> to apply the changes.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Labels.TextOnly.Vertical">
      <summary>
            If true, the text will be drawn vertically.
            </summary>
      <remarks>You need to call <see cref="M:devDept.Eyeshot.Control.Labels.LabelList.Regen" /> to apply the changes.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Labels.TextOnly.FillColor">
      <summary>
            Gets or sets the label fill color.
            </summary>
      <remarks>Alpha channel is supported.</remarks>
      <remarks>You need to call <see cref="M:devDept.Eyeshot.Control.Labels.LabelList.Regen" /> to apply the changes.</remarks>
      <remarks>Use <see cref="F:System.Drawing.Color.Empty"> for no fill color.</see>/&gt;</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Labels.TextOnly.FillColorForSelection">
      <summary>
            Gets or sets the fill color used when the label is selected.
            </summary>
      <remarks>Alpha channel is supported.</remarks>
      <remarks>You need to call <see cref="M:devDept.Eyeshot.Control.Labels.LabelList.Regen" /> to apply the changes.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Labels.TextOnly.ColorForSelection">
      <summary>
            Gets or sets the color used when the label is selected.
            </summary>
      <remarks>Alpha channel is supported.</remarks>
      <remarks>You need to call <see cref="M:devDept.Eyeshot.Control.Labels.LabelList.Regen" /> to apply the changes.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.TextOnly.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Constructor for deserializing objects.
            </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance that defines the serialized data.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> instance that contains the serialized data.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Labels.TextOnly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance with the data needed to serialize the target object.
            </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance that defines the serialized data.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> instance that contains the serialized data.</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Mouse3D.ButtonEventHandler">
      <summary>
            Represents the method that will handle the <see cref="E:devDept.Eyeshot.Control.Workspace.Mouse3DButtonDown" /> or <see cref="E:devDept.Eyeshot.Control.Workspace.Mouse3DButtonUp" /> event.
            </summary>
      <param name="sender">The source of the event</param>
      <param name="e">The event data</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Mouse3D.MoveEventHandler">
      <summary>
            Represents the method that will handle the <see cref="E:devDept.Eyeshot.Control.Workspace.Mouse3DMove" /> event.
            </summary>
      <param name="sender">The source of the event</param>
      <param name="e">The event data</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Mouse3D.MoveEventArgs">
      <summary>
            Provides data for the <see cref="E:devDept.Eyeshot.Control.Workspace.Mouse3DMove" /> event.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Mouse3D.MoveEventArgs.TranslationVector">
      <summary>
            Gets or sets the translation vector.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Mouse3D.MoveEventArgs.RotationVector">
      <summary>
            Gets or sets the rotation vector.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Mouse3D.MoveEventArgs.DeviceInfo">
      <summary>
            Gets or sets the device information.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.Mouse3D.Button">
      <summary>
            A bitmask representing the state of the buttons of the Mouse 3D.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Mouse3D.Button.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>
            Standard constructor.
            </summary>
      <param name="b1">The first byte.</param>
      <param name="b2">The second byte.</param>
      <param name="b3">The third byte.</param>
      <param name="b4">The fourth byte.</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.Mouse3D.Button.Pressed">
      <summary>
            Gets a mask representing the pressed button.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.Mouse3D.DeviceInfo">
      <summary>
            Class with the device information.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Mouse3D.DeviceInfo.DeviceName">
      <summary>
            Gets or sets the device name.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Mouse3D.DeviceInfo.DeviceHandle">
      <summary>
            Gets or sets the device handle.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.Mouse3D.ButtonEventArgs">
      <summary>
            Provides data for the <see cref="E:devDept.Eyeshot.Control.Workspace.Mouse3DButtonDown" /> and <see cref="E:devDept.Eyeshot.Control.Workspace.Mouse3DButtonUp" /> event.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Mouse3D.ButtonEventArgs.Button">
      <summary>
            A bitmask representing the state of the buttons of the Mouse 3D
            sending the event.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Mouse3D.ButtonEventArgs.VirtualKey">
      <summary>
            The pressed virtual key.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Mouse3D.ButtonEventArgs.DeviceInfo">
      <summary>
            Device information of the Mouse 3D sending the event.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.Mouse3D.TranslationVector">
      <summary>
            Translation Vector from device.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Mouse3D.TranslationVector.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
            Per-component constructor.
            </summary>
      <param name="x">The x component.</param>
      <param name="y">The y component.</param>
      <param name="z">The z component.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Mouse3D.TranslationVector.#ctor(System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>
            Per-byte constructor.
            </summary>
      <param name="xl">Lower byte of the x component.</param>
      <param name="xh">Higher byte of the y component.</param>
      <param name="yl">Lower byte of the y component.</param>
      <param name="yh">Higher byte of the y component.</param>
      <param name="zl">Lower byte of the z component.</param>
      <param name="zh">Higher byte of the z component.</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.Mouse3D.TranslationVector.X">
      <summary>
            The x component.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Mouse3D.TranslationVector.Y">
      <summary>
            The y component.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Mouse3D.TranslationVector.Z">
      <summary>
            The z component.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.Mouse3D.RotationVector">
      <summary>
            Rotation Vector from device.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Mouse3D.RotationVector.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
            Per-component constructor.
            </summary>
      <param name="x">The x component.</param>
      <param name="y">The y component.</param>
      <param name="z">The z component.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Mouse3D.RotationVector.#ctor(System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>
            Per-byte constructor.
            </summary>
      <param name="xl">Lower byte of the x component.</param>
      <param name="xh">Higher byte of the y component.</param>
      <param name="yl">Lower byte of the y component.</param>
      <param name="yh">Higher byte of the y component.</param>
      <param name="zl">Lower byte of the z component.</param>
      <param name="zh">Higher byte of the z component.</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.Mouse3D.RotationVector.X">
      <summary>
            The x component.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Mouse3D.RotationVector.Y">
      <summary>
            The y component.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Mouse3D.RotationVector.Z">
      <summary>
            The z component.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.Mouse3D.virtualKey">
      <summary>
            A Mouse3D virtual key. Some keys already have a default behavior,
            while others can be freely programmed.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkInvalid">
      <summary>
            Represents an invalid button, or no button being pressed at all.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkMenu">
      <summary>
            The Menu Button.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkFit">
      <summary>
            The Fit Button.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkTop">
      <summary>
            The QuickView "Top view" Button.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkLeft">
      <summary>
            The QuickView "Left view" Button.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkRight">
      <summary>
            The QuickView "Right view" Button.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkFront">
      <summary>
            The QuickView "Front view" Button.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkBottom">
      <summary>
            The QuickView "Bottom view" Button.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkBack">
      <summary>
            The QuickView "Back view" Button.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkRollCw">
      <summary>
            The QuickView "Roll 90° Clockwise" Button.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkRollCcw">
      <summary>
            The QuickView "Roll 90° Anti-Clockwise" Button.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkIso1">
      <summary>
            The QuickView "Isometric View #1" Button. In the first isometric
            view, the front, right, and top views are visible.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkIso2">
      <summary>
            The QuickView "Isometric View #2" Button. In the second isometric
            view, the back, right, and bottom views are visible.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3Dk1">
      <summary>
            Programmable function button #1.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3Dk2">
      <summary>
            Programmable function button #2.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3Dk3">
      <summary>
            Programmable function button #3.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3Dk4">
      <summary>
            Programmable function button #4.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3Dk5">
      <summary>
            Programmable function button #5.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3Dk6">
      <summary>
            Programmable function button #6.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3Dk7">
      <summary>
            Programmable function button #7.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3Dk8">
      <summary>
            Programmable function button #8.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3Dk9">
      <summary>
            Programmable function button #9.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3Dk10">
      <summary>
            Programmable function button #10.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkEsc">
      <summary>
            The programmable "Esc" Keyboard Modifier.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkAlt">
      <summary>
            The programmable "Alt" Keyboard Modifier.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkShift">
      <summary>
            The programmable "Shift" Keyboard Modifier.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkCtrl">
      <summary>
            The programmable "Control" Keyboard Modifier.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkRotate">
      <summary>
            The Rotation Toggle Button. Pressing it once locks the rotation
            around all axes.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkPanzoom">
      <summary>
            The Pan/Zoom Toggle Button. Pressing it once disables the Mouse 3D.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkDominant">
      <summary>
            The Dominant Toggle Button. Pressing it once turns on the dominant
            filter axis, which restricts pan, zoom and rotations to a single
            axis at a time.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkPlus">
      <summary>
            A button for increasing the speed.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkMinus">
      <summary>
            A button for decreasing the speed.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkSpinCw">
      <summary>
            The QuickView "Spin 90° Clockwise" Button.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkSpinCcw">
      <summary>
            The QuickView "Spin 90° Counter-Clockwise" Button.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkTiltCw">
      <summary>
            The QuickView "Tilt 90° Clockwise" Button.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkTiltCcw">
      <summary>
            The QuickView "Tilt 90° Counter-Clockwise" Button.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkCustomView1Loader">
      <summary>
            Loads the first custom view.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkCustomView2Loader">
      <summary>
            Loads the second custom view.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkCustomView3Loader">
      <summary>
            Loads the third custom view.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkCustomView1Saver">
      <summary>
            Saves the current view as the first custom view.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkCustomView2Saver">
      <summary>
            Saves the current view as the second custom view.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkCustomView3Saver">
      <summary>
            Saves the current view as the third custom view.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.Mouse3D.virtualKey.V3DkUser">
      <summary>
            The first available code for the user's custom keys. Not
            implemented.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.MultiTouch.GestureHandler">
      <summary>
            Handles gesture events
            </summary>
      <remarks>
            The handler simplifies handling gesture such as rotate, zoom and pan 
            by keeping the requires knowledge of the previous and first event in 
            the gesture event sequence.  
            </remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.GestureHandler.SetHWndTouchInfo">
      <summary>
            Register the form to get gesture events
            </summary>
      <returns>true if succeeded</returns>
    </member>
    <member name="E:devDept.Eyeshot.Control.MultiTouch.GestureHandler.Begin">
      <summary>
            Indicate a that a gesture is beginning
            </summary>
    </member>
    <member name="E:devDept.Eyeshot.Control.MultiTouch.GestureHandler.End">
      <summary>
            Indicate an end of a gesture
            </summary>
    </member>
    <member name="E:devDept.Eyeshot.Control.MultiTouch.GestureHandler.PanBegin">
      <summary>
            Start the pannin sequence
            </summary>
    </member>
    <member name="E:devDept.Eyeshot.Control.MultiTouch.GestureHandler.Pan">
      <summary>
            Panning continue
            </summary>
            /// <remarks>
            Use the PanTranslation property of the event argument to get the
            relative translation size (relative to the last pan event) 
            </remarks></member>
    <member name="E:devDept.Eyeshot.Control.MultiTouch.GestureHandler.PanEnd">
      <summary>
            End pan event
            </summary>
    </member>
    <member name="E:devDept.Eyeshot.Control.MultiTouch.GestureHandler.PressAndTap">
      <summary>
            RollOver gesture event, this is a single event
            </summary>
    </member>
    <member name="E:devDept.Eyeshot.Control.MultiTouch.GestureHandler.RotateBegin">
      <summary>
            Starting rotate gesture 
            </summary>
    </member>
    <member name="E:devDept.Eyeshot.Control.MultiTouch.GestureHandler.Rotate">
      <summary>
            Continue rotating
            </summary>
      <remarks>
            Use the RotateAngle in the event argument to get the relative 
            rotation angle
            </remarks>
    </member>
    <member name="E:devDept.Eyeshot.Control.MultiTouch.GestureHandler.RotateEnd">
      <summary>
            Rotate end
            </summary>
    </member>
    <member name="E:devDept.Eyeshot.Control.MultiTouch.GestureHandler.TwoFingerTap">
      <summary>
            Two fingers tap event.
            </summary>
      <remarks>
            This is a single event
            </remarks>
    </member>
    <member name="E:devDept.Eyeshot.Control.MultiTouch.GestureHandler.ZoomBegin">
      <summary>
            Start zoom gesture
            </summary>
    </member>
    <member name="E:devDept.Eyeshot.Control.MultiTouch.GestureHandler.Zoom">
      <summary>
            Continue zooming
            </summary>
      <remarks>
            Use the ZoomFactor to know the relative zoom factor
            </remarks>
    </member>
    <member name="E:devDept.Eyeshot.Control.MultiTouch.GestureHandler.ZoomEnd">
      <summary>
            Zoom End event
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.GestureHandler.WindowProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
      <summary>
            The Windows message interception for gesture events handling
            </summary>
      <param name="hWnd">WndProc hWnd</param>
      <param name="msg">WndProc msg</param>
      <param name="wParam">WndProc wParam</param>
      <param name="lParam">WndProc lParam</param>
      <returns>WndProc return</returns>
    </member>
    <member name="T:devDept.Eyeshot.Control.MultiTouch.GestureEventArgs">
      <summary>
            Event arguments for all gesture events
            </summary>
      <remarks>
            Some of the properties are related to specific messages:
            Panning: PanTranslation
            Zooming: ZoomFactor
            Rotation: RotateAngle
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.GestureEventArgs.GestureId">
      <summary>
            The windows gesture id
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.GestureEventArgs.GestureArguments">
      <summary>
            the raw Gesture arguments
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.GestureEventArgs.Location">
      <summary>
            The gesture location translated into client area
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.GestureEventArgs.IsBegin">
      <summary>
            The first event of a gesture
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.GestureEventArgs.IsEnd">
      <summary>
            The last event of a gesture
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.GestureEventArgs.IsInertia">
      <summary>
            The gesture has triggered inertia
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.GestureEventArgs.RotateAngle">
      <summary>
            The relative rotation angle, used by the Rotate event
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.GestureEventArgs.Center">
      <summary>
            The calculated gesture center
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.GestureEventArgs.ZoomFactor">
      <summary>
            The zoom factor, used by the Zoom event
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.GestureEventArgs.PanTranslation">
      <summary>
            The relative panning translation, used by the Pan event
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.GestureEventArgs.PanVelocity">
      <summary>
            The velocity vector of the pan gesture, can be used for custom inertia
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.GestureEventArgs.LastBeginEvent">
      <summary>
            The first gesture in this gesture event sequence
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.GestureEventArgs.LastEvent">
      <summary>
            The last gesture in this gesture event sequence
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.MultiTouch.IHwndWrapper">
      <summary>
            Wrapp HWND source such as System.Windows.Forms.Control, or System.Windows.Window
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.IHwndWrapper.Handle">
      <summary>
            The Underline Windows Handle
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.IHwndWrapper.Source">
      <summary>
            The .NET object that wrap the Windows Handle (WinForm, WinForm Control, WPF Window, IntPtr of HWND)
            </summary>
    </member>
    <member name="E:devDept.Eyeshot.Control.MultiTouch.IHwndWrapper.HandleCreated">
      <summary>
            The Win32 Handle has been created
            </summary>
    </member>
    <member name="E:devDept.Eyeshot.Control.MultiTouch.IHwndWrapper.HandleDestroyed">
      <summary>
            /// The Win32 Handle has been destroyed
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.IHwndWrapper.IsHandleCreated">
      <summary>
            Check if the Win32 Handle is already created
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.IHwndWrapper.PointToClient(System.Drawing.Point)">
      <summary>
            Computes the location of the specified screen point into client coordinates
            </summary>
      <param name="point">The screen coordinate System.Drawing.Point to convert</param>
      <returns>A point that represents the converted point in client coordinates</returns>
    </member>
    <member name="T:devDept.Eyeshot.Control.MultiTouch.IGUITimer">
      <summary>
            A Common interface foir timer.
            The timer has to be in the UI thread context
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.IGUITimer.Enabled">
      <summary>
            Gets or sets whether the timer is running.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.IGUITimer.Interval">
      <summary>
            Gets or sets the time, in milliseconds, before the Tick event is raised
            </summary>
    </member>
    <member name="E:devDept.Eyeshot.Control.MultiTouch.IGUITimer.Tick">
      <summary>
              Occurs when the specified timer interval has elapsed and the timer is enabled.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.IGUITimer.Start">
      <summary>
            Starts the timer.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.IGUITimer.Stop">
      <summary>
            Stops the timer.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.MultiTouch.Handler">
      <summary>
            Base class for handling Gesture and Touch event
            </summary>
      <remarks>
            A form can have one handler, either touch handler or gesture handler. 
            The form need to create the handler and register to events. 
            The code is not thread safe, we assume that the calling thread is the 
            UI thread. There is no blocking operation in the code.
            </remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Handler.SetHWndTouchInfo">
      <summary>
            Initiate touch support for the underline hWnd 
            </summary>
      <remarks>Registering the hWnd to touch support or configure the hWnd to receive gesture messages</remarks>
      <returns>true if succeeded</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Handler.WindowProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
      <summary>
            The interceptor WndProc
            </summary>
      <param name="hWnd">WndProc hWnd</param>
      <param name="msg">WndProc msg</param>
      <param name="wparam">WndProc wParam</param>
      <param name="lparam">WndProc lPara</param>
      <returns>WndProc return</returns>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Handler.ControlHandle">
      <summary>
            The registered control's handler
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Handler.DpiX">
      <summary>
            The X DPI of the target window
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Handler.DpiY">
      <summary>
            The Y DPI of the target window
            </summary>
    </member>
    <member name="E:devDept.Eyeshot.Control.MultiTouch.Handler.GestureNotify">
      <summary>
             GestureNotify event notifies a window that gesture recognition is
              in progress and a gesture will be generated if one is recognized under the
              current gesture settings.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.MultiTouch.Handler.DigitizerCapabilities">
      <summary>
            Report digitizer capabilities
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Handler.DigitizerCapabilities.Status">
      <summary>
            Get the current Digitizer Status
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Handler.DigitizerCapabilities.MaxumumTouches">
      <summary>
            Get the maximum touches capability
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Handler.DigitizerCapabilities.IsIntegratedTouch">
      <summary>
            Check for integrated touch support
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Handler.DigitizerCapabilities.IsExternalTouch">
      <summary>
            Check for external touch support
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Handler.DigitizerCapabilities.IsIntegratedPan">
      <summary>
            Check for Pen support
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Handler.DigitizerCapabilities.IsExternalPan">
      <summary>
            Check for external Pan support
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Handler.DigitizerCapabilities.IsMultiInput">
      <summary>
            Check for multi-input
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Handler.DigitizerCapabilities.IsStackReady">
      <summary>
            Check if touch device is ready
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Handler.DigitizerCapabilities.IsMultiTouchReady">
      <summary>
            Check if Multi-touch support device is ready
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Handler.IsTouchWindows(System.IntPtr)">
      <summary>
            Check if the Window is registered for multitouch events
            </summary>
      <param name="hWnd">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:devDept.Eyeshot.Control.MultiTouch.GestureNotifyEventArgs">
      <summary>
             GestureNotify event notifies a window that gesture recognition is
              in progress and a gesture will be generated if one is recognized under the
              current gesture settings.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.GestureNotifyEventArgs.Location">
      <summary>
            The gesture location
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.GestureNotifyEventArgs.TargetHwnd">
      <summary>
            The gesture target window
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.MultiTouch.DigitizerStatus">
      <summary>
            All availible digitizer capabilities
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationInertiaProcessor">
      <summary>
            A manipulation processor that support Inertia processing
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationInertiaProcessor.#ctor(devDept.Eyeshot.Control.MultiTouch.Manipulation.ProcessorManipulations,devDept.Eyeshot.Control.MultiTouch.IGUITimer)">
      <summary>
            Create new manipulation processor
            </summary>
      <remarks>
            Call the <see cref="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.ProcessDown(System.UInt32,System.Drawing.PointF)" />, <see cref="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.ProcessMove(System.UInt32,System.Drawing.PointF)" />, <see cref="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.ProcessUp(System.UInt32,System.Drawing.PointF)" /> to feed the processor.
            Register on <see cref="E:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.ManipulationStarted" />, <see cref="E:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.ManipulationDelta" /> and <see cref="E:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.ManipulationCompleted" />
            to handle manipulation events
            Set the <see cref="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationInertiaProcessor.InertiaProcessor" /> properties to get the desired inertia behavior
            Register to the <see cref="E:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationInertiaProcessor.BeforeInertia" /> event to set the inertia properties when inertia is starting/&gt;
            </remarks>
      <param name="supportedManipulations">Activate specific manipulation (scale, translate, rotate)</param>
      <param name="timer">The GUI timer that will be used for inertia events</param>
    </member>
    <member name="E:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationInertiaProcessor.BeforeInertia">
      <summary>
            Fired just before inertia is starting
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationInertiaProcessor.Dispose(System.Boolean)">
      <summary>
            Release the underline COM object
            </summary>
      <param name="dispose">
      </param>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationInertiaProcessor.InertiaProcessor">
      <summary>
            The inertia processor that is associate with the Manipulation Processor
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.MultiTouch.Manipulation.InertiaProcessor">
      <summary>
            The Inertia Processor
            </summary>
      <remarks>Handles calculations regarding object motion for multitouch</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.InertiaProcessor.MaxInertiaSteps">
      <summary>
            After this amount of timer ticks, the Inertia will stop
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.InertiaProcessor.InertiaTimerInterval">
      <summary>
            The timer resolution for inertia events
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.InertiaProcessor.InInertia">
      <summary>
            True when the inertia processor generate inertia motion events
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.InertiaProcessor.InitialVelocity">
      <summary>
            Specifies the initial movement of the target object
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.InertiaProcessor.InitialAngularVelocity">
      <summary>
            Specifies the rotation of the target when movement begins
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.InertiaProcessor.InitialExpansionVelocity">
      <summary>
            Specifies the expention of the target when movement begins
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.InertiaProcessor.InitialRadius">
      <summary>
            Specifies the distance from the edge of the target to its center before the object was changed
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.InertiaProcessor.Boundary">
      <summary>
            Limits how far towards the edge of the screen the target object can move
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.InertiaProcessor.ElasticMargin">
      <summary>
            Specifies the rectangle region for bouncing the target objec
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.InertiaProcessor.DesiredDisplacement">
      <summary>
            Specifies the desired distance that the object will travel
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.InertiaProcessor.DesiredRotation">
      <summary>
            Specifies the desired radians that the object will rotate
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.InertiaProcessor.DesiredExpansion">
      <summary>
            Specifies the desired change in the object's average radius
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.InertiaProcessor.DesiredDeceleration">
      <summary>
            Specifies the desired rate at which translation operations will decelerate
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.InertiaProcessor.DesiredAngularDeceleration">
      <summary>
            Specifies the desired rate that the target object will stop spinning in radians per msec
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.InertiaProcessor.DesiredExpansionDeceleration">
      <summary>
            Specifies the rate at which the object will stop expanding
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.InertiaProcessor.Dispose">
      <summary>
            Dispose the object and release the underline COM object
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.MultiTouch.Manipulation.BeforeInertiaEventArgs">
      <summary>
            Before Inertia phase is starting
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.MultiTouch.Manipulation.BeforeInertiaEventArgs.CancelInertia">
      <summary>
            Cancel Inertia by setting this property to true
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.MultiTouch.Manipulation.ProcessorManipulations">
      <summary>
            Manipulation Flags.
            Enables Manipulation Support
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.MultiTouch.Manipulation.ProcessorManipulations.NONE">
      <summary>
            Disable manipulation events
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.MultiTouch.Manipulation.ProcessorManipulations.TRANSLATE_X">
      <summary>
            X axis translation events
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.MultiTouch.Manipulation.ProcessorManipulations.TRANSLATE_Y">
      <summary>
            Y Axis translation events
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.MultiTouch.Manipulation.ProcessorManipulations.SCALE">
      <summary>
            Scaling events
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.MultiTouch.Manipulation.ProcessorManipulations.ROTATE">
      <summary>
            Rotation events
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.MultiTouch.Manipulation.ProcessorManipulations.ALL">
      <summary>
            Fire all manipulation events
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF">
      <summary>
            Utility class for vector manipulations
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF.#ctor(System.Single,System.Single)">
      <summary>
            Create new float vector
            </summary>
      <param name="x">X direction</param>
      <param name="y">Y Direction</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF.ToString">
      <summary>
            (x,y)
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF.Equals(System.Object)">
      <summary>
            Check if two vectors are equal
            </summary>
      <param name="obj">the second vector</param>
      <returns>true if they are equal</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF.GetHashCode">
      <summary>
            Return the Vector hash code
            </summary>
      <returns>Hash Code</returns>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF.X">
      <summary>
            The X direction
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF.Y">
      <summary>
            The Y Direction
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF.op_Implicit(devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF)~System.Drawing.Size">
      <summary>
            Convert vector to Size
            </summary>
      <param name="vector">The Vector</param>
      <returns>The vector as Size</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF.op_Implicit(devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF)~System.Drawing.SizeF">
      <summary>
            Convert Vector to SizeF
            </summary>
      <param name="vector">The Vector</param>
      <returns>The vector as SizeF</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF.op_Implicit(System.Drawing.Size)~devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF">
      <summary>
            Convert Size to vector
            </summary>
      <param name="size">The size</param>
      <returns>The size as vector</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF.op_Implicit(System.Drawing.SizeF)~devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF">
      <summary>
            Convert SizeF to Vector
            </summary>
      <param name="size">The Size</param>
      <returns>The Size as Vector</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF.op_Multiply(devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF,System.Single)">
      <summary>
            Multiply the vector with scalar (float)
            </summary>
      <param name="vector">The source vector</param>
      <param name="value">The floating point scalar</param>
      <returns>New vector</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF.op_Division(devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF,System.Single)">
      <summary>
            Divide Vector with scalar (float)
            </summary>
      <param name="vector">The Vector</param>
      <param name="value">The scalar</param>
      <returns>New Vector</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF.op_Addition(devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF,System.Single)">
      <summary>
            Add scalar to a vector
            </summary>
      <param name="vector">The Vector</param>
      <param name="value">The scalar</param>
      <returns>New vector</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF.op_Subtraction(devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF,System.Single)">
      <summary>
            Substruct Scalar from vector
            </summary>
      <param name="vector">The vector</param>
      <param name="value">The scalar</param>
      <returns>New vector</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF.op_Addition(devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF,devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF)">
      <summary>
            Add two vectors
            </summary>
      <param name="v1">V1</param>
      <param name="v2">V2</param>
      <returns>New Vector</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF.op_Subtraction(devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF,devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF)">
      <summary>
            Substruct two vectors
            </summary>
      <param name="v1">V1</param>
      <param name="v2">V2</param>
      <returns>New Vector</returns>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF.Magnitude">
      <summary>
            Return the magnitude (normal) of a vector
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.VectorF.Direction">
      <summary>
            Return the unit vector
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationStartedEventArgs">
      <summary>
            Argument for manipulatiuon start event
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationStartedEventArgs.#ctor(System.Single,System.Single)">
      <summary>
            Argument for touch event location
            </summary>
      <param name="x">The x Axis</param>
      <param name="y">The y Axis</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationStartedEventArgs.Location">
      <summary>
            This location is usually the center point
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationCompletedEventArgs">
      <summary>
            The argument for manipulation complete event
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationCompletedEventArgs.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Create new ManipulationCompletedEventArgs
            </summary>
      <param name="x">x Axis</param>
      <param name="y">y Axis</param>
      <param name="cumulativeTranslationX">Cumulative Translation in the X Axis since starting manipulation</param>
      <param name="cumulativeTranslationY">Cumulative Translation in the Y Axis since starting manipulation</param>
      <param name="cumulativeScale">Cumulative scaling since starting manipulation</param>
      <param name="cumulativeExpansion">Cumulative Expension since starting manipulation</param>
      <param name="cumulativeRotation">Cumulative rotation in radians since starting manipulation</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationCompletedEventArgs.CumulativeTranslation">
      <summary>
            Total translation
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationCompletedEventArgs.CumulativeScale">
      <summary>
            Total Scaling
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationCompletedEventArgs.CumulativeExpansion">
      <summary>
            Total Extension
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationCompletedEventArgs.CumulativeRotation">
      <summary>
            Total Rotation
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationDeltaEventArgs">
      <summary>
            The argument for manipulation delta
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationDeltaEventArgs.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
      </summary>
      <param name="x">x Axis</param>
      <param name="y">y Axis</param>
      <param name="translationDeltaX">The amount of translation since the last event</param>
      <param name="translationDeltaY">The amount of translation since the last event</param>
      <param name="scaleDelta">The amount of scaling since the last event</param>
      <param name="expansionDelta">The amount of expension since the last event</param>
      <param name="rotationDelta">The amount of rotation in radians since the last event</param>
      <param name="cumulativeTranslationX">Cumulative Translation in the X Axis since starting manipulation</param>
      <param name="cumulativeTranslationY">Cumulative Translation in the Y Axis since starting manipulation</param>
      <param name="cumulativeScale">Cumulative scaling since starting manipulation</param>
      <param name="cumulativeExpansion">Cumulative Expension since starting manipulation</param>
      <param name="cumulativeRotation">Cumulative rotation in radians since starting manipulation</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationDeltaEventArgs.TranslationDelta">
      <summary>
            The amount of translation since the last event
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationDeltaEventArgs.ScaleDelta">
      <summary>
            The amount of scaling since the last event
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationDeltaEventArgs.ExpansionDelta">
      <summary>
            The amount of expension since the last event
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationDeltaEventArgs.RotationDelta">
      <summary>
            The amount of rotation since the last event
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor">
      <summary>
            A .NET wrapper for touch manipulation processing
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.#ctor(devDept.Eyeshot.Control.MultiTouch.Manipulation.ProcessorManipulations)">
      <summary>
            Create new manipulation processor
            </summary>
      <remarks>
            Call the <see cref="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.ProcessDown(System.UInt32,System.Drawing.PointF)" />, <see cref="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.ProcessMove(System.UInt32,System.Drawing.PointF)" />, <see cref="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.ProcessUp(System.UInt32,System.Drawing.PointF)" /> to feed the processor.
            Register on <see cref="E:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.ManipulationStarted" />, <see cref="E:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.ManipulationDelta" /> and <see cref="E:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.ManipulationCompleted" />
            to handle manipulation events
            </remarks>
      <param name="supportedManipulations">Activate specific manipulation (scale, translate, rotate)</param>
    </member>
    <member name="E:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.ManipulationStarted">
      <summary>
            Fired when manipulation is started
            </summary>
    </member>
    <member name="E:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.ManipulationDelta">
      <summary>
            Fired each time the processor had figured a change in one or more of the required manipulations
            </summary>
    </member>
    <member name="E:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.ManipulationCompleted">
      <summary>
            Fired on manipulation end
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.SupportedManipulations">
      <summary>
            Gets or sets the required manipulation
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.PivotPoint">
      <summary>
            The Center of the object
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.PivotRadius">
      <summary>
            The PivotRadius property is used to determine how much rotation is used in single finger manipulation
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.CompleteManipulation">
      <summary>
            This method raises the ManipulationCompleted() event in response
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.ProcessDown(System.UInt32,System.Drawing.PointF)">
      <summary>
            The ProcessDown method feeds data to the manipulation processor associated with a target
            </summary>
      <param name="manipulationId">The identifier for the manipulation that you want to process</param>
      <param name="location">The coordinates associated with the target</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.ProcessMove(System.UInt32,System.Drawing.PointF)">
      <summary>
            The ProcessMove method feeds movement data for the target object to its manipulation processor
            </summary>
      <param name="manipulationId">The identifier for the manipulation that you want to process</param>
      <param name="location">The coordinates associated with the target</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.ProcessUp(System.UInt32,System.Drawing.PointF)">
      <summary>
            The ProcessUp method feeds data to a target's manipulation processor for touch up sequences
            </summary>
      <param name="manipulationId">The identifier for the manipulation that you want to process</param>
      <param name="location">The coordinates associated with the target</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.ProcessDownWithTime(System.UInt32,System.Drawing.PointF,System.Int32)">
      <summary>
            Feds data to the manipulation processor associated with a target and a timestamp
            </summary>
      <param name="manipulationId">The identifier for the manipulation that you want to process</param>
      <param name="location">The coordinates associated with the target</param>
      <param name="timestamp">The timestamp of the event</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.ProcessMoveWithTime(System.UInt32,System.Drawing.PointF,System.Int32)">
      <summary>
            Feds data to the manipulation processor associated with a target and a timestamp
            </summary>
      <param name="manipulationId">The identifier for the manipulation that you want to process</param>
      <param name="location">The coordinates associated with the target</param>
      <param name="timestamp">The timestamp of the event</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.ProcessUpWithTime(System.UInt32,System.Drawing.PointF,System.Int32)">
      <summary>
            Feds data to the manipulation processor associated with a target and a timestamp
            </summary>
      <param name="manipulationId">The identifier for the manipulation that you want to process</param>
      <param name="location">The coordinates associated with the target</param>
      <param name="timestamp">The timestamp of the event</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.Velocity">
      <summary>
            Calculates and returns the velocity for the target object
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.ExpansionVelocity">
      <summary>
            Calculates the rate that the target object is expanding at
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.AngularVelocity">
      <summary>
            Calculates the rotational velocity that the target object is moving at
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.MinimumScaleRotateRadius">
      <summary>
            Specifies the minimum scale and rotate radius
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.Dispose(System.Boolean)">
      <summary>
            Release the underlined COM Object
            </summary>
      <param name="dispose">
      </param>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Manipulation.ManipulationProcessor.Dispose">
      <summary>
            Dispose the object, free the underline COM object
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.MultiTouch.MultiTouchEventHandler">
      <summary>
            Represents the method that will handle the multitouch events.
            </summary>
      <param name="sender">The source of the event</param>
      <param name="e">The event data</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.MultiTouch.TouchHandler">
      <summary>
            Handles touch events for a hWnd
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.TouchHandler.ParentWF">
      <summary>
            WinForms parent workspace. Null when the workspace is Wpf Native.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.TouchHandler.DisablePalmRejection">
      <summary>
            Enabling this flag disables palm rejection
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.TouchHandler.SetHWndTouchInfo">
      <summary>
            Register for touch event
            </summary>
      <returns>true if succeeded</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.TouchHandler.WindowProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
      <summary>
            Intercept and fire touch events
            </summary>
      <param name="hWnd">The Windows Handle</param>
      <param name="msg">Windows Message</param>
      <param name="wparam">wParam</param>
      <param name="lparam">lParam</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.MultiTouch.TouchEventArgs">
      <summary>
            EventArgs passed to Touch handlers 
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.TouchEventArgs.Location">
      <summary>
            Touch client coordinate in pixels
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.TouchEventArgs.Id">
      <summary>
            A touch point identifier that distinguishes a particular touch input
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.TouchEventArgs.Flags">
      <summary>
            A set of bit flags that specify various aspects of touch point
            press, release, and motion. 
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.TouchEventArgs.Mask">
      <summary>
            mask which fields in the structure are valid
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.TouchEventArgs.AbsoluteTime">
      <summary>
            touch event time
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.TouchEventArgs.Time">
      <summary>
            touch event time from system up
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.TouchEventArgs.ContactSize">
      <summary>
            the size of the contact area in pixels
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.TouchEventArgs.IsPrimaryContact">
      <summary>
            Is Primary Contact (The first touch sequence)
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.TouchEventArgs.IsTouchMove">
      <summary>
            Specifies that movement occurred
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.TouchEventArgs.IsTouchDown">
      <summary>
            Specifies that the corresponding touch point was established through a new contact
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.TouchEventArgs.IsTouchUp">
      <summary>
            Specifies that a touch point was removed
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.TouchEventArgs.IsTouchInRange">
      <summary>
            Specifies that a touch point is in range
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.TouchEventArgs.IsTouchNoCoalesce">
      <summary>
            specifies that this input was not coalesced.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.TouchEventArgs.IsTouchPen">
      <summary>
            Specifies that the touch point is associated with a pen contact
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouch.TouchEventArgs.IsTouchPalm">
      <summary>
            The touch event came from the user's palm
            </summary>
      <remarks>Set <see cref="P:devDept.Eyeshot.Control.MultiTouch.TouchHandler.DisablePalmRejection" /> to true</remarks>
    </member>
    <member name="T:devDept.Eyeshot.Control.MultiTouch.Interop.TOUCHINPUT">
      <summary>
            Touch API defined structures [winuser.h]
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.MultiTouch.Interop.POINTS">
      <summary>
            A Simple POINTS Interop structure
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.MultiTouch.Interop.POINT">
      <summary>
            A Simple POINT Interop structure
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.MultiTouch.Interop.GESTURECONFIG">
      <summary>
            Gesture Config Interop Structure
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.MultiTouch.Interop.GESTUREINFO">
      <summary>
            Gesture Info Interop Structure
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.MultiTouch.Win32Helper.Factory">
      <summary>
            A factory that creates touch or gesture handler for a HWnd based Window
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouch.Win32Helper.Factory.CreateHandler``1(System.IntPtr)">
      <summary>
             A factory that creates touch or gesture handler for a HWnd based Window
            </summary>
      <remarks>We use factory to ensure that only one handler will be created for a window, since Gesture and Touch are mutually exclusive</remarks>
      <typeparam name="T">The handler type</typeparam>
      <param name="hWnd">The Windows handle that need touch or gesture events</param>
      <returns>TouchHandler or Gesture Handler</returns>
    </member>
    <member name="T:devDept.Eyeshot.Control.BorderSettings">
      <summary>
            Viewport border settings.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.BorderSettings.Color">
      <summary>
            Gets or sets the color.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.BorderSettings.Visible">
      <summary>
            Gets or sets visibility status.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.BorderSettings.CornerRadius">
      <summary>
            Gets or sets the corner radius.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.BorderSettings.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.BorderSettings.#ctor(System.Drawing.Color,System.Int32,System.Boolean)">
      <summary>Standard constructor.</summary>
      <param name="color">Border's color</param>
      <param name="cornerRadius">Border's corner radius</param>
      <param name="visible">Border's visibility status</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.EnumDescription">
      <summary>
            EnumConverter supporting System.ComponentModel.DescriptionAttribute
            </summary>
      <exclude />
      <excludetoc />
    </member>
    <member name="M:devDept.Eyeshot.Control.EnumDescription.GetDescription(System.Enum)">
      <summary>
            Gets Enum Value's Description Attribute
            </summary>
      <param name="value">The value you want the description attribute for</param>
      <returns>The description, if any, else it's .ToString()</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.EnumDescription.GetDescription(System.Type,System.String)">
      <summary>
            Gets the description for certaing named value in an Enumeration
            </summary>
      <param name="value">The type of the Enumeration</param>
      <param name="name">The name of the Enumeration value</param>
      <returns>The description, if any, else the passed name</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.EnumDescription.GetValue(System.Type,System.String)">
      <summary>
            Gets the value of an Enum, based on it's Description Attribute or named value
            </summary>
      <param name="value">The Enum type</param>
      <param name="description">The description or name of the element</param>
      <returns>The value, or the passed in description, if it was not found</returns>
    </member>
    <member name="T:devDept.Eyeshot.Control.mouseButtonsZPR">
      <summary>
            Mouse buttons and their combinations for Zoom / Pan / Rotate.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.mouseButtonsZPR.None">
      <summary>
            None mouse button.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.mouseButtonsZPR.Left">
      <summary>
            Left mouse button.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.mouseButtonsZPR.Right">
      <summary>
            Right mouse button.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.mouseButtonsZPR.Middle">
      <summary>
            Middle mouse button.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.mouseButtonsZPR.XButton1">
      <summary>
            Xbutton1.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.mouseButtonsZPR.XButton2">
      <summary>
            XButton2.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.mouseButtonsZPR.LeftRight">
      <summary>
            Left + Right mouse buttons.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.mouseButtonsZPR.LeftMiddle">
      <summary>
            Left + Middle mouse buttons.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.mouseButtonsZPR.MiddleRight">
      <summary>
            Middle + Right mouse buttons.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.mouseButtonsZPR.LeftMiddleRight">
      <summary>
            Left + Middle + Right mouse buttons.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.modifierKeys">
      <summary>
            ModifierKeys and their combinations.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.modifierKeys.None">
      <summary>
            None key.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.modifierKeys.Shift">
      <summary>
            Shift key.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.modifierKeys.Alt">
      <summary>
            Alt key.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.modifierKeys.Ctrl">
      <summary>
            Ctrl key.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.modifierKeys.CtrlAlt">
      <summary>
            Ctrl + Alt keys.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.modifierKeys.CtrlShift">
      <summary>
            Ctrl + Shift keys.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.modifierKeys.ShiftAlt">
      <summary>
            Ctrl + Alt keys.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.modifierKeys.CtrlShiftAlt">
      <summary>
            Ctrl + Shift + Alt keys.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.cursorType">
      <summary>
            Cursor types
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.Default">
      <summary>
            The default cursor, which is usually an arrow cursor.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.ZoomWindow">
      <summary>
            The cursor that appears when the zoom window action mode is enabled.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.Zoom">
      <summary>
            The cursor that appears when the zoom action mode is enabled.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.Pan">
      <summary>
            The cursor that appears when the pan action mode is enabled.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.Rotate">
      <summary>
            The cursor that appears when the rotate action mode is enabled.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.Pick">
      <summary>
            The cursor that appears when the selection by pick is enabled.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.Cross">
      <summary>
            The crosshair cursor.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.Arrow">
      <summary>
            The arrow cursor.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.Hand">
      <summary>
            The hand cursor.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.Help">
      <summary>
            The Help cursor, which is a combination of an arrow and a question mark.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.AppStarting">
      <summary>
            The cursor that appears when an application starts.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.IBeam">
      <summary>
            The I-beam cursor, which is used to show where the text cursor appears when the mouse is clicked.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.No">
      <summary>
            The cursor that indicates that a particular region is invalid for the current operation.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.UpArrow">
      <summary>
            The up arrow cursor, typically used to identify an insertion point.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.Wait">
      <summary>
            The wait cursor, typically an hourglass shape.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.PanEast">
      <summary>
            The cursor that appears during wheel operations when the mouse is moving and the window is scrolling horizontally to the right.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.ScrollE">
      <summary>
            The cursor that appears during wheel operations when the mouse is moving and the window is scrolling horizontally to the right.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.PanNE">
      <summary>
            The cursor that appears during wheel operations when the mouse is moving and the window is scrolling horizontally and vertically upward and to the right.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.ScrollNE">
      <summary>
            The cursor that appears during wheel operations when the mouse is moving and the window is scrolling horizontally and vertically upward and to the right.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.PanNorth">
      <summary>
            The cursor that appears during wheel operations when the mouse is moving and the window is scrolling vertically in an upward direction.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.ScrollN">
      <summary>
            The cursor that appears during wheel operations when the mouse is moving and the window is scrolling vertically in an upward direction.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.PanNW">
      <summary>
            The cursor that appears during wheel operations when the mouse is moving and the window is scrolling horizontally and vertically upward and to the left.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.ScrollNW">
      <summary>
            The cursor that appears during wheel operations when the mouse is moving and the window is scrolling horizontally and vertically upward and to the left.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.PanSE">
      <summary>
            The cursor that appears during wheel operations when the mouse is moving and the window is scrolling horizontally and vertically downward and to the right.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.ScrollSE">
      <summary>
            The cursor that appears during wheel operations when the mouse is moving and the window is scrolling horizontally and vertically downward and to the right.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.PanSouth">
      <summary>
            The cursor that appears during wheel operations when the mouse is moving and the window is scrolling vertically in a downward direction.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.ScrollSouth">
      <summary>
            The cursor that appears during wheel operations when the mouse is moving and the window is scrolling vertically in a downward direction.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.PanSW">
      <summary>
            The cursor that appears during wheel operations when the mouse is moving and the window is scrolling horizontally and vertically downward and to the left.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.ScrollSW">
      <summary>
            The cursor that appears during wheel operations when the mouse is moving and the window is scrolling horizontally and vertically downward and to the left.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.PanWest">
      <summary>
            The cursor that appears during wheel operations when the mouse is moving and the window is scrolling horizontally to the left.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.ScrollW">
      <summary>
            The cursor that appears during wheel operations when the mouse is moving and the window is scrolling horizontally to the left.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.SizeAll">
      <summary>
            The four-headed sizing cursor, which consists of four joined arrows that point north, south, east, and west.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.SizeNESW">
      <summary>
            The two-headed diagonal (northeast/southwest) sizing cursor.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.SizeNS">
      <summary>
            The two-headed vertical (north/south) sizing cursor.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.SizeNWSE">
      <summary>
            The two-headed diagonal (northwest/southeast) sizing cursor.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.cursorType.SizeWE">
      <summary>
            The two-headed horizontal (west/east) sizing cursor.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.MouseButton">
      <summary>MouseButton class.</summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.MouseButton.#ctor(System.Windows.Forms.MouseButtons,devDept.Eyeshot.Control.modifierKeys)">
      <summary>Constructor.
            </summary>
      <param name="button">The mouse button</param>
      <param name="modifierKey">The modifier key</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.MouseButton.#ctor(devDept.Eyeshot.Control.mouseButtonsZPR,devDept.Eyeshot.Control.modifierKeys)">
      <summary>Constructor.
            </summary>
      <param name="button">The mouse button</param>
      <param name="modifierKey">The modifier key</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.MouseButton.Button">
      <summary>
            The mouse button.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MouseButton.ModifierKey">
      <summary>
            The modifier key.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.MouseButton.ToString">
      <summary>
            Converts this MouseButton to a human readable string.
            </summary>
      <returns>A string that represents this MouseButton.</returns>
    </member>
    <member name="T:devDept.Eyeshot.Control.MovementSettingsBase">
      <summary>
            Base class for Zoom/Pan/Rotate settings.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.MovementSettingsBase.#ctor(devDept.Eyeshot.Control.MouseButton,System.Int32,System.Boolean)">
      <summary>Standard constructor.</summary>
      <param name="mouseButton">Mouse button and modifier key</param>
      <param name="keysStep">Arrow keys step (in pixels)</param>
      <param name="enabled">A value indicating whether the movement is enabled</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.MovementSettingsBase.MouseButton">
      <summary>
            Mouse button and modifier key.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MovementSettingsBase.KeysStep">
      <summary>
            Gets or sets the movement by keys step (in pixels).
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MovementSettingsBase.Enabled">
      <summary>
            Gets or sets a value indicating whether the command is enabled.
            </summary>
      <remarks>For rotate command it can be used to avoid accidental rotations in 2D views.</remarks>
    </member>
    <member name="T:devDept.Eyeshot.Control.RotateSettings">
      <summary>Rotate command settings.</summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.RotateSettings.KeysStep">
      <summary>
            Gets or sets the rotate by arrow keys step (in degrees).
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.RotateSettings.Speed">
      <summary>
            Gets or sets the rotation speed.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.RotateSettings.RotationMode">
      <summary>
            Gets or sets a value indicating whether rotation around model Z axis is preferred.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.RotateSettings.RotationCenter">
      <summary>
            Gets or sets the rotation center mode.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.RotateSettings.Center">
      <summary>
            Rotation center point (used only when <see cref="P:devDept.Eyeshot.Control.RotateSettings.RotationCenter" /> is <see cref="F:devDept.Eyeshot.rotationCenterType.Point" />).
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.RotateSettings.ShowCenter">
      <summary>
            Gets or sets the rotation center visibility during the rotation.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.RotateSettings.#ctor(devDept.Eyeshot.Control.MouseButton,System.Double,System.Boolean,System.Double,devDept.Eyeshot.rotationType,devDept.Eyeshot.rotationCenterType)">
      <summary>Standard constructor.</summary>
      <param name="mouseButton">Rotate mouse button and modifier key</param>
      <param name="step">Rotate by arrow keys step in degrees</param>
      <param name="enabled">False to disable view rotation</param>
      <param name="speed">Rotate speed</param>
      <param name="rotationMode">Rotation mode</param>
      <param name="rotationCenter">Rotation center mode</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.RotateSettings.#ctor(devDept.Eyeshot.Control.MouseButton,System.Double,System.Boolean,System.Double,devDept.Eyeshot.rotationType,devDept.Eyeshot.rotationCenterType,devDept.Geometry.Point3D)">
      <summary>Standard constructor.</summary>
      <param name="mouseButton">Rotate mouse button and modifier key</param>
      <param name="step">Rotate by arrow keys step in degrees</param>
      <param name="enabled">False to disable view rotation</param>
      <param name="speed">Rotate speed</param>
      <param name="rotationMode">Rotation mode</param>
      <param name="rotationCenter">Rotation center mode</param>
      <param name="center">Rotation center point</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.RotateSettings.#ctor(devDept.Eyeshot.Control.MouseButton,System.Double,System.Boolean,System.Double,devDept.Eyeshot.rotationType,devDept.Eyeshot.rotationCenterType,devDept.Geometry.Point3D,System.Boolean)">
      <summary>Standard constructor.</summary>
      <param name="mouseButton">Rotate mouse button and modifier key</param>
      <param name="step">Rotate by arrow keys step in degrees</param>
      <param name="enabled">False to disable view rotation</param>
      <param name="speed">Rotate speed</param>
      <param name="rotationMode">Rotation mode</param>
      <param name="rotationCenter">Rotation center mode</param>
      <param name="center">Rotation center point</param>
      <param name="showCenter">Rotation center visibility during the rotation</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.ShortcutKeysSettings">
      <summary>
            Keyboard shortcut settings.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ShortcutKeysSettings.SelectAll">
      <summary>
            Gets or sets the select all shortcut.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ShortcutKeysSettings.InvertSelection">
      <summary>
            Gets or sets the invert selection shortcut.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ShortcutKeysSettings.DeleteSelection">
      <summary>
            Gets or sets the delete selection shortcut.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ShortcutKeysSettings.ZoomFit">
      <summary>
            Gets or sets the zoom fit shortcut.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ShortcutKeysSettings.CopySelection">
      <summary>
            Gets or sets the copy selection shortcut.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ShortcutKeysSettings.PasteSelection">
      <summary>
            Gets or sets the paste selection shortcut.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ShortcutKeysSettings.CutSelection">
      <summary>
            Gets or sets the cut selection shortcut.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ShortcutKeysSettings.GroupSelection">
      <summary>
            Gets or sets the group selection shortcut.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ShortcutKeysSettings.UngroupSelection">
      <summary>
            Gets or sets the ungroup selection shortcut.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ShortcutKeysSettings.ZoomIn">
      <summary>
            Gets or sets the zoom in shortcut.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ShortcutKeysSettings.ZoomOut">
      <summary>
            Gets or sets the zoom out key shortcut.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ShortcutKeysSettings.RotateRight">
      <summary>
            Gets or sets the rotate right shortcut.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ShortcutKeysSettings.RotateUp">
      <summary>
            Gets or sets the rotate up shortcut.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ShortcutKeysSettings.RotateLeft">
      <summary>
            Gets or sets the rotate left shortcut.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ShortcutKeysSettings.RotateDown">
      <summary>
            Gets or sets the rotate down shortcut.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ShortcutKeysSettings.PanRight">
      <summary>
            Gets or sets the pan right shortcut.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ShortcutKeysSettings.PanUp">
      <summary>
            Gets or sets the pan up shortcut.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ShortcutKeysSettings.PanLeft">
      <summary>
            Gets or sets the pan left shortcut.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ShortcutKeysSettings.PanDown">
      <summary>
            Gets or sets the pan down shortcut.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ShortcutKeysSettings.CancelBackgroundWork">
      <summary>
            Gets or sets the cancel background work shortcut.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ShortcutKeysSettings.NavigationRight">
      <summary>
            Gets or sets the right navigation movement shortcut (for <see cref="F:devDept.Eyeshot.Camera.navigationType.Walk" /> and <see cref="F:devDept.Eyeshot.Camera.navigationType.Fly" /> camera navigation modes).
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ShortcutKeysSettings.NavigationLeft">
      <summary>
            Gets or sets the left navigation movement shortcut (for <see cref="F:devDept.Eyeshot.Camera.navigationType.Walk" /> and <see cref="F:devDept.Eyeshot.Camera.navigationType.Fly" /> camera navigation modes).
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ShortcutKeysSettings.NavigationUp">
      <summary>
            Gets or sets the up navigation movement shortcut (for <see cref="F:devDept.Eyeshot.Camera.navigationType.Walk" /> and <see cref="F:devDept.Eyeshot.Camera.navigationType.Fly" /> camera navigation modes).
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ShortcutKeysSettings.NavigationDown">
      <summary>
            Gets or sets the down navigation movement shortcut (for <see cref="F:devDept.Eyeshot.Camera.navigationType.Walk" /> and <see cref="F:devDept.Eyeshot.Camera.navigationType.Fly" /> camera navigation modes).
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ShortcutKeysSettings.NavigationForward">
      <summary>
            Gets or sets the forward navigation movement shortcut (for <see cref="F:devDept.Eyeshot.Camera.navigationType.Walk" /> and <see cref="F:devDept.Eyeshot.Camera.navigationType.Fly" /> camera navigation modes).
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ShortcutKeysSettings.NavigationBackward">
      <summary>
            Gets or sets the backward navigation movement shortcut (for <see cref="F:devDept.Eyeshot.Camera.navigationType.Walk" /> and <see cref="F:devDept.Eyeshot.Camera.navigationType.Fly" /> camera navigation modes).
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ShortcutKeysSettings.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ShortcutKeysSettings.#ctor(System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys)">
      <summary>
            Constructor (deprecated).
            </summary>
      <param name="selectAll">The select all shortcut</param>
      <param name="invertSelection">The invert selection shortcut</param>
      <param name="deleteSelection">The delete selection shortcut</param>
      <param name="zoomFit">The zoom fit shortcut</param>
      <param name="zoomIn">The zoom in shortcut</param>
      <param name="zoomOut">The zoom out shortcut</param>
      <param name="copySelection">The copy selection shortcut</param>
      <param name="pasteSelection">The paste selection shortcut</param>
      <param name="cutSelection">The cut selection shortcut</param>
      <param name="groupSelection">The group selection shortcut</param>
      <param name="ungroupSelection">The ungroup selection shortcut</param>
      <param name="rotateRight">The rotate right shortcut</param>
      <param name="rotateUp">The rotate up shortcut</param>
      <param name="rotateLeft">The rotate left shortcut</param>
      <param name="rotateDown">The rotate down shortcut</param>
      <param name="panRight">The pan right shortcut</param>
      <param name="panUp">The pan up shortcut</param>
      <param name="panLeft">The pan left shortcut</param>
      <param name="panDown">The pan down shortcut</param>
      <param name="cancelBackgroundWork">The cancel background work shortcut</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ShortcutKeysSettings.#ctor(System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys)">
      <summary>
            Constructor.
            </summary>
      <param name="selectAll">The select all shortcut</param>
      <param name="invertSelection">The invert selection shortcut</param>
      <param name="deleteSelection">The delete selection shortcut</param>
      <param name="zoomFit">The zoom fit shortcut</param>
      <param name="zoomIn">The zoom in shortcut</param>
      <param name="zoomOut">The zoom out shortcut</param>
      <param name="copySelection">The copy selection shortcut</param>
      <param name="pasteSelection">The paste selection shortcut</param>
      <param name="cutSelection">The cut selection shortcut</param>
      <param name="groupSelection">The group selection shortcut</param>
      <param name="ungroupSelection">The ungroup selection shortcut</param>
      <param name="rotateRight">The rotate right shortcut</param>
      <param name="rotateUp">The rotate up shortcut</param>
      <param name="rotateLeft">The rotate left shortcut</param>
      <param name="rotateDown">The rotate down shortcut</param>
      <param name="panRight">The pan right shortcut</param>
      <param name="panUp">The pan up shortcut</param>
      <param name="panLeft">The pan left shortcut</param>
      <param name="panDown">The pan down shortcut</param>
      <param name="cancelBackgroundWork">The cancel background work shortcut</param>
      <param name="navigationRight">The right navigation movement shortcut</param>
      <param name="navigationLeft">The left navigation movement shortcut</param>
      <param name="navigationUp">The up navigation movement shortcut</param>
      <param name="navigationDown">The down navigation movement shortcut</param>
      <param name="navigationForward">The forward navigation movement shortcut</param>
      <param name="navigationBackward">The backward navigation movement shortcut</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.ManufactureShortcutKeysSettings">
      <summary>
            Additional Manufacture keyboard shortcut settings.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ManufactureShortcutKeysSettings.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ManufactureShortcutKeysSettings.#ctor(System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys)">
      <summary>
            Constructor.
            </summary>
      <param name="start"> The start simulation shortcut</param>
      <param name="pause">The pause simulation shortcut</param>
      <param name="next">The go to next shortcut</param>
      <param name="previous">The go to previous  shortcut</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ManufactureShortcutKeysSettings.#ctor(System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Windows.Forms.Keys)">
      <summary>
            Constructor.
            </summary>
      <param name="selectAll">The select all shortcut</param>
      <param name="invertSelection">The invert selection shortcut</param>
      <param name="deleteSelection">The delete selection shortcut</param>
      <param name="zoomFit">The zoom fit shortcut</param>
      <param name="zoomIn">The zoom in shortcut</param>
      <param name="zoomOut">The zoom out shortcut</param>
      <param name="copySelection">The copy selection shortcut</param>
      <param name="pasteSelection">The paste selection shortcut</param>
      <param name="cutSelection">The cut selection shortcut</param>
      <param name="groupSelection">The group selection shortcut</param>
      <param name="ungroupSelection">The ungroup selection shortcut</param>
      <param name="rotateRight">The rotate right shortcut</param>
      <param name="rotateUp">The rotate up shortcut</param>
      <param name="rotateLeft">The rotate left shortcut</param>
      <param name="rotateDown">The rotate down shortcut</param>
      <param name="panRight">The pan right shortcut</param>
      <param name="panUp">The pan up shortcut</param>
      <param name="panLeft">The pan left shortcut</param>
      <param name="panDown">The pan down shortcut</param>
      <param name="cancelBackgroundWork">The cancel background work shortcut</param>
      <param name="navigationRight">The right navigation movement shortcut</param>
      <param name="navigationLeft">The left navigation movement shortcut</param>
      <param name="navigationUp">The up navigation movement shortcut</param>
      <param name="navigationDown">The down navigation movement shortcut</param>
      <param name="navigationForward">The forward navigation movement shortcut</param>
      <param name="navigationBackward">The backward navigation movement shortcut</param>
      <param name="start"> The start simulation shortcut</param>
      <param name="pause">The pause simulation shortcut</param>
      <param name="next">The go to next shortcut</param>
      <param name="previous">The go to previous  shortcut</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.ManufactureShortcutKeysSettings.Start">
      <summary>
            Gets or sets the start shortcut.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ManufactureShortcutKeysSettings.Pause">
      <summary>
            Gets or sets the pause shortcut.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ManufactureShortcutKeysSettings.Previous">
      <summary>
            Gets or sets the previous shortcut.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ManufactureShortcutKeysSettings.Next">
      <summary>
            Gets or sets the next shortcut.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.ZoomSettings">
      <summary>Zoom command settings.</summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ZoomSettings.BoxColor">
      <summary>
            Gets or sets the zoom window box color.
            </summary>
      <remarks>When set to <see cref="F:System.Drawing.Color.Empty" /> (default value) it is drawn with a contrast color (white or black) according to the background color.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ZoomSettings.BorderXOR">
      <summary>
            When true the border is drawn in XOR, otherwise it is drawn according to the <see cref="P:devDept.Eyeshot.Control.ZoomSettings.BoxColor" />.
            </summary>
      <seealso cref="P:devDept.Eyeshot.Control.ZoomSettings.BoxColor" />
    </member>
    <member name="P:devDept.Eyeshot.Control.ZoomSettings.ZoomStyle">
      <summary>
            Zoom mode, affects only zoom by mouse wheel.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ZoomSettings.ReverseMouseWheel">
      <summary>
            Revertes the zoom by mouse wheel direction.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ZoomSettings.Speed">
      <summary>
            Gets or sets the <see cref="!:Design.ZoomCamera(int)" /> speed.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ZoomSettings.PerspectiveFitMode">
      <summary>
            Gets or sets the zoom fit accuracy in perspective projection mode.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ZoomSettings.FitLabels">
      <summary>
            Gets or sets the zoom fit mode for labels. When true, approximates the zoom to
            try to include the labels.
            </summary>
      <remarks>
            Labels are drawn in screen coordinates with a fixed size, it's not possible
            to fit them perfectly.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ZoomSettings.FitMargin">
      <summary>
            Gets or sets the zoom fit margin.
            </summary>
      <see cref="!:Design.ZoomFit()" />
    </member>
    <member name="M:devDept.Eyeshot.Control.ZoomSettings.#ctor(devDept.Eyeshot.Control.MouseButton,System.Int32,System.Boolean,devDept.Eyeshot.zoomStyleType,System.Boolean,System.Double,System.Drawing.Color)">
      <summary>Standard constructor.</summary>
      <param name="mouseButton">Zoom mouse button and modifier key</param>
      <param name="keysStep">Zoom by arrow keys step (in pixels)</param>
      <param name="enabled">False to disable view zoom</param>
      <param name="mode">Zoom mode</param>
      <param name="reverse">Zoom by mouse wheel direction</param>
      <param name="speed">Zoom speed</param>
      <param name="boxColor">Color of the zoom window box</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ZoomSettings.#ctor(devDept.Eyeshot.Control.MouseButton,System.Int32,System.Boolean,devDept.Eyeshot.zoomStyleType,System.Boolean,System.Double,System.Drawing.Color,devDept.Eyeshot.Camera.perspectiveFitType)">
      <summary>Standard constructor.</summary>
      <param name="mouseButton">Zoom mouse button and modifier key</param>
      <param name="keysStep">Zoom by arrow keys step (in pixels)</param>
      <param name="enabled">False to disable view zoom</param>
      <param name="mode">Zoom mode</param>
      <param name="reverse">Zoom by mouse wheel direction</param>
      <param name="speed">Zoom speed</param>
      <param name="boxColor">Color of the zoom window box</param>
      <param name="perspectiveFitMode">Zoom fit accuracy in perspective projection mode</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ZoomSettings.#ctor(devDept.Eyeshot.Control.MouseButton,System.Int32,System.Boolean,devDept.Eyeshot.zoomStyleType,System.Boolean,System.Double,System.Drawing.Color,devDept.Eyeshot.Camera.perspectiveFitType,System.Boolean)">
      <summary>Standard constructor.</summary>
      <param name="mouseButton">Zoom mouse button and modifier key</param>
      <param name="keysStep">Zoom by arrow keys step (in pixels)</param>
      <param name="enabled">False to disable view zoom</param>
      <param name="mode">Zoom mode</param>
      <param name="reverse">Zoom by mouse wheel direction</param>
      <param name="speed">Zoom speed</param>
      <param name="boxColor">Color of the zoom window box</param>
      <param name="perspectiveFitMode">Zoom fit accuracy in perspective projection mode</param>
      <param name="fitLabels">Zoom fit mode for labels</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ZoomSettings.#ctor(devDept.Eyeshot.Control.MouseButton,System.Int32,System.Boolean,devDept.Eyeshot.zoomStyleType,System.Boolean,System.Double,System.Drawing.Color,devDept.Eyeshot.Camera.perspectiveFitType,System.Boolean,System.Int32)">
      <summary>Standard constructor.</summary>
      <param name="mouseButton">Zoom mouse button and modifier key</param>
      <param name="keysStep">Zoom by arrow keys step (in pixels)</param>
      <param name="enabled">False to disable view zoom</param>
      <param name="mode">Zoom mode</param>
      <param name="reverse">Zoom by mouse wheel direction</param>
      <param name="speed">Zoom speed</param>
      <param name="boxColor">Color of the zoom window box</param>
      <param name="perspectiveFitMode">Zoom fit accuracy in perspective projection mode</param>
      <param name="fitLabels">Zoom fit mode for labels</param>
      <param name="fitMargin">Zoom fit margin</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ZoomSettings.#ctor(devDept.Eyeshot.Control.MouseButton,System.Int32,System.Boolean,devDept.Eyeshot.zoomStyleType,System.Boolean,System.Double,System.Drawing.Color,devDept.Eyeshot.Camera.perspectiveFitType,System.Boolean,System.Int32,System.Boolean)">
      <summary>Standard constructor.</summary>
      <param name="mouseButton">Zoom mouse button and modifier key</param>
      <param name="keysStep">Zoom by arrow keys step (in pixels)</param>
      <param name="enabled">False to disable view zoom</param>
      <param name="mode">Zoom mode</param>
      <param name="reverse">Zoom by mouse wheel direction</param>
      <param name="speed">Zoom speed</param>
      <param name="boxColor">Color of the zoom window box</param>
      <param name="perspectiveFitMode">Zoom fit accuracy in perspective projection mode</param>
      <param name="fitLabels">Zoom fit mode for labels</param>
      <param name="fitMargin">Zoom fit margin</param>
      <param name="borderXOR">When true the border is drawn in XOR, otherwise it is drawn according to the <see cref="P:devDept.Eyeshot.Control.ZoomSettings.BoxColor" />.</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.PanSettings">
      <summary>Pan command settings.</summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.PanSettings.#ctor(devDept.Eyeshot.Control.MouseButton,System.Int32,System.Boolean)">
      <summary>Standard constructor.</summary>
      <param name="mouseButton">Pan mouse button and modifier key</param>
      <param name="keysStep">Pan by arrow keys step (in pixels)</param>
      <param name="enabled">False to disable view pan</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.BoundingBoxSettings">
      <summary>Bounding box settings.</summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.BoundingBoxSettings.LabelFont">
      <summary>
            Gets the label font.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.BoundingBoxSettings.LinePattern">
      <summary>
            Gets or sets the pattern used to draw the wireframe box.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.BoundingBoxSettings.Visible">
      <summary>
            Gets or sets the visibility status.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.BoundingBoxSettings.OverrideSceneExtents">
      <summary>
            When true, the BoundingBox.Min and BoundingBox.Max properties override the scene extension.
            </summary>
      <remarks>
            The <see cref="M:devDept.Eyeshot.Control.Viewport.ZoomFit" /> will zoom on the box defined by the <see cref="P:devDept.Eyeshot.Control.BoundingBoxSettings.Min" /> and <see cref="P:devDept.Eyeshot.Control.BoundingBoxSettings.Max" /> properties.
            This property is useful when doing animations by moving the entities in the <see cref="M:devDept.Eyeshot.Entities.BlockReference.MoveTo(devDept.Eyeshot.DrawParams)" /> method.
            </remarks>
      <seealso cref="P:devDept.Eyeshot.Control.BoundingBoxSettings.Min" />
      <seealso cref="P:devDept.Eyeshot.Control.BoundingBoxSettings.Max" />
      <seealso cref="M:devDept.Eyeshot.Control.Design.StartAnimation" />
    </member>
    <member name="P:devDept.Eyeshot.Control.BoundingBoxSettings.Min">
      <summary>
            Defines the minimum extension of the scene (for viewport fitting and visualization purposes).
            </summary>
      <remarks>Valid only if <see cref="P:devDept.Eyeshot.Control.BoundingBoxSettings.OverrideSceneExtents" /> is true.</remarks>
      <seealso cref="P:devDept.Eyeshot.Control.BoundingBoxSettings.OverrideSceneExtents" />
      <seealso cref="P:devDept.Eyeshot.Control.BoundingBoxSettings.Max" />
    </member>
    <member name="P:devDept.Eyeshot.Control.BoundingBoxSettings.Max">
      <summary>
            Defines the maximum extension of the scene (for viewport fitting and visualization purposes).
            </summary>
      <remarks>Valid only if <see cref="P:devDept.Eyeshot.Control.BoundingBoxSettings.OverrideSceneExtents" /> is true.</remarks>
      <seealso cref="P:devDept.Eyeshot.Control.BoundingBoxSettings.OverrideSceneExtents" />
      <seealso cref="P:devDept.Eyeshot.Control.BoundingBoxSettings.Min" />
    </member>
    <member name="P:devDept.Eyeshot.Control.BoundingBoxSettings.FormatString">
      <summary>
            Gets or sets the format string used for the bounding box's label.
            </summary>
      <remarks>
            The supported placeholders are <c>{0}</c>, <c>{1}</c>, <c>{2}</c>, and <c>{3}</c>. They are meant to be used for the bounding box's width, depth, height, and unit of measurement.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.BoundingBoxSettings.NotApplicableText">
      <summary>
            Gets or sets the text displayed when the <see cref="P:devDept.Eyeshot.Control.Workspace.Entities" /> collection is empty.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.BoundingBoxSettings.#ctor">
      <summary>Empty constructor.</summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.BoundingBoxSettings.#ctor(System.Drawing.Font,System.UInt16,System.Boolean,System.Boolean,devDept.Geometry.Point3D,devDept.Geometry.Point3D)">
      <summary>Standard constructor.</summary>
      <param name="labelFont">Label font</param>
      <param name="linePattern">Pattern used to draw the wire-frame box</param>
      <param name="visible">Visibility status</param>
      <param name="overrideSceneExtents">IF true, considers the BoundingBox.Min and BoundingBox.Max as the extension of the scene</param>
      <param name="min">Defines the minimum extension of the scene</param>
      <param name="max">Defines the maximum extension of the scene</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.BoundingBoxSettings.#ctor(System.Drawing.Font)">
      <summary>Constructor with font.</summary>
      <param name="labelFont">The label font to use.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.BoundingBoxSettings.#ctor(System.Drawing.Font,System.UInt16)">
      <summary>Constructor with font and line pattern.</summary>
      <param name="labelFont">The label font to use.</param>
      <param name="linePattern">Pattern used to draw the wire-frame box.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.BoundingBoxSettings.#ctor(System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.UInt16,System.Boolean,System.Boolean,devDept.Geometry.Point3D,devDept.Geometry.Point3D)">
      <summary>Deprecated constructor.</summary>
      <param name="labelFont">Label font</param>
      <param name="labelColor">Label color</param>
      <param name="lineColor">Color used to draw the wireframe box</param>
      <param name="linePattern">Pattern used to draw the wireframe box</param>
      <param name="visible">Visibility status</param>
      <param name="overrideSceneExtents">IF true, considers the BoundingBox.Min and BoundingBox.Max as the extension of the scene</param>
      <param name="min">Defines the minimum extension of the scene</param>
      <param name="max">Defines the maximum extension of the scene</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.BoundingBoxSettings.#ctor(System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.UInt16,System.Boolean,System.Boolean,devDept.Geometry.Point3D,devDept.Geometry.Point3D,System.String,System.String)">
      <summary>Deprecated constructor.</summary>
      <param name="labelFont">Label font</param>
      <param name="labelColor">Label color</param>
      <param name="lineColor">Color used to draw the wireframe box</param>
      <param name="linePattern">Pattern used to draw the wireframe box</param>
      <param name="visible">Visibility status</param>
      <param name="overrideSceneExtents">IF true, considers the BoundingBox.Min and BoundingBox.Max as the extension of the scene</param>
      <param name="min">Defines the minimum extension of the scene</param>
      <param name="max">Defines the maximum extension of the scene</param>
      <param name="textSuffix">Text label suffix</param>
      <param name="notApplicableText">The text showed when the <see cref="T:devDept.Eyeshot.EntityList" /> is empty.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.BoundingBoxSettings.#ctor(System.Drawing.Color,System.Drawing.Color,System.UInt16,System.Boolean,System.Boolean,devDept.Geometry.Point3D,devDept.Geometry.Point3D,System.String,System.String)">
      <summary>Deprecated constructor.</summary>
      <param name="labelColor">Label color (deprecated parameter)</param>
      <param name="lineColor">Color used to draw the wireframe box (deprecated parameter)</param>
      <param name="linePattern">Pattern used to draw the wireframe box</param>
      <param name="visible">Visibility status</param>
      <param name="overrideSceneExtents">IF true, considers the BoundingBox.Min and BoundingBox.Max as the extension of the scene</param>
      <param name="min">Defines the minimum extension of the scene</param>
      <param name="max">Defines the maximum extension of the scene</param>
      <param name="textSuffix">Text label suffix</param>
      <param name="notApplicableText">The text showed when the <see cref="T:devDept.Eyeshot.EntityList" /> is empty.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.BoundingBoxSettings.#ctor(System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.UInt16,System.Boolean,System.Boolean,devDept.Geometry.Point3D,devDept.Geometry.Point3D,System.String,System.String,System.Boolean)">
      <summary>Deprecated constructor.</summary>
      <param name="labelFont">Label font</param>
      <param name="labelColor">Label color</param>
      <param name="lineColor">Color used to draw the wireframe box</param>
      <param name="linePattern">Pattern used to draw the wireframe box</param>
      <param name="visible">Visibility status</param>
      <param name="overrideSceneExtents">IF true, considers the BoundingBox.Min and BoundingBox.Max as the extension of the scene</param>
      <param name="min">Defines the minimum extension of the scene</param>
      <param name="max">Defines the maximum extension of the scene</param>
      <param name="textSuffix">Text label suffix</param>
      <param name="notApplicableText">The text showed when the <see cref="T:devDept.Eyeshot.EntityList" /> is empty.</param>
      <param name="lighting">When false the UI element is drawn with flat color</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.BoundingBoxSettings.#ctor(System.Drawing.Color,System.Drawing.Color,System.UInt16,System.Boolean,System.Boolean,devDept.Geometry.Point3D,devDept.Geometry.Point3D,System.String,System.String,System.Boolean)">
      <summary>Deprecated constructor.</summary>
      <param name="labelColor">Label color (deprecated parameter)</param>
      <param name="lineColor">Color used to draw the wireframe box (deprecated parameter)</param>
      <param name="linePattern">Pattern used to draw the wireframe box</param>
      <param name="visible">Visibility status</param>
      <param name="overrideSceneExtents">IF true, considers the BoundingBox.Min and BoundingBox.Max as the extension of the scene</param>
      <param name="min">Defines the minimum extension of the scene</param>
      <param name="max">Defines the maximum extension of the scene</param>
      <param name="textSuffix">Text label suffix</param>
      <param name="notApplicableText">The text showed when the <see cref="T:devDept.Eyeshot.EntityList" /> is empty.</param>
      <param name="lighting">When false the UI element is drawn with flat color (deprecated parameter)</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.BoundingBoxSettings.#ctor(System.UInt16,System.Boolean,System.Boolean,devDept.Geometry.Point3D,devDept.Geometry.Point3D,System.String,System.String)">
      <summary>Standard constructor.</summary>
      <param name="linePattern">Pattern used to draw the wireframe box</param>
      <param name="visible">Visibility status</param>
      <param name="overrideSceneExtents">IF true, considers the BoundingBox.Min and BoundingBox.Max as the extension of the scene</param>
      <param name="min">Defines the minimum extension of the scene</param>
      <param name="max">Defines the maximum extension of the scene</param>
      <param name="formatString">An initializer for the format string used in the bounding box's label.</param>
      <param name="notApplicableText">The text showed when the <see cref="T:devDept.Eyeshot.EntityList" /> is empty.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.BoundingBoxSettings.Draw(devDept.Eyeshot.Control.Viewport,devDept.Graphics.RenderContextBase,System.Single,devDept.Geometry.Point3D,devDept.Geometry.Point3D)">
      <summary>
            Draws the scene bounding box.
            </summary>
      <param name="viewport">The viewport</param>
      <param name="context">The render context</param>
      <param name="lineSize">The line size</param>
      <param name="min">The minimum point of the scene</param>
      <param name="max">The maximum point of the scene</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.BoundingBoxSettings.DrawLabel(devDept.Eyeshot.DrawSceneParams)">
      <summary>
            Draws the text label.
            </summary>
      <param name="myParams">The draw parameters</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.BoundingBoxSettings.DrawLabelGdi(devDept.Eyeshot.DrawSceneParams,System.Single,System.Drawing.Graphics)">
      <summary>
            Draws the text label in GDI.
            </summary>
      <param name="myParams">The draw parameters</param>
      <param name="drawScaleFactor">The draw scale factor</param>/
            <param name="g">Active GDI+ drawing surface</param></member>
    <member name="T:devDept.Eyeshot.Control.Mouse3DSettings">
      <summary>
            Mouse 3D settings.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Mouse3DSettings.#ctor">
      <summary>
            Standard constructor.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Mouse3DSettings.ShouldSerialize(devDept.Eyeshot.Control.Mouse3DSettings)">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Mouse3DSettings.Enabled">
      <summary>
            Gets or sets a value indicating whether the movements are enabled.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Mouse3DSettings.SpeedFactor">
      <summary>
            Gets or sets the 3D mouse pan speed.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Mouse3DSettings.LockHorizon">
      <summary>
            Gets or sets the lock horizon mode.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Mouse3DSettings.SingleAxisFilter">
      <summary>
             Gets or sets the single axis filter. When enabled, the single
             axis filter only allows the 3D Mouse axis value with largest
             magnitude to result in a movement.
            
             A total of six axes are considered: three translation axes and
             three rotation axes. The single axis filter ignores five axes
             out of six.
             </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Mouse3DSettings.AutoCenterOfRotation">
      <summary>
            Automatic selection for center of rotation.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Mouse3DSettings.CenterOfRotationVisibilityMode">
      <summary>
            Gets or sets the center of rotation visibility (Mouse3D).
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.MultiTouchSettings">
      <summary>
            Multi Touch settings
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouchSettings.#ctor(System.Boolean)">
      <summary>
            Standard constructor.
            </summary>
      <param name="enableMultiTouchMovements">If true, the movements are enabled</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.MultiTouchSettings.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Standard constructor.
            </summary>
      <param name="enableMultiTouchMovements">If true, the movements are enabled</param>
      <param name="zoom">Enables or disables the zoom with two fingers</param>
      <param name="pan">Enables or disables the pan with two fingers</param>
      <param name="rotate">Enables or disables the rotation with two fingers</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouchSettings.Enabled">
      <summary>
            Gets or sets a value indicating whether the movements are enabled.
            </summary>
      <remarks>It must be set before the control handle is created (in the Form or Window constructor).</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouchSettings.Rotate">
      <summary>
            Enables or disables the rotation with two fingers.
            </summary>
      <remarks>
            If <see cref="P:devDept.Eyeshot.Control.MovementSettingsBase.Enabled" /> is false, the 2 fingers rotation is also disabled.
            When the <see cref="!:Design.ActionMode" /> is set to <see cref="F:devDept.Eyeshot.actionType.Rotate" />, you can use 1 finger to rotate.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouchSettings.Zoom">
      <summary>
            Enables or disables the zoom with two fingers.
            </summary>
      <remarks>
            If <see cref="!:RotateSettings.Enabled" /> is false, the 2 fingers zoom is also disabled.
            When the <see cref="!:Design.ActionMode" /> is set to <see cref="F:devDept.Eyeshot.actionType.Zoom" />, you can use 1 finger to zoom.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.MultiTouchSettings.Pan">
      <summary>
            Enables or disables the pan with two fingers.
            </summary>
      <remarks>
            If <see cref="!:ZoomSettings.Enabled" /> is false, the 2 fingers pan is also disabled.
            When the <see cref="!:Design.ActionMode" /> is set to <see cref="F:devDept.Eyeshot.actionType.Pan" />, you can use 1 finger to pan.
            </remarks>/// 
        </member>
    <member name="T:devDept.Eyeshot.Control.NavigationSettings">
      <summary>
            Settings for the <see cref="F:devDept.Eyeshot.Camera.navigationType.Walk" /> and <see cref="F:devDept.Eyeshot.Camera.navigationType.Fly" /> camera navigation modes.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.NavigationSettings.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.NavigationSettings.#ctor(devDept.Eyeshot.Camera.navigationType,devDept.Eyeshot.Control.MouseButton,devDept.Geometry.Point3D,devDept.Geometry.Point3D,System.Double,System.Double,System.Double)">
      <summary>
            Standard cosntructor.
            </summary>
      <param name="mouseButton">The mouse button used for the navigation</param>
      <param name="min">The minimum limit of the navigation volume</param>
      <param name="max">The maximum limit of the navigation volume</param>
      <param name="acceleration">The acceleration of the camera movement</param>
      <param name="speed">THe maximum velocity of the camera movement</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.NavigationSettings.Mode">
      <summary>
            Gets or sets the navigation mode.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.NavigationSettings.MouseButton">
      <summary>
            Gets or sets the mouse button used for the navigation.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.NavigationSettings.Max">
      <summary>
            Gets or sets the maximum limit of the navigation volume.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.NavigationSettings.Min">
      <summary>
            Gets or sets the minimum limit of the navigation volume.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.NavigationSettings.Acceleration">
      <summary>
            Gets or sets the acceleration of the camera movement.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.NavigationSettings.Speed">
      <summary>
            Gets or sets the speed of the camera movement.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.NavigationSettings.RotationSpeed">
      <summary>
            Gets or sets the rotation speed of the camera movement.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.SelectionBoxColorsSettings">
      <summary>
            Class that holds the colors used to draw the selection box and polygon.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.SelectionBoxColorsSettings.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.SelectionBoxColorsSettings.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
      <summary>
            Deprecated constructor. Use the overload with the borderXOR parameter.
            </summary>
      <param name="crossing">The color used to draw the box and polygon for crossing selection mode</param>
      <param name="enclosed">The color used to draw the box and polygon for enclosed selection mode</param>
      <param name="visible">The color used to draw the box and polygon for visible selection mode</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SelectionBoxColorsSettings.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean)">
      <summary>
            Standard constructor.
            </summary>
      <param name="crossing">The color used to draw the box and polygon for crossing selection mode</param>
      <param name="enclosed">The color used to draw the box and polygon for enclosed selection mode</param>
      <param name="visible">The color used to draw the box and polygon for visible selection mode</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.SelectionBoxColorsSettings.Crossing">
      <summary>
            Gets or sets the color used to draw the box and polygon for crossing selection modes (<see cref="F:devDept.Eyeshot.actionType.SelectByBox" />, <see cref="F:devDept.Eyeshot.actionType.SelectByPolygon" />).
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SelectionBoxColorsSettings.Enclosed">
      <summary>
            Gets or sets the color used to draw the box and polygon for enclosed selection modes (<see cref="F:devDept.Eyeshot.actionType.SelectByBoxEnclosed" />, <see cref="F:devDept.Eyeshot.actionType.SelectByPolygonEnclosed" />).
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SelectionBoxColorsSettings.Visible">
      <summary>
            Gets or sets the color used to draw the box and polygon for visible selection modes (<see cref="F:devDept.Eyeshot.actionType.SelectVisibleByBox" />, <see cref="F:devDept.Eyeshot.actionType.SelectVisibleByPolygon" />).
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SelectionBoxColorsSettings.BorderXOR">
      <summary>
            When true the border is drawn in XOR, otherwise it is drawn according to the box color.
            </summary>
      <seealso cref="P:devDept.Eyeshot.Control.SelectionBoxColorsSettings.Crossing" />
      <seealso cref="P:devDept.Eyeshot.Control.SelectionBoxColorsSettings.Enclosed" />
      <seealso cref="P:devDept.Eyeshot.Control.SelectionBoxColorsSettings.Visible" />
    </member>
    <member name="T:devDept.Eyeshot.Control.MagnifyingGlassSettings">
      <summary>
            Class that holds the settings for the magnifying glass feature.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.MagnifyingGlassSettings.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.MagnifyingGlassSettings.#ctor(System.Boolean,System.Drawing.Size,System.Double)">
      <summary>
            Deprecated constructor.
            </summary>
      <param name="enabled">The enable status. Deprecated, use <see cref="F:devDept.Eyeshot.actionType.MagnifyingGlass" /> to enable the magnifying glass instead.</param>
      <param name="size">The lens size</param>
      <param name="factor">The lens magnifying factor</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.MagnifyingGlassSettings.#ctor(System.Boolean,System.Drawing.Size,System.Double,System.Boolean)">
      <summary>
            Deprecated constructor.
            </summary>
      <param name="enabled">The enable status. Deprecated, use <see cref="F:devDept.Eyeshot.actionType.MagnifyingGlass" /> to enable the magnifying glass instead.</param>
      <param name="size">The lens size</param>
      <param name="factor">The lens magnifying factor</param>
      <param name="scaleLineWeight">If true, the line weights of the wireframe entities are scaled by the <see cref="P:devDept.Eyeshot.Control.MagnifyingGlassSettings.Factor" />, else they keep their size on screen in the magnified drawing.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.MagnifyingGlassSettings.#ctor(System.Drawing.Size,System.Double)">
      <summary>
            Standard constructor.
            </summary>
      <param name="size">The lens size</param>
      <param name="factor">The lens magnifying factor</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.MagnifyingGlassSettings.#ctor(System.Drawing.Size,System.Double,System.Boolean)">
      <summary>
            Standard constructor.
            </summary>
      <param name="size">The lens size</param>
      <param name="factor">The lens magnifying factor</param>
      <param name="scaleLineWeight">If true, the line weights of the wireframe entities are scaled by the <see cref="P:devDept.Eyeshot.Control.MagnifyingGlassSettings.Factor" />, else they keep their size on screen in the magnified drawing.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.MagnifyingGlassSettings.#ctor(System.Drawing.Size,System.Double,System.Boolean,System.Drawing.Point)">
      <summary>
            Standard constructor.
            </summary>
      <param name="size">The lens size</param>
      <param name="factor">The lens magnifying factor</param>
      <param name="scaleLineWeight">If true, the line weights of the wireframe entities are scaled by the <see cref="P:devDept.Eyeshot.Control.MagnifyingGlassSettings.Factor" />, else they keep their size on screen in the magnified drawing.</param>
      <param name="offset">The offset between the mouse position and the lens.</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.MagnifyingGlassSettings.Size">
      <summary>
            Gets or sets the size of the magnifying glass lens.
            </summary>
      <remarks>Call <see cref="!:Design.CompileUserInterfaceElements()" /> to update the magnyfying glass shape.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.MagnifyingGlassSettings.Offset">
      <summary>
            Gets or sets the offset between the mouse position and the magnifying glass lens.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MagnifyingGlassSettings.Factor">
      <summary>
            Gets or sets the magnifying factor of the lens.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.MagnifyingGlassSettings.ScaleLineWeight">
      <summary>
            If true, the line weights of the wireframe entities are scaled by the <see cref="P:devDept.Eyeshot.Control.MagnifyingGlassSettings.Factor" />, else they keep their size on screen in the magnified drawing.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.AmbientOcclusionSettings">
      <summary>
             Ambient Occlusion settings.
             </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.AmbientOcclusionSettings.aoQuality">
      <summary>
            Represents a quality level for the Ambient Occlusion effect.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.AmbientOcclusionSettings.aoQuality.Low">
      <summary>
            Provides the lowest quality and the best performance.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.AmbientOcclusionSettings.aoQuality.Standard">
      <summary>
            Standard quality, best suited for discrete graphics cards.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.AmbientOcclusionSettings.aoQuality.Auto">
      <summary>
            Let Eyeshot detect the best settings. 
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.AmbientOcclusionSettings.Enabled">
      <summary>
            Enables or disables the ambient occlusion effect.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.AmbientOcclusionSettings.Radius">
      <summary>
            The effect radius expressed as a multiple of the viewport height.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.AmbientOcclusionSettings.Strength">
      <summary>
            The strenght of the effect. Higher values mean a stronger effect.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.AmbientOcclusionSettings.#ctor(devDept.Eyeshot.Control.AmbientOcclusionSettings.aoQuality,devDept.Graphics.RenderContextBase)">
      <summary>
            Standard constructor.
            </summary>
      <param name="quality"> Specifies a quality level for the Ambient Occlusion effect. </param>
      <param name="renderContext"> The render context. </param>
    </member>
    <member name="T:devDept.Eyeshot.Control.SelectionSettings">
      <summary>Selection settings.</summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SelectionSettings.Color">
      <summary>
            Gets or sets the color of selected entities, shared by all viewports.
            </summary>
      <remarks>
            For opaque colors the <see cref="P:devDept.Eyeshot.Material.Ambient" />, <see cref="P:devDept.Eyeshot.Material.Specular" /> and <see cref="P:devDept.Eyeshot.Material.Shininess" /> components are taken from the <see cref="P:devDept.Eyeshot.Control.Design.DefaultMaterial" />.
            For transparent colors selected entities are highlighted with an halo effect.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.SelectionSettings.HaloInnerColor">
      <summary>
            Gets or sets the inner halo color for selection, shared by all viewports.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SelectionSettings.HaloOuterColor">
      <summary>
            Gets or sets the outer halo color for selection, shared by all viewports.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SelectionSettings.ColorDynamic">
      <summary>
            Gets or sets the color for dynamic selection, shared by all viewports.
            </summary>
      <remarks>
            For opaque colors the <see cref="P:devDept.Eyeshot.Material.Ambient" />, <see cref="P:devDept.Eyeshot.Material.Specular" /> and <see cref="P:devDept.Eyeshot.Material.Shininess" /> components are taken from the <see cref="P:devDept.Eyeshot.Control.Design.DefaultMaterial" />.
            For transparent colors selected entities are highlighted with an halo effect.
            </remarks>
      <see cref="F:devDept.Eyeshot.actionType.SelectVisibleByPickDynamic" />
    </member>
    <member name="P:devDept.Eyeshot.Control.SelectionSettings.HaloInnerColorDynamic">
      <summary>
            Gets or sets the inner halo color for dynamic selection, shared by all viewports.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SelectionSettings.HaloOuterColorDynamic">
      <summary>
            Gets or sets the outer halo color for dynamic selection, shared by all viewports.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SelectionSettings.LineWeightScaleFactor">
      <summary>
            Gets or sets the factor applied to the line weight for the selected wireframe entities or <see cref="P:devDept.Eyeshot.Entities.Brep.Edges" />.
            </summary>
      <seealso cref="P:devDept.Eyeshot.Entities.Entity.LineWeight" />
    </member>
    <member name="P:devDept.Eyeshot.Control.SelectionSettings.HaloWidthPolygons">
      <summary>
            Gets or sets the halo width in pixels for the dynamically selected polygonal entities, shared by all viewports.
            </summary>
      <remarks>Values are clamped to the range [0, 4].</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.SelectionSettings.HaloWidthWires">
      <summary>
            Gets or sets the halo width in pixels for the dynamically selected wireframe entities or <see cref="P:devDept.Eyeshot.Entities.Brep.Edges" />, shared by all viewports.
            </summary>
      <remarks>Values are clamped to the range [0, 4].</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.SelectionSettings.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Single,System.Int32,System.Int32)">
      <summary>Standard constructor.</summary>
      <param name="color"> The selection color.</param>
      <param name="haloInnerColor"> The inner color of the halo effect.</param>
      <param name="haloOuterColor"> The outer color of the halo effect.</param>
      <param name="colorDynamic"> The dynamic selection color.The highlight effect is determined by the alpha value of the color, see <see cref="P:devDept.Eyeshot.Control.SelectionSettings.ColorDynamic" />. </param>
      <param name="haloInnerColorDynamic"> The inner color of the halo effect.</param>
      <param name="haloOuterColorDynamic"> The outer color of the halo effect.</param>
      <param name="lineWeightScaleFactor"> The factor applied to the line weight.</param>
      <param name="haloWidthPolygons"> The width of the halo effect for polygonal entities. </param>
      <param name="haloWidthWires"> The width of the halo effect for wireframe entities.</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.DisplayModeSettings">
      <summary>Display Mode settings for Wirefame mode.</summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.DisplayModeSettings.ShowEdges">
      <summary>Gets or sets the entity edges visibility status.</summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.DisplayModeSettings.EdgeColor">
      <summary>Gets or sets the entity edges color, applies only to single color style mode.</summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.DisplayModeSettings.EdgeThickness">
      <summary>Gets or sets the entity edges thickness.</summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.DisplayModeSettings.SilhouettesDrawingMode">
      <summary>Gets or sets the silhouettes drawing mode.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.DisplayModeSettings.SilhouetteThickness">
      <summary>Gets or sets the Silhouettes thickness.</summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.DisplayModeSettings.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.DisplayModeSettings.#ctor(System.Boolean,devDept.Eyeshot.edgeColorMethodType,System.Drawing.Color,System.Single,System.Single,devDept.Eyeshot.silhouettesDrawingType,System.Boolean)">
      <summary>Standard constructor.</summary>
      <param name="showEdges">Edges Visibility flag</param>
      <param name="edgeColorMethod">Edges Color mode</param>
      <param name="edgeColor">Edges color</param>
      <param name="edgeThickness">Edges Thickness</param>
      <param name="silhouetteThickness">Thickness used to draw the silhouettes</param>
      <param name="silhouettesDrawingMode">Silhouettes drawing mode</param>
      <param name="showInternalWires">Internal wireframe visibility</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.DisplayModeSettings.EdgeColorMethod">
      <summary>
            Gets or sets the entity edges color method.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.DisplayModeSettings.ShowInternalWires">
      <summary>Gets or sets the visualization of internal wireframe.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.DisplayModeSettingsFlat">
      <summary>Display Mode settings for Flat mode.</summary>
      <remarks>There is no option for EdgeColorMethod and for ShowInternalWires because they would not be visible due to the flat shading.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.DisplayModeSettingsFlat.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.DisplayModeSettingsFlat.#ctor(System.Boolean,System.Drawing.Color,System.Single,System.Single,devDept.Eyeshot.silhouettesDrawingType)">
      <summary>Standard constructor.</summary>
      <param name="showEdges">Edges Visibility flag</param>
      <param name="edgeColor">Edges color</param>
      <param name="edgeThickness">Edges Thickness</param>
      <param name="silhouetteThickness">Thickness used to draw the silhouettes</param>
      <param name="silhouettesDrawingMode">Silhouettes drawing mode</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.DisplayModeSettingsFlat.#ctor(System.Boolean,devDept.Eyeshot.edgeColorMethodType,System.Drawing.Color,System.Single,System.Single,devDept.Eyeshot.silhouettesDrawingType,System.Boolean)">
      <summary>Standard constructor.</summary>
      <param name="showEdges">Edges Visibility flag</param>
      <param name="edgeColorMethod">Edges Color mode</param>
      <param name="edgeColor">Edges color</param>
      <param name="edgeThickness">Edges Thickness</param>
      <param name="silhouetteThickness">Thickness used to draw the silhouettes</param>
      <param name="silhouettesDrawingMode">Silhouettes drawing mode</param>
      <param name="showInternalWires">Internal wireframe visibility</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.DisplayModeSettingsFlat.#ctor(System.Boolean,devDept.Eyeshot.edgeColorMethodType,System.Drawing.Color,System.Single,System.Single,devDept.Eyeshot.silhouettesDrawingType,System.Boolean,devDept.Eyeshot.flatColorMethodType)">
      <summary>Standard constructor.</summary>
      <param name="showEdges">Edges Visibility flag</param>
      <param name="edgeColorMethod">Edges Color mode</param>
      <param name="edgeColor">Edges color</param>
      <param name="edgeThickness">Edges Thickness</param>
      <param name="silhouetteThickness">Thickness used to draw the silhouettes</param>
      <param name="silhouettesDrawingMode">Silhouettes drawing mode</param>
      <param name="showInternalWires">Internal wireframe visibility</param>
      <param name="colorMethod">Color used to draw the entities</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.DisplayModeSettingsFlat.#ctor(System.Boolean,System.Drawing.Color,System.Single,System.Single,devDept.Eyeshot.silhouettesDrawingType,devDept.Eyeshot.flatColorMethodType)">
      <summary>Standard constructor.</summary>
      <param name="showEdges">Edges Visibility flag</param>
      <param name="edgeColor">Edges color</param>
      <param name="edgeThickness">Edges Thickness</param>
      <param name="silhouetteThickness">Thickness used to draw the silhouettes</param>
      <param name="silhouettesDrawingMode">Silhouettes drawing mode</param>
      <param name="colorMethod">Color used to draw the entities</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.DisplayModeSettingsFlat.ColorMethod">
      <summary>Gets or sets the color used for the polygonal entities.</summary>
      <seealso cref="P:devDept.Eyeshot.Control.DisplayModeSettings.EdgeColorMethod" />
    </member>
    <member name="T:devDept.Eyeshot.Control.DisplayModeSettingsShaded">
      <summary>Display Mode settings for Shaded mode.</summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.DisplayModeSettingsShaded.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.DisplayModeSettingsShaded.ShadowMode">
      <summary>
            Gets or sets the shadow mode.
            </summary>
      <remarks>The <see cref="F:devDept.Graphics.shadowType.Planar" /> shadows plane position is determined by the scene bounding box and the <see cref="P:devDept.Eyeshot.Control.Design.GroundPlaneDistance" />.</remarks>
    </member>
    <member name="T:devDept.Eyeshot.Control.DisplayModeSettingsRendered">
      <summary>Display Mode settings for Rendered mode.</summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.DisplayModeSettingsRendered.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.DisplayModeSettingsRendered.EnvironmentMappingImage">
      <summary>
            Gets or sets the environment map.
            </summary>
      <remarks>The environment intensity can be changed for all entities with the <see cref="P:devDept.Eyeshot.Material.Environment" /> property of <see cref="P:devDept.Eyeshot.Control.Design.DefaultMaterial" />, or can
            be changed individually for each entity <see cref="T:devDept.Eyeshot.Material" /></remarks>
      <remarks>If the image is changed after the <see cref="T:devDept.Eyeshot.Control.Design" /> was loaded, call <see cref="!:Design.CompileUserInterfaceElements()" /> to load the new image.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.DisplayModeSettingsRendered.EnvironmentMapping">
      <summary>
            Gets or sets the environment map visibility status.
            </summary>
      <remarks>The environment intensity can be changed for all entities with the <see cref="P:devDept.Eyeshot.Material.Environment" /> property of <see cref="P:devDept.Eyeshot.Control.Design.DefaultMaterial" />, or can
            be changed individually for each entity <see cref="T:devDept.Eyeshot.Material" /></remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.DisplayModeSettingsRendered.PlanarReflections">
      <summary>
            Gets or sets the planar reflections visibility status
            </summary>
      <remarks>The reflection plane position is determined by the scene bounding box and the <see cref="P:devDept.Eyeshot.Control.Design.GroundPlaneDistance" />.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.DisplayModeSettingsRendered.PlanarReflectionsIntensity">
      <summary>
            Gets or sets the planar reflections visibility status
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.DisplayModeSettingsRendered.RealisticShadowQuality">
      <summary>
            Gets or sets the quality of realistic shadows.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.HiddenLinesSettings">
      <summary>
            Viewport Hidden Lines settings.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.HiddenLinesSettings.Lighting">
      <summary>Gets or sets the Lighting status.</summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.HiddenLinesSettings.ColorMethod">
      <summary>Gets or sets the color used for the polygonal entities.</summary>
      <seealso cref="P:devDept.Eyeshot.Control.HiddenLinesSettings.WireColorMethod" />
      <seealso cref="P:devDept.Eyeshot.Control.DisplayModeSettings.EdgeColorMethod" />
    </member>
    <member name="P:devDept.Eyeshot.Control.HiddenLinesSettings.SilhouetteColor">
      <summary>Gets or sets the Silhouettes color used when the <see cref="P:devDept.Eyeshot.Control.DisplayModeSettings.EdgeColorMethod" /> is <see cref="F:devDept.Eyeshot.edgeColorMethodType.SingleColor" />.</summary>
      <seealso cref="P:devDept.Eyeshot.Control.HiddenLinesSettings.PolygonColor" />
      <seealso cref="P:devDept.Eyeshot.Control.HiddenLinesSettings.WireColor" />
      <seealso cref="!:DisplayModeSettingsBase.EdgeColor" />
    </member>
    <member name="P:devDept.Eyeshot.Control.HiddenLinesSettings.WireColorMethod">
      <summary>
            Gets or sets the color used for the wire entities.
            </summary>
      <seealso cref="P:devDept.Eyeshot.Control.HiddenLinesSettings.ColorMethod" />
      <seealso cref="P:devDept.Eyeshot.Control.DisplayModeSettings.EdgeColorMethod" />
    </member>
    <member name="P:devDept.Eyeshot.Control.HiddenLinesSettings.PolygonColor">
      <summary>
            Gets or sets the color used to draw the polygons when <see cref="P:devDept.Eyeshot.Control.HiddenLinesSettings.ColorMethod" /> is <see cref="F:devDept.Eyeshot.hiddenLinesColorMethodType.SingleColor" />.
            </summary>
      <seealso cref="P:devDept.Eyeshot.Control.HiddenLinesSettings.WireColor" />
      <seealso cref="P:devDept.Eyeshot.Control.HiddenLinesSettings.SilhouetteColor" />
      <seealso cref="!:DisplayModeSettingsBase.EdgeColor" />
    </member>
    <member name="P:devDept.Eyeshot.Control.HiddenLinesSettings.WireColor">
      <summary>Gets or sets the wires color used when <see cref="P:devDept.Eyeshot.Control.HiddenLinesSettings.WireColorMethod" /> is <see cref="F:devDept.Eyeshot.edgeColorMethodType.SingleColor" />.</summary>
      <seealso cref="P:devDept.Eyeshot.Control.HiddenLinesSettings.PolygonColor" />
      <seealso cref="P:devDept.Eyeshot.Control.HiddenLinesSettings.SilhouetteColor" />
      <seealso cref="!:DisplayModeSettingsBase.EdgeColor" />
    </member>
    <member name="P:devDept.Eyeshot.Control.HiddenLinesSettings.WireThickness">
      <summary>Gets or sets the Wires thickness.</summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.HiddenLinesSettings.DashedHiddenLines">
      <summary>Gets or sets the dashed hidden lines visualization.</summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.HiddenLinesSettings.DashedHiddenLinesColor">
      <summary>Gets or sets the dashed hidden lines color.</summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.HiddenLinesSettings.DashedHiddenLinesThickness">
      <summary>Gets or sets the dashed hidden lines thickness.</summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.HiddenLinesSettings.DashedHiddenLinesPattern">
      <summary>Gets or sets the dashed hidden lines pattern.</summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.HiddenLinesSettings.#ctor(System.Boolean,devDept.Eyeshot.hiddenLinesColorMethodType,System.Boolean,System.Single,System.Single,System.Single,System.Single,System.Boolean,devDept.Eyeshot.silhouettesDrawingType,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.UInt16)">
      <summary>Standard constructor.</summary>
      <param name="lighting">Enable/Disable lighting in hidden lines mode</param>
      <param name="colorMethod">Color used to draw the entities</param>
      <param name="showEdges">Enable/disable the edges visualization</param>
      <param name="silhouetteThickness">Thickness used to draw the silhouettes</param>
      <param name="edgeThickness">Thickness used to draw the edges</param>
      <param name="wireThickness">Thickness used to draw the wireframe entities</param>
      <param name="dashedHiddenLinesThickness">Thickness used to draw the dashed hidden lines</param>
      <param name="dashedHiddenLines">Enable/disable the dashed hidden lines visualization</param>
      <param name="silhouettesDrawingMode">Silhouettes drawing mode</param>
      <param name="silhouetteColor">Color used to draw the silhouettes</param>
      <param name="edgeColor">Color used to draw the edges</param>
      <param name="wireColor">Color used to draw the wireframe entities</param>
      <param name="dashedHiddenLinesColor">Color used to draw the dashed hidden lines</param>
      <param name="dashedHiddenLinesPattern">Pattern used to draw the dashed hidden lines</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.HiddenLinesSettings.#ctor(System.Boolean,devDept.Eyeshot.hiddenLinesColorMethodType,System.Boolean,devDept.Eyeshot.edgeColorMethodType,System.Single,System.Single,System.Single,System.Single,System.Boolean,devDept.Eyeshot.silhouettesDrawingType,System.Boolean,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.UInt16)">
      <summary>Standard constructor.</summary>
      <param name="lighting">Enable/Disable lighting in hidden lines mode</param>
      <param name="colorMethod">Color used to draw the entities</param>
      <param name="showEdges">Enable/disable the edges visualization</param>
      <param name="edgeColorMethod">Edges Color mode</param>
      <param name="silhouetteThickness">Thickness used to draw the silhouettes</param>
      <param name="edgeThickness">Thickness used to draw the edges</param>
      <param name="wireThickness">Thickness used to draw the wireframe entities</param>
      <param name="dashedHiddenLinesThickness">Thickness used to draw the dashed hidden lines</param>
      <param name="dashedHiddenLines">Enable/disable the dashed hidden lines visualization</param>
      <param name="silhouettesDrawingMode">Silhouettes drawing mode</param>
      <param name="showInternalWires">Internal wireframe visibility</param>
      <param name="silhouetteColor">Color used to draw the silhouettes</param>
      <param name="edgeColor">Color used to draw the edges</param>
      <param name="wireColor">Color used to draw the wireframe entities</param>
      <param name="dashedHiddenLinesColor">Color used to draw the dashed hidden lines</param>
      <param name="dashedHiddenLinesPattern">Pattern used to draw the dashed hidden lines</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.HiddenLinesSettings.#ctor(System.Boolean,devDept.Eyeshot.hiddenLinesColorMethodType,System.Boolean,devDept.Eyeshot.edgeColorMethodType,System.Single,System.Single,System.Single,System.Single,System.Boolean,devDept.Eyeshot.silhouettesDrawingType,System.Boolean,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.UInt16,devDept.Eyeshot.edgeColorMethodType,System.Drawing.Color)">
      <summary>Standard constructor.</summary>
      <param name="lighting">Enable/Disable lighting in hidden lines mode</param>
      <param name="colorMethod">Color used to draw the entities</param>
      <param name="showEdges">Enable/disable the edges visualization</param>
      <param name="edgeColorMethod">Edges Color mode</param>
      <param name="silhouetteThickness">Thickness used to draw the silhouettes</param>
      <param name="edgeThickness">Thickness used to draw the edges</param>
      <param name="wireThickness">Thickness used to draw the wireframe entities</param>
      <param name="dashedHiddenLinesThickness">Thickness used to draw the dashed hidden lines</param>
      <param name="dashedHiddenLines">Enable/disable the dashed hidden lines visualization</param>
      <param name="silhouettesDrawingMode">Silhouettes drawing mode</param>
      <param name="showInternalWires">Internal wireframe visibility</param>
      <param name="silhouetteColor">Color used to draw the silhouettes</param>
      <param name="edgeColor">Color used to draw the edges when <paramref name="edgeColorMethod" /> is <see cref="F:devDept.Eyeshot.edgeColorMethodType.SingleColor" /></param>
      <param name="wireColor">Color used to draw the wireframe entities when <paramref name="wireColorMethod" /> is <see cref="F:devDept.Eyeshot.edgeColorMethodType.SingleColor" /></param>
      <param name="dashedHiddenLinesColor">Color used to draw the dashed hidden lines</param>
      <param name="dashedHiddenLinesPattern">Pattern used to draw the dashed hidden lines</param>
      <param name="wireColorMethod">Wires color method</param>
      <param name="polygonColor">Color used to draw the polygons when <paramref name="colorMethod" /> is <see cref="F:devDept.Eyeshot.hiddenLinesColorMethodType.SingleColor" /></param>
    </member>
    <member name="T:devDept.Eyeshot.Control.DimensionPreviewDrawParams">
      <summary>
            Data for drawing the dimension preview.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.DimensionPreviewDrawParams.TextHeight">
      <summary>
            The text height.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.DimensionPreviewDrawParams.TextGap">
      <summary>
            The text height.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.DimensionPreviewDrawParams.LineSize">
      <summary>
            The dimension's line width.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.DimensionPreviewDrawParams.Color">
      <summary>
            The dimension's color.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.DimensionPreviewDrawParams.DistancesScaleFactor">
      <summary>
            The scale factor distances' numeric values will be multiplied by in the actual dimension.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.DimensionPreviewDrawParams.LinearDimensionUnits">
      <summary>
            The units format for linear dimension.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.DimensionPreviewDrawParams.Precision">
      <summary>
            The precision for primary units dimension.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.DimensionPreviewDrawParams.TextOverride">
      <summary>
            The dimension text override.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.DimensionPreviewDrawParams.TextSuffix">
      <summary>
            The dimension text suffix.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.DimensionPreviewDrawParams.TextPrefix">
      <summary>
            The dimension text prefix.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.DimensionPreviewDrawParams.SuppressLeadingZeros">
      <summary>
            Hides or shows the leading zeros.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.DimensionPreviewDrawParams.SuppressTrailingZeros">
      <summary>
            Hides or shows the trailing zeros.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.DimensionPreviewDrawParams.WidthFactor">
      <summary>
            The text width factor.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.DimensionPreviewDrawParams.ToleranceMode">
      <summary>
            The tolerance mode.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.DimensionPreviewDrawParams.ToleranceSuppressLeadingZeros">
      <summary>
            Hides or shows tolerance leading zeros.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.DimensionPreviewDrawParams.ToleranceSuppressTrailingZeros">
      <summary>
            Hides or shows tolerance trailing zeros.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.DimensionPreviewDrawParams.TolerancePrecision">
      <summary>
            The tolerance precision for primary units dimension.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.DimensionPreviewDrawParams.#ctor(System.Drawing.Color)">
      <summary>
            Color constructor.
            </summary>
      <param name="color">The dimension's color.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.DimensionPreviewDrawParams.#ctor(System.Double,System.Drawing.Color)">
      <summary>
            Standard constructor.
            </summary>
      <param name="textHeight">The text height.</param>
      <param name="color">The dimension's color.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.DimensionPreviewDrawParams.#ctor(System.Double,System.Drawing.Color,System.Single)">
      <summary>
             Standard constructor.
            </summary>
      <param name="textHeight">The text height.</param>
      <param name="color">The dimension's color.</param>
      <param name="lineSize">The dimension's line width.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.DimensionPreviewDrawParams.#ctor(System.Double,System.Drawing.Color,System.Single,devDept.Eyeshot.Entities.linearDimensionUnitsType,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>
            Standard constructor.
            </summary>
      <param name="textHeight">The text height.</param>
      <param name="color">The dimension's color.</param>
      <param name="lineSize">The dimension's line width.</param>
      <param name="linearDimensionUnits">The units format for linear dimension.</param>
      <param name="precision">The precision for primary units dimension.</param>
      <param name="textOverride">The dimension text override.</param>
      <param name="textSuffix">The dimension text suffix.</param>
      <param name="textPrefix">The dimension text prefix.</param>
      <param name="suppressLeadingZeros">Hides or shows the leading zeros.</param>
      <param name="suppressTrailingZeros">Hides or shows the trailing zeros.</param>
    </member>
    <!-- Badly formed XML comment ignored for member "M:devDept.Eyeshot.Control.DimensionPreviewDrawParams.#ctor(System.Double,System.Drawing.Color,System.Single,devDept.Eyeshot.Entities.linearDimensionUnitsType,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean,devDept.Eyeshot.Entities.toleranceType,System.Boolean,System.Boolean,System.Int32)" -->
    <member name="T:devDept.Eyeshot.Control.Grid">
      <summary>Planar grid definition.</summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Grid.ActualMin">
      <summary>
            Gets the actual grid minimum 2D point relative to the grid plane.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Grid.ActualMax">
      <summary>
            Gets the actual grid maximum 2D point relative to the grid plane.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Grid.Lighting">
      <summary>
            When false, the UI element is drawn with a flat color.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Grid.Min">
      <summary>Gets or sets the grid minimum 2D point relative to the grid plane.</summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Grid.Max">
      <summary>Gets or sets the grid maximum 2D point relative to the grid plane.</summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Grid.Step">
      <summary>
            Gets or sets the step between grid lines (meaningful only when <see cref="P:devDept.Eyeshot.Control.Grid.AutoStep" /> is false).
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Grid.LineColor">
      <summary>
            Gets or sets the color used to draw lines.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Grid.ColorAxisX">
      <summary>
            Gets or sets the color used to draw axis X.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Grid.ColorAxisY">
      <summary>
            Gets or sets the color used to draw axis Y.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Grid.FillColor">
      <summary>
            Gets or sets the color used to draw the grid plane.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Grid.BorderColor">
      <summary>
            Gets or sets the color used to draw the grid plane border.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Grid.AutoSize">
      <summary>
            When true, the grid is resized automatically every time the design's bounding box changes.
            </summary>
      <seealso cref="M:devDept.Eyeshot.Control.Grid.ComputeAutomaticSize(devDept.Geometry.Point3D,devDept.Geometry.Point3D,System.Double)" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Grid.Visible">
      <summary>
            Gets or sets the visibility status.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Grid.Plane">
      <summary>
            Grid plane.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Grid.AlwaysBehind">
      <summary>
            When true, the grids is drawn always behind the geometry.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Grid.AutoStep">
      <summary>
            When true, the grid real step is a multiple of the <see cref="P:devDept.Eyeshot.Control.Grid.Step" /> to keep the number of lines between <see cref="P:devDept.Eyeshot.Control.Grid.MinNumberOfLines" /> and <see cref="P:devDept.Eyeshot.Control.Grid.MaxNumberOfLines" />.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Grid.MajorLinesEvery">
      <summary>
            Gets or sets the number of steps between two major lines.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Grid.MajorLineColor">
      <summary>
            Gets or sets the color used to draw major lines.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Grid.MinNumberOfLines">
      <summary>
            When <see cref="P:devDept.Eyeshot.Control.Grid.AutoStep" /> is true, defines the Minimum number of lines.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Grid.MaxNumberOfLines">
      <summary>
            When <see cref="P:devDept.Eyeshot.Control.Grid.AutoStep" /> is true, defines the maximum number of lines.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Grid.#ctor">
      <summary>Empty constructor.</summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Grid.#ctor(devDept.Geometry.Point2D,devDept.Geometry.Point2D,System.Double)">
      <summary>Limits and step constructor.</summary>
      <overloads>Set line color to gray and axis color to black.</overloads>
      <param name="min">Minimum 2D grid point</param>
      <param name="max">Maximum 2D grid point</param>
      <param name="step">Grid step</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Grid.#ctor(devDept.Geometry.Point2D,devDept.Geometry.Point2D,System.Double,devDept.Geometry.Plane)">
      <summary>Limits and step constructor.</summary>
      <overloads>Set line color to gray and axis color to black.</overloads>
      <param name="min">Minimum 2D grid point</param>
      <param name="max">Maximum 2D grid point</param>
      <param name="step">Grid step</param>
      <param name="plane">Grid plane</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Grid.#ctor(devDept.Geometry.Point2D,devDept.Geometry.Point2D,System.Double,devDept.Geometry.Plane,System.Drawing.Color,System.Drawing.Color)">
      <summary>Standard constructor.</summary>
      <param name="min">Minimum 2D grid point</param>
      <param name="max">Maximum 2D grid point</param>
      <param name="step">Grid step</param>
      <param name="plane">Grid plane</param>
      <param name="lineColor">Color used to draw lines</param>
      <param name="axisColor">Color used to draw axes</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Grid.#ctor(devDept.Geometry.Point2D,devDept.Geometry.Point2D,System.Double,devDept.Geometry.Plane,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Standard constructor.</summary>
      <param name="min">Minimum 2D grid point</param>
      <param name="max">Maximum 2D grid point</param>
      <param name="step">Grid step</param>
      <param name="plane">Grid plane</param>
      <param name="lineColor">Color used to draw lines</param>
      <param name="axisColor">Color used to draw axes</param>
      <param name="autoSize">If true, the grid is resized automatically.</param>
      <param name="visible">Visibility status</param>
      <param name="alwaysBehind">If true, the grids is drawn always behind the geometry</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Grid.#ctor(devDept.Geometry.Point2D,devDept.Geometry.Point2D,System.Double,devDept.Geometry.Plane,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)">
      <summary>Standard constructor.</summary>
      <param name="min">Minimum 2D grid point</param>
      <param name="max">Maximum 2D grid point</param>
      <param name="step">Grid step</param>
      <param name="plane">Grid plane</param>
      <param name="lineColor">Color used to draw lines</param>
      <param name="axisColor">Color used to draw axes</param>
      <param name="autoSize">If true, the grid is resized automatically.</param>
      <param name="visible">Visibility status</param>
      <param name="alwaysBehind">If true, the grids is drawn always behind the geometry</param>
      <param name="autoStep">If true, the grid real step is a multiple of the Step to keep the number of lines between MinLines and MaxLines</param>
      <param name="minNumberOfLines">If AutoStep is true, defines the Minimum number of lines</param>
      <param name="maxNumberOfLines">If AutoStep is true, defines the Maximum number of lines</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Grid.#ctor(devDept.Geometry.Point2D,devDept.Geometry.Point2D,System.Double,devDept.Geometry.Plane,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Drawing.Color)">
      <summary>Standard constructor.</summary>
      <param name="min">Minimum 2D grid point</param>
      <param name="max">Maximum 2D grid point</param>
      <param name="step">Grid step</param>
      <param name="plane">Grid plane</param>
      <param name="lineColor">Color used to draw lines</param>
      <param name="axisColor">Color used to draw axes</param>
      <param name="autoSize">If true, the grid is resized automatically.</param>
      <param name="visible">Visibility status</param>
      <param name="alwaysBehind">If true, the grids is drawn always behind the geometry</param>
      <param name="autoStep">If true, the grid real step is a multiple of the Step to keep the number of lines between MinLines and MaxLines</param>
      <param name="minNumberOfLines">If AutoStep is true, defines the Minimum number of lines</param>
      <param name="maxNumberOfLines">If AutoStep is true, defines the Maximum number of lines</param>
      <param name="majorLinesEvery">The number of steps between two major lines</param>
      <param name="majorLineColor">Color used to draw major lines</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Grid.#ctor(devDept.Geometry.Point2D,devDept.Geometry.Point2D,System.Double,devDept.Geometry.Plane,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Drawing.Color)">
      <summary>Standard constructor.</summary>
      <param name="min">Minimum 2D grid point</param>
      <param name="max">Maximum 2D grid point</param>
      <param name="step">Grid step</param>
      <param name="plane">Grid plane</param>
      <param name="lineColor">Color used to draw lines</param>
      <param name="colorAxisX">Color used to draw X axis</param>
      <param name="colorAxisY">Color used to draw Y axis</param>
      <param name="autoSize">If true, the grid is resized automatically.</param>
      <param name="visible">Visibility status</param>
      <param name="alwaysBehind">If true, the grids is drawn always behind the geometry</param>
      <param name="autoStep">If true, the grid real step is a multiple of the Step to keep the number of lines between MinLines and MaxLines</param>
      <param name="minNumberOfLines">If AutoStep is true, defines the Minimum number of lines</param>
      <param name="maxNumberOfLines">If AutoStep is true, defines the Maximum number of lines</param>
      <param name="majorLinesEvery">The number of steps between two major lines</param>
      <param name="majorLineColor">Color used to draw major lines</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Grid.#ctor(devDept.Geometry.Point2D,devDept.Geometry.Point2D,System.Double,devDept.Geometry.Plane,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Drawing.Color)">
      <summary>Standard constructor.</summary>
      <param name="min">Minimum 2D grid point</param>
      <param name="max">Maximum 2D grid point</param>
      <param name="step">Grid step</param>
      <param name="plane">Grid plane</param>
      <param name="lineColor">Color used to draw lines</param>
      <param name="colorAxisX">Color used to draw X axis</param>
      <param name="colorAxisY">Color used to draw Y axis</param>
      <param name="autoSize">If true, the grid is resized automatically.</param>
      <param name="visible">Visibility status</param>
      <param name="alwaysBehind">If true, the grids is drawn always behind the geometry</param>
      <param name="autoStep">If true, the grid real step is a multiple of the Step to keep the number of lines between MinLines and MaxLines</param>
      <param name="minNumberOfLines">If AutoStep is true, defines the Minimum number of lines</param>
      <param name="maxNumberOfLines">If AutoStep is true, defines the Maximum number of lines</param>
      <param name="majorLinesEvery">The number of steps between two major lines</param>
      <param name="majorLineColor">Color used to draw major lines</param>
      <param name="fillColor">Color used to draw the grid plane</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Grid.#ctor(devDept.Geometry.Point2D,devDept.Geometry.Point2D,System.Double,devDept.Geometry.Plane,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Boolean)">
      <summary>Standard constructor.</summary>
      <param name="min">Minimum 2D grid point</param>
      <param name="max">Maximum 2D grid point</param>
      <param name="step">Grid step</param>
      <param name="plane">Grid plane</param>
      <param name="lineColor">Color used to draw lines</param>
      <param name="colorAxisX">Color used to draw X axis</param>
      <param name="colorAxisY">Color used to draw Y axis</param>
      <param name="autoSize">If true, the grid is resized automatically.</param>
      <param name="visible">Visibility status</param>
      <param name="alwaysBehind">If true, the grids is drawn always behind the geometry</param>
      <param name="autoStep">If true, the grid real step is a multiple of the Step to keep the number of lines between MinLines and MaxLines</param>
      <param name="minNumberOfLines">If AutoStep is true, defines the Minimum number of lines</param>
      <param name="maxNumberOfLines">If AutoStep is true, defines the Maximum number of lines</param>
      <param name="majorLinesEvery">The number of steps between two major lines</param>
      <param name="majorLineColor">Color used to draw major lines</param>
      <param name="fillColor">Color used to draw the grid plane</param>
      <param name="lighting">When false, the UI element is drawn with a flat color.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Grid.#ctor(devDept.Geometry.Point2D,devDept.Geometry.Point2D,System.Double,devDept.Geometry.Plane,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Drawing.Color)">
      <summary>Standard constructor.</summary>
      <param name="min">Minimum 2D grid point</param>
      <param name="max">Maximum 2D grid point</param>
      <param name="step">Grid step</param>
      <param name="plane">Grid plane</param>
      <param name="lineColor">Color used to draw lines</param>
      <param name="colorAxisX">Color used to draw X axis</param>
      <param name="colorAxisY">Color used to draw Y axis</param>
      <param name="autoSize">If true, the grid is resized automatically.</param>
      <param name="visible">Visibility status</param>
      <param name="alwaysBehind">If true, the grids is drawn always behind the geometry</param>
      <param name="autoStep">If true, the grid real step is a multiple of the Step to keep the number of lines between MinLines and MaxLines</param>
      <param name="minNumberOfLines">If AutoStep is true, defines the Minimum number of lines</param>
      <param name="maxNumberOfLines">If AutoStep is true, defines the Maximum number of lines</param>
      <param name="majorLinesEvery">The number of steps between two major lines</param>
      <param name="majorLineColor">Color used to draw major lines</param>
      <param name="fillColor">Color used to draw the grid plane</param>
      <param name="lighting">When false, the UI element is drawn with a flat color.</param>
      <param name="borderColor">Color used to draw the grid plane border.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Grid.#ctor(devDept.Eyeshot.Control.Grid)">
      <summary>
            Copy constructor.
            </summary>
      <param name="other">The other grid</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Grid.ComputeAutomaticSize(devDept.Geometry.Point3D,devDept.Geometry.Point3D,System.Double)">
      <summary>
            Computes the automatic grid size.
            </summary>
      <param name="boxMin">The minimum point of the scene</param>
      <param name="boxMax">The maximum point of the scene</param>
      <param name="extensionFactor">The grid extension factor</param>
      <remarks>Override this method to provide a different scene box or extension.</remarks>
      <seealso cref="P:devDept.Eyeshot.Control.Grid.AutoSize" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Grid.Draw(devDept.Graphics.RenderContextBase,devDept.Eyeshot.IViewport)">
      <summary>
            Draws the grid lines.
            </summary>
      <param name="context">The render context</param>
      <param name="viewport">The viewport</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Histogram">
      <summary>
            Histogram user-interface element.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Histogram.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Histogram.#ctor(System.Int32,System.Int32,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean,System.String)">
      <summary>
            Designer constructor.
            </summary>
      <param name="columnWidth">Width of each column in pixels.</param>
      <param name="columnHeight">Height of each column in pixels.</param>
      <param name="title">The title shown on the top-left corner of the diagram.</param>
      <param name="columnColor">The color of the foreground columns.</param>
      <param name="backgroundColor">The color of the background columns.</param>
      <param name="textColor">The color used to draw texts for this diagram. Ignored when <see cref="P:devDept.Eyeshot.Control.Histogram.Lighting" /> is set to false.</param>
      <param name="averageColor">The color of the average mark.</param>
      <param name="highlightColor">The highlighted color of the diagram. A column becomes highlighted when hovering over it.</param>
      <param name="isVisible">Diagram visibility status.</param>
      <param name="showAverage">Average mark visibility status.</param>
      <param name="lighting">Lighting status. Affects the look of the diagram.</param>
      <param name="formatString"> Value's numeric format. Useful to change number format and decimal places.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Histogram.#ctor(devDept.Geometry.HistogramData,System.Int32,System.Int32,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean,System.String)">
      <summary>
            Standard constructor.
            </summary>
      <param name="histogramData"> The Histogram that contains the data to be displayed.&gt;</param>
      <param name="columnWidth">Width of each column in pixels.</param>
      <param name="columnHeight">Height of each column in pixels.</param>
      <param name="title">The title shown on the top-left corner of the diagram.</param>
      <param name="columnColor">The color of the foreground columns.</param>
      <param name="backgroundColor">The color of the background columns.</param>
      <param name="textColor">The color used to draw texts for this diagram. Ignored when <see cref="P:devDept.Eyeshot.Control.Histogram.Lighting" /> is set to false.</param>
      <param name="averageColor">The color of the average mark.</param>
      <param name="highlightColor">The highlighted color of the diagram. A column becomes highlighted when hovering over it.</param>
      <param name="isVisible">Diagram visibility status.</param>
      <param name="showAverage">Average mark visibility status.</param>
      <param name="lighting">Lighting status. Affects the look of the diagram.</param>
      <param name="formatString"> Value's numeric format. Useful to change number format and decimal places.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Histogram.#ctor(devDept.Eyeshot.Control.Histogram)">
      <summary>
            Copy constructor.
            </summary>
      <param name="another">The other Histogram object</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.Histogram.DefaultHistogram">
      <summary>
            Gets the default <see cref="T:devDept.Eyeshot.Control.Histogram" />.
            </summary>
      <returns>The default <see cref="T:devDept.Eyeshot.Control.Histogram" />.</returns>
      <remarks>For internal use only.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Histogram.BackgroundColor">
      <summary>
             Gets or sets the color of the background columns.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Histogram.ColumnColor">
      <summary>
             Gets or sets the color of the foreground columns.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Histogram.HighlightColor">
      <summary>
             Gets or sets the highlighted color of the diagram. A column becomes highlighted when hovering over it.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Histogram.Lighting">
      <summary>
             Gets or sets lighting status. Affects the look of the diagram.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Histogram.Visible">
      <summary>
             Gets or sets the visibility status.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Histogram.ShowAverage">
      <summary>
             Gets or sets the average mark visibility status.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Histogram.FormatString">
      <summary>
             Value's numeric format. Useful to change number format and decimal places.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Histogram.ColumnWidth">
      <summary>
             Gets or sets the column's width in pixels.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Histogram.ColumnHeight">
      <summary>
             Gets or sets the column's height in pixels.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Histogram.Title">
      <summary>
             Gets or sets the title's string. The title is shown on the top-left corner of the diagram.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Histogram.TextColor">
      <summary>
            Gets or sets the color used to draw texts for this diagram. Ignored when <see cref="P:devDept.Eyeshot.Control.Histogram.Lighting" /> is set to false.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Histogram.AverageLineColor">
      <summary>
            Gets or sets the color of the average mark.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Histogram.HistogramData">
      <summary>
            Gets or sets the Histogram that contains the data to be displayed.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Histogram.GetDefaultHistogramUI">
      <summary>
            Gets the default <see cref="T:devDept.Eyeshot.Control.Histogram" />.
            </summary>
      <returns>The default <see cref="T:devDept.Eyeshot.Control.Histogram" />.</returns>
      <remarks>For internal use only.</remarks>
    </member>
    <member name="T:devDept.Eyeshot.Control.Legend">
      <summary>
            Legend settings.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Legend.ScaleForDPI">
      <summary>
            Scales the element for high DPI settings.
            </summary>
      <seealso cref="M:devDept.Geometry.UtilityEx.GetScalingLevel" />
      <remarks>This method needs to be called if the element is added outside of the InitializeComponents() to adjust the rendering for high dpi settings.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Legend.ColorTable">
      <summary>
            Gets or sets the color table.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Legend.Values">
      <summary>
            Gets the legend values.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Legend.GetStringValue(System.Int32)">
      <summary>
            Gets the string corresponding to the n-th value.
            </summary>
      <param name="n">The value index</param>
      <returns>The string of the n-th value.</returns>
      <remarks>Override this method to return a custom string.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Legend.SetRange(System.Double,System.Double)">
      <summary>
            Sets the range of legend values.
            </summary>
      <param name="min">The legend's minimum value</param>
      <param name="max">The legend's maximum value</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Legend.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Legend.#ctor(System.Drawing.Color[])">
      <summary>
            Color table constructor (WinForms). 
            </summary>
      <param name="colorTable">The colors array</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Legend.#ctor(devDept.Eyeshot.Control.Legend)">
      <summary>
            Copy constructor.
            </summary>
      <param name="another">The legend object to copy</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Legend.#ctor(System.Double,System.Double,System.String,System.String,System.Drawing.Point,System.Drawing.Size,System.Boolean,System.Boolean,System.Boolean,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Drawing.Font,System.Drawing.Color[])">
      <summary>
            Deprecated constructor.
            </summary>
      <param name="min">Minimum value</param>
      <param name="max">Maximum value</param>
      <param name="title">Title</param>
      <param name="subtitle">Subtitle</param>
      <param name="position">Top left corner position</param>
      <param name="itemSize">Size of each color rectangle</param>
      <param name="slave">If true, the legend minimum and maximum values are set automatically (FEM only)</param>
      <param name="visible">Visibility status</param>
      <param name="alignRight">If true, values are aligned right</param>
      <param name="formatString">Value's numeric format</param>
      <param name="textBackgroundColor">Text background color</param>
      <param name="titleColor">Title text color</param>
      <param name="textColor">Value text color</param>
      <param name="titleFont">Title font</param>
      <param name="textFont">Value font</param>
      <param name="colorTable">Color table</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Legend.#ctor(System.Double,System.Double,System.String,System.String,System.Drawing.Point,System.Drawing.Size,System.Boolean,System.Boolean,System.Boolean,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color[])">
      <summary>
            Standard constructor.
            </summary>
      <param name="min">Minimum value</param>
      <param name="max">Maximum value</param>
      <param name="title">Title</param>
      <param name="subtitle">Subtitle</param>
      <param name="position">Top left corner position</param>
      <param name="itemSize">Size of each color rectangle</param>
      <param name="slave">If true, the legend minimum and maximum values are set automatically (FEM only)</param>
      <param name="visible">Visibility status</param>
      <param name="alignRight">If true, values are aligned right</param>
      <param name="formatString">Value's numeric format</param>
      <param name="textBackgroundColor">Text background color</param>
      <param name="titleColor">Title text color</param>
      <param name="textColor">Value text color</param>
      <param name="colorTable">Color table</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Legend.#ctor(System.Double,System.Double,System.String,System.String,System.Drawing.Point,System.Drawing.Size,System.Boolean,System.Boolean,System.Boolean,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Drawing.Font,System.Drawing.Color[],System.Boolean)">
      <summary>
            Deprecated constructor.
            </summary>
      <param name="min">Minimum value</param>
      <param name="max">Maximum value</param>
      <param name="title">Title</param>
      <param name="subtitle">Subtitle</param>
      <param name="position">Top left corner position</param>
      <param name="itemSize">Size of each color rectangle</param>
      <param name="slave">If true, the legend minimum and maximum values are set automatically (FEM only)</param>
      <param name="visible">Visibility status</param>
      <param name="alignRight">If true, values are aligned right</param>
      <param name="formatString">Value's numeric format</param>
      <param name="textBackgroundColor">Text background color</param>
      <param name="titleColor">Title text color</param>
      <param name="textColor">Value text color</param>
      <param name="titleFont">Title font</param>
      <param name="textFont">Value font</param>
      <param name="colorTable">Color table</param>
      <param name="lighting">When false, the UI element is drawn with a flat color.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Legend.#ctor(System.Double,System.Double,System.String,System.String,System.Drawing.Point,System.Drawing.Size,System.Boolean,System.Boolean,System.Boolean,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color[],System.Boolean)">
      <summary>
            Standard constructor.
            </summary>
      <param name="min">Minimum value</param>
      <param name="max">Maximum value</param>
      <param name="title">Title</param>
      <param name="subtitle">Subtitle</param>
      <param name="position">Top left corner position</param>
      <param name="itemSize">Size of each color rectangle</param>
      <param name="slave">If true, the legend minimum and maximum values are set automatically (FEM only)</param>
      <param name="visible">Visibility status</param>
      <param name="alignRight">If true, values are aligned right</param>
      <param name="formatString">Value's numeric format</param>
      <param name="textBackgroundColor">Text background color</param>
      <param name="titleColor">Title text color</param>
      <param name="textColor">Value text color</param>
      <param name="colorTable">Color table</param>
      <param name="lighting">When false, the UI element is drawn with a flat color.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Legend.#ctor(System.Double,System.Double,System.String,System.String,System.Drawing.Point,System.Drawing.Size,System.Boolean,System.Boolean,System.Boolean,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color[],System.Boolean,System.Boolean)">
      <summary>
            Standard constructor.
            </summary>
      <param name="min">Minimum value</param>
      <param name="max">Maximum value</param>
      <param name="title">Title</param>
      <param name="subtitle">Subtitle</param>
      <param name="position">Top left corner position</param>
      <param name="itemSize">Size of each color rectangle</param>
      <param name="slave">If true, the legend minimum and maximum values are set automatically (FEM only)</param>
      <param name="visible">Visibility status</param>
      <param name="alignRight">If true, values are aligned right</param>
      <param name="formatString">Value's numeric format</param>
      <param name="textBackgroundColor">Text background color</param>
      <param name="titleColor">Title text color</param>
      <param name="textColor">Value text color</param>
      <param name="colorTable">Color table</param>
      <param name="lighting">When false, the UI element is drawn with a flat color.</param>
      <param name="alignVerticalMiddle">If true, values are vertically aligned to the middle of the colored rectangles</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Legend.#ctor(System.Double,System.Double,System.String,System.String,System.Drawing.Point,System.Drawing.Size,System.Boolean,System.Boolean,System.Boolean,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Drawing.Font,System.Drawing.Color[],System.Boolean,System.Boolean)">
      <summary>
            Standard constructor (WinForms).
            </summary>
      <param name="min">Minimum value</param>
      <param name="max">Maximum value</param>
      <param name="title">Title</param>
      <param name="subtitle">Subtitle</param>
      <param name="position">Top left corner position</param>
      <param name="itemSize">Size of each color rectangle</param>
      <param name="slave">If true, the legend minimum and maximum values are set automatically (FEM only)</param>
      <param name="visible">Visibility status</param>
      <param name="alignRight">If true, values are aligned right</param>
      <param name="formatString">Value's numeric format</param>
      <param name="textBackgroundColor">Text background color</param>
      <param name="titleColor">Title text color</param>
      <param name="textColor">Value text color</param>
      <param name="titleFont">Title font</param>
      <param name="textFont">Value font</param>
      <param name="colorTable">Color table</param>
      <param name="lighting">When false, the UI element is drawn with a flat color.</param>
      <param name="alignVerticalMiddle">If true, values are vertically aligned to the middle of the colored rectangles</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.Legend.Min">
      <summary>
            Gets or sets legend minimum value.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Legend.Max">
      <summary>
            Gets or sets legend maximum value.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Legend.Title">
      <summary>
            Gets or sets the legend title.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Legend.Subtitle">
      <summary>
            Gets or sets the legend subtitle.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Legend.IsSlave">
      <summary>
            If true, the legend minimum and maximum values are set automatically (FEM only).
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Legend.Position">
      <summary>Top left corner position.</summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Legend.ItemSize">
      <summary>Size of each color rectangle.</summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Legend.Visible">
      <summary>
            Visibility status.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Legend.FormatString">
      <summary>
             Value's numeric format. Useful to change number format and decimal places.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Legend.AlignValuesRight">
      <summary>If true, values are aligned right.</summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Legend.AlignValuesVerticalMiddle">
      <summary>
            If true, the values are vertically aligned to the middle of the colored rectangles.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Legend.TextBackgroundColor">
      <summary>Text background color (supports semi-transparent colors).</summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Legend.TextColor">
      <summary>Value text color.</summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Legend.TitleColor">
      <summary>Title text color.</summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Legend.TextFont">
      <summary>Gets or sets the value font.</summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Legend.TitleFont">
      <summary>Title font.</summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Legend.Lighting">
      <summary>
            When false, the UI element is drawn with a flat color.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Legend.BuildGradient(System.Int32)">
      <summary>
            Builds a red to blue gradient array of colors.
            </summary>
      <param name="hueSteps">Number of hue steps</param>
      <returns>The resulting array of colors.</returns>
    </member>
    <member name="P:devDept.Eyeshot.Control.Legend.RedToBlue17">
      <summary>
            Standard Red to Blue color gradient (17 items).
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Legend.RedToBlue9">
      <summary>
            Standard Red to Blue color gradient (9 items).
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Legend.RedToBlue33">
      <summary>
            Standard Red to Blue color gradient (33 items).
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Legend.FactorOfSafety15">
      <summary>
            Factor of safety color gradient (15 items).
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.ObjectManipulatorPartProperties">
      <summary>
            Class that holds the properties for the ObjectManipulator parts.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ObjectManipulatorPartProperties.#ctor(System.Drawing.Color,System.Boolean,System.Boolean)">
      <summary>
            Constructor.
            </summary>
      <param name="color">The color</param>
      <param name="visible">The visibility</param>
      <param name="selectable">The selectability</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.ObjectManipulatorPartProperties.Color">
      <summary>
            Gets or sets the color of the element.
            </summary>
      <remarks>
                You need to call the <see cref="!:Design.CompileUserInterfaceElements()" /> to
                see the effect of your changes at run-time.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ObjectManipulatorPartProperties.Visible">
      <summary>
            Gets or sets the visibility of the part.
            </summary>
      <remarks>
                You need to call the <see cref="!:Design.CompileUserInterfaceElements()" /> to
                see the effect of your changes at run-time.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ObjectManipulatorPartProperties.Selectable">
      <summary>
            if true, the part is selectable and is drawn with its <see cref="P:devDept.Eyeshot.Control.ObjectManipulatorPartProperties.Color" />, else it's not selectable and drawn with grey color.
            </summary>
      <remarks>
                You need to call the <see cref="!:Design.CompileUserInterfaceElements()" /> to
                see the effect of your changes at run-time.
            </remarks>
    </member>
    <member name="T:devDept.Eyeshot.Control.ObjectManipulator">
      <summary>
            Object manipulator class.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ObjectManipulator.FormatString">
      <summary>
             Value's numeric format. Useful to change number format and decimal places.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ObjectManipulator.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ObjectManipulator.#ctor(System.Int32,System.Boolean,System.Boolean,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties)">
      <summary>
            Deprecated constructor.
            </summary>
      <param name="ballSize">Size of the sphere in pixels</param>
      <param name="visible">Visibility of the Object Manipulator</param>
      <param name="showOriginalWhileEditing">If true, shows the original entities along with the copies during editing</param>
      <param name="ball">Properties of the sphere on center of Objectmanipulator</param>
      <param name="translateX">Properties of the arrow for translation on X</param>
      <param name="translateY">Properties of the arrow for translation on Y</param>
      <param name="translateZ">Properties of the arrow for translation on Z</param>
      <param name="rotateX">Properties of the arrow for rotation around X</param>
      <param name="rotateY">Properties of the arrow for rotation around Y</param>
      <param name="rotateZ">Properties of the arrow for rotation around Z</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ObjectManipulator.#ctor(System.Int32,System.Boolean,System.Boolean,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,System.Double,System.Double)">
      <summary>
            Standard constructor.
            </summary>
      <param name="ballSize">Size of the sphere in pixels</param>
      <param name="visible">Visibility of the Object Manipulator</param>
      <param name="showOriginalWhileEditing">If true, shows the original entities along with the copies during editing</param>
      <param name="ball">Properties of the sphere on center of Objectmanipulator</param>
      <param name="translateX">Properties of the arrow for translation on X</param>
      <param name="translateY">Properties of the arrow for translation on Y</param>
      <param name="translateZ">Properties of the arrow for translation on Z</param>
      <param name="rotateX">Properties of the arrow for rotation around X</param>
      <param name="rotateY">Properties of the arrow for rotation around Y</param>
      <param name="rotateZ">Properties of the arrow for rotation around Z</param>
      <param name="rotationStep">Rotation step angle in radians</param>
      <param name="translationStep">Translation step distance</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ObjectManipulator.#ctor(System.Int32,System.Boolean,System.Boolean,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,System.Double,System.Double,System.Boolean)">
      <summary>
            Standard constructor.
            </summary>
      <param name="ballSize">Size of the sphere in pixels</param>
      <param name="visible">Visibility of the Object Manipulator</param>
      <param name="showOriginalWhileEditing">If true, shows the original entities along with the copies during editing</param>
      <param name="ball">Properties of the sphere on center of Objectmanipulator</param>
      <param name="translateX">Properties of the arrow for translation on X</param>
      <param name="translateY">Properties of the arrow for translation on Y</param>
      <param name="translateZ">Properties of the arrow for translation on Z</param>
      <param name="rotateX">Properties of the arrow for rotation around X</param>
      <param name="rotateY">Properties of the arrow for rotation around Y</param>
      <param name="rotateZ">Properties of the arrow for rotation around Z</param>
      <param name="rotationStep">Rotation step angle in radians</param>
      <param name="translationStep">Translation step distance</param>
      <param name="lighting">When false, the UI element is drawn with a flat color.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ObjectManipulator.#ctor(System.Int32,System.Boolean,System.Boolean,devDept.Eyeshot.Control.ObjectManipulator.styleType,devDept.Eyeshot.Control.ObjectManipulator.ballActionType,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,System.Double,System.Double,System.Double,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Boolean)">
      <summary>
            Standard constructor.
            </summary>
      <param name="ballSize">Size of the sphere in pixels</param>
      <param name="visible">Visibility of the Object Manipulator</param>
      <param name="showOriginalWhileEditing">If true, shows the original entities along with the copies during editing</param>
      <param name="styleMode">
      </param>
      <param name="ballActionMode">
      </param>
      <param name="ball">Properties of the sphere on center of Objectmanipulator</param>
      <param name="translateX">Properties of the arrow for translation on X</param>
      <param name="translateY">Properties of the arrow for translation on Y</param>
      <param name="translateZ">Properties of the arrow for translation on Z</param>
      <param name="rotateX">Properties of the arrow for rotation around X</param>
      <param name="rotateY">Properties of the arrow for rotation around Y</param>
      <param name="rotateZ">Properties of the arrow for rotation around Z</param>
      <param name="scaleX">Properties of the box for scaling on X</param>
      <param name="scaleY">Properties of the box for scaling on Y</param>
      <param name="scaleZ">Properties of the box for scaling on Z</param>
      <param name="rotationStep">Rotation step angle in radians</param>
      <param name="translationStep">Translation step distance</param>
      <param name="scalingStep">Scaling step factor</param>
      <param name="transformationLabelFill">
      </param>
      <param name="transformationLabelTextColor">
      </param>
      <param name="labelFont">The transformation label font</param>
      <param name="lighting">When false, the UI element is drawn with a flat color.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ObjectManipulator.#ctor(System.Int32,System.Boolean,System.Boolean,devDept.Eyeshot.Control.ObjectManipulator.styleType,devDept.Eyeshot.Control.ObjectManipulator.ballActionType,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,devDept.Eyeshot.Control.ObjectManipulatorPartProperties,System.Double,System.Double,System.Double,System.Drawing.Color,System.Drawing.Color,System.Boolean)">
      <summary>
            Standard constructor.
            </summary>
      <param name="ballSize">Size of the sphere in pixels</param>
      <param name="visible">Visibility of the Object Manipulator</param>
      <param name="showOriginalWhileEditing">If true, shows the original entities along with the copies during editing</param>
      <param name="styleMode">
      </param>
      <param name="ballActionMode">
      </param>
      <param name="ball">Properties of the sphere on center of Objectmanipulator</param>
      <param name="translateX">Properties of the arrow for translation on X</param>
      <param name="translateY">Properties of the arrow for translation on Y</param>
      <param name="translateZ">Properties of the arrow for translation on Z</param>
      <param name="rotateX">Properties of the arrow for rotation around X</param>
      <param name="rotateY">Properties of the arrow for rotation around Y</param>
      <param name="rotateZ">Properties of the arrow for rotation around Z</param>
      <param name="scaleX">Properties of the box for scaling on X</param>
      <param name="scaleY">Properties of the box for scaling on Y</param>
      <param name="scaleZ">Properties of the box for scaling on Z</param>
      <param name="rotationStep">Rotation step angle in radians</param>
      <param name="translationStep">Translation step distance</param>
      <param name="scalingStep">Scaling step factor</param>
      <param name="transformationLabelFill">
      </param>
      <param name="transformationLabelTextColor">
      </param>
      <param name="lighting">When false, the UI element is drawn with a flat color.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ObjectManipulator.DrawLabel(devDept.Eyeshot.DrawSceneParams)">
      <summary>
            Draws the transformation label.
            </summary>
      <param name="myParams">The draw parameters</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.ObjectManipulator.TransformationLabelOffset">
      <summary>
            Gets or sets the Transformation Label offset. 
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ObjectManipulator.ShowTransformationLabel">
      <summary>
            If true, a label containing the information about the current transformation is shown
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ObjectManipulator.ShowTransformationLabelUnits">
      <summary>
            If true, the units are displayed next to the transformation label value
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ObjectManipulator.TransformationLabelFillColor">
      <summary>
            The transformation label fill color
            </summary>
      <remarks>
            You need to call the <see cref="!:Design.CompileUserInterfaceElements()" /> to
            see the effect of your changes at run-time.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ObjectManipulator.TransformationLabelTextColor">
      <summary>
            The transformation label text color
            </summary>
      <remarks>
            You need to call the <see cref="!:Design.CompileUserInterfaceElements()" /> to
            see the effect of your changes at run-time.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ObjectManipulator.Position">
      <summary>
            The world position.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ObjectManipulator.ShowOriginalWhileEditing">
      <summary>
            If true, both the original and edited copies of the entities are shown during editing, else only the edited copies are shown.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ObjectManipulator.Ball">
      <summary>
            Gets or sets the properties of the translation on view ball.
            </summary>
      <remarks>
                You need to call the <see cref="!:Design.CompileUserInterfaceElements()" /> to
                see the effect of your changes at run-time.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ObjectManipulator.TranslateX">
      <summary>
            Gets or sets the properties of the arrow for the translation on X axis.
            </summary>
      <remarks>
                You need to call the <see cref="!:Design.CompileUserInterfaceElements()" /> to
                see the effect of your changes at run-time.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ObjectManipulator.TranslateY">
      <summary>
            Gets or sets the properties of the arrow for the translation on Y axis.
            </summary>
      <remarks>
                You need to call the <see cref="!:Design.CompileUserInterfaceElements()" /> to
                see the effect of your changes at run-time.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ObjectManipulator.TranslateZ">
      <summary>
            Gets or sets the properties of the arrow for the translation on Z axis.
            </summary>
      <remarks>
                You need to call the <see cref="!:Design.CompileUserInterfaceElements()" /> to
                see the effect of your changes at run-time.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ObjectManipulator.RotateX">
      <summary>
            Gets or sets the properties of the arc for the rotation around X axis.
            </summary>
      <remarks>
                You need to call the <see cref="!:Design.CompileUserInterfaceElements()" /> to
                see the effect of your changes at run-time.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ObjectManipulator.RotateY">
      <summary>
            Gets or sets the properties of the arc for the rotation around Y axis.
            </summary>
      <remarks>
                You need to call the <see cref="!:Design.CompileUserInterfaceElements()" /> to
                see the effect of your changes at run-time.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ObjectManipulator.RotateZ">
      <summary>
            Gets or sets the properties of the arc for the rotation around Z axis.
            </summary>
      <remarks>
                You need to call the <see cref="!:Design.CompileUserInterfaceElements()" /> to
                see the effect of your changes at run-time.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ObjectManipulator.ScaleZ">
      <summary>
            Gets or sets the properties of the box for the scale along Z axis.
            </summary>
      <remarks>
                You need to call the <see cref="!:Design.CompileUserInterfaceElements()" /> to
                see the effect of your changes at run-time.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ObjectManipulator.ScaleY">
      <summary>
            Gets or sets the properties of the box for the scale along Y axis.
            </summary>
      <remarks>
                You need to call the <see cref="!:Design.CompileUserInterfaceElements()" /> to
                see the effect of your changes at run-time.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ObjectManipulator.ScaleX">
      <summary>
            Gets or sets the properties of the box for the scale along X axis.
            </summary>
      <remarks>
                You need to call the <see cref="!:Design.CompileUserInterfaceElements()" /> to
                see the effect of your changes at run-time.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ObjectManipulator.RotationStep">
      <summary>
            Gets or sets the rotation step angle in radians.
            </summary>
      <remarks>Use 0 for a continuous movement.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ObjectManipulator.TranslationStep">
      <summary>
            Gets or sets the translation step distance.
            </summary>
      <remarks>Use 0 for a continuous movement.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ObjectManipulator.ScalingStep">
      <summary>
            Gets or sets the scaling step distance.
            </summary>
      <remarks>Use 0 for a continuous movement.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ObjectManipulator.TranslationRange">
      <summary>
            Gets or sets the translation range.
            </summary>
      <remarks>Applies only to the three translation axes, not to the translation on view ball.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ObjectManipulator.StyleMode">
      <summary>
            Gets or sets the style of the object manipulator.
            </summary>
      <remarks>
                You need to call the <see cref="!:Design.CompileUserInterfaceElements()" /> to
                see the effect of your changes at run-time.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ObjectManipulator.BallActionMode">
      <summary>
            Gets or sets the action mode applied to the origin sphere of the manipulator. 
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.ObjectManipulator.ObjectManipulatorEventArgs">
      <summary>
            Object manipulator event arguments class.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ObjectManipulator.ObjectManipulatorEventArgs.ActionMode">
      <summary>
            Gets the current action mode.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ObjectManipulator.ObjectManipulatorEventArgs.Axis">
      <summary>
            Gets the axis on which the transformation is performed.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.ObjectManipulator.ObjectManipulatorEventHandler">
      <summary>
            Event handler for ObjectManipulator events.
            </summary>
      <param name="sender">The sender</param>
      <param name="e">The arguments</param>
    </member>
    <member name="E:devDept.Eyeshot.Control.ObjectManipulator.MouseDown">
      <summary>
            Mouse down event.
            </summary>
    </member>
    <member name="E:devDept.Eyeshot.Control.ObjectManipulator.MouseUp">
      <summary>
            Mouse up event.
            </summary>
    </member>
    <member name="E:devDept.Eyeshot.Control.ObjectManipulator.MouseOver">
      <summary>
            Mouse over event.
            </summary>
    </member>
    <member name="E:devDept.Eyeshot.Control.ObjectManipulator.MouseDrag">
      <summary>
            Mouse drag event.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ObjectManipulator.OnDrag(System.Drawing.Point@,System.Drawing.Point,devDept.Eyeshot.Control.Viewport)">
      <summary>
            Method called during the drag.
            </summary>
      <param name="lastPoint">Last mouse point in viewport coordinates</param>
      <param name="curPoint">Current mouse point in viewport coordinates</param>
      <param name="viewport">
      </param>
      <returns>
      </returns>
    </member>
    <member name="F:devDept.Eyeshot.Control.ObjectManipulator.styleType.Standard">
      <summary>
            The style of the object manipulator applyed to the older version of Eyeshot.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ObjectManipulator.styleType.Rings">
      <summary>
            Style with same dimension and proportion of standard one but circle rings for rotation parts.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ObjectManipulator.styleType.Large">
      <summary>
            Rings style with larger arrow axes and rings.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ObjectManipulator.ballActionType.Translate">
      <summary>
            Translation on view
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ObjectManipulator.ballActionType.Rotate">
      <summary>
            Rotation on view
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ObjectManipulator.ballActionType.Scale">
      <summary>
            Uniform scaling
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.ObjectManipulator.actionType">
      <summary>
            Object manipulator action type enum.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ObjectManipulator.actionType.TranslateOnView">
      <summary>
            Translation on view
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ObjectManipulator.actionType.TranslateOnAxis">
      <summary>
            Translation on one of the three manipulator axes
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ObjectManipulator.actionType.Rotate">
      <summary>
            Rotation on one of the three manipulator axes
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ObjectManipulator.actionType.RotateOnView">
      <summary>
            Rotation on view
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ObjectManipulator.actionType.Scale">
      <summary>
            Scaling on one of the three manipulator axes
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ObjectManipulator.actionType.UniformScale">
      <summary>
            Uniform scaling
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ObjectManipulator.Transformation">
      <summary>
            Gets or sets the transformation applied to the entities being edited.
            </summary>
      <remarks>The final transformation applied to the object is given by the product of this transformation and the inverse of <see cref="P:devDept.Eyeshot.Control.ObjectManipulator.InitialTransformation" /></remarks>
      <remarks>To correctly update the drawing of the selected entities preview it's necessary to set a new Transformation object and not change the inner values of the Transformation.Matrix.</remarks>
      <seealso cref="P:devDept.Eyeshot.Control.ObjectManipulator.InitialTransformation" />
    </member>
    <member name="P:devDept.Eyeshot.Control.ObjectManipulator.InitialTransformation">
      <summary>
            Gets or sets the initial transformation applied to the manipulator.
            </summary>
      <remarks>This transformation is not applied to the entities being transformed by the ObjectManipulator.</remarks>
      <seealso cref="P:devDept.Eyeshot.Control.ObjectManipulator.Transformation" />
    </member>
    <member name="M:devDept.Eyeshot.Control.ObjectManipulator.Enable(devDept.Geometry.Transformation,System.Boolean)">
      <summary>
             Activates the Manipulator to move the selected entities.
            </summary>
      <param name="initialTransform">The initial transformation</param>
      <param name="centerOnEntities">If true, positions the manipulator in the center of the selected entities</param>
      <seealso cref="T:devDept.Eyeshot.Control.ObjectManipulator" />
    </member>
    <member name="M:devDept.Eyeshot.Control.ObjectManipulator.Enable(devDept.Geometry.Transformation,System.Boolean,System.Collections.Generic.IList{devDept.Eyeshot.Entities.Entity})">
      <summary>
            Activates the ObjectManipulator to move the given entities.
            </summary>
      <param name="initialTransform">The initial transformation</param>
      <param name="centerOnEntities">If true, positions the manipulator in the center of the entities</param>
      <param name="entities">The entities to move</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ObjectManipulator.Apply">
      <summary>
            Applies the transformation of the <see cref="T:devDept.Eyeshot.Control.ObjectManipulator" /> on the selected entities and hides it.
            </summary>
      <remarks>
            You need to call <see cref="M:devDept.Eyeshot.EntityList.Regen(devDept.Eyeshot.RegenOptions)" /> to see the effect of this command.
            </remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.ObjectManipulator.Cancel">
      <summary>
            Cancels the transformation of the <see cref="T:devDept.Eyeshot.Control.ObjectManipulator" /> and hides it.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ObjectManipulator.UpdateBoundingBox">
      <summary>
            Computes the design bounding box when the ObjectManipulator is enabled.       
            </summary>
      <remarks>It's important to call this method when the ObjectManipulator is enabled and visibility or size of some entities changes.</remarks>
    </member>
    <member name="T:devDept.Eyeshot.Control.coordinateSystemPositionType">
      <summary>
            Position type.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.IUserInterfaceElement">
      <summary>
            Interface used for Designer purposes.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.IUserInterfaceElement.Disposed">
      <summary>
            Gets a boolean indicating whether the element has been disposed.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.IUserInterfaceElement.GetThumbnail(devDept.Eyeshot.Control.Viewport,System.Drawing.Size,System.Drawing.Color)">
      <summary>
            Gets a bitmap of the user interface element.
            </summary>
      <param name="viewport">The viewport it belongs to</param>
      <param name="size">The desired bitmap size</param>
      <param name="backgroundColor">The color desired for the background</param>
      <returns>The bitmap of the UI element.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.IUserInterfaceElement.GetBounds(devDept.Eyeshot.Control.Viewport)">
      <summary>
            Gets the bounds rectangle in screen coordinates.
            </summary>
      <param name="viewport">The viewport</param>
      <returns>The bounds rectangle in screen coordinates (0 on top).</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.IUserInterfaceElement.Update(devDept.Eyeshot.Control.IUserInterfaceElement)">
      <summary>
            Updates the contents of the element with the data from another element.
            </summary>
      <param name="another">The other element whose contents are copied to this element</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.DisposableBase">
      <summary>
            Base class providing IDisposable interface.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.UserInterfaceBase">
      <summary>
            Base class for <see cref="T:devDept.Eyeshot.Control.Legend" /> and <see cref="T:devDept.Eyeshot.Control.Viewport" />.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.UserInterfaceBase.ScaleForDPI">
      <summary>
            Scales the element for high DPI settings.
            </summary>
      <seealso cref="M:devDept.Geometry.UtilityEx.GetScalingLevel" />
      <remarks>This method needs to be called if the element is added outside of the InitializeComponents() to adjust the rendering for high dpi settings.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.UserInterfaceBase.GetDefaultLayerName(devDept.Eyeshot.Control.Workspace)">
      <summary>
            Use this method to get the correct layer name for internal Meshes.
            </summary>
      <returns>The name of the default layer. It is got from the Workspace Layers collection.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.UserInterfaceBase.GetThumbnail(devDept.Eyeshot.Control.Viewport,System.Drawing.Size,System.Drawing.Color)">
      <summary>
            Gets a thumbnail bitmap of the user interface element.
            </summary>
      <param name="viewport">The viewport it belongs to</param>
      <param name="size">The desired bitmap size</param>
      <param name="backgroundColor">The color desired for the background</param>
      <returns>The bitmap of the UI element.</returns>
      <remarks>Size is limited to 512 x 512</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.UserInterfaceBase.GetBounds(devDept.Eyeshot.Control.Viewport)">
      <summary>
            Gets the bounds rectangle in screen coordinates.
            </summary>
      <param name="viewport">The viewport</param>
      <returns>The bounds rectangle in screen coordinates.</returns>
    </member>
    <member name="P:devDept.Eyeshot.Control.UserInterfaceBase.CustomViewport">
      <summary>
            Tells if the UI element is drawn with a custom viewport.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.UserInterfaceBase.LocationAtOrigin">
      <summary>
            When doing a render to Bitmap of the item, must not change the viewport origin.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.UserInterfaceSymbolBase">
      <summary>
             Base class for <see cref="T:devDept.Eyeshot.Control.CoordinateSystemIcon" />, <see cref="T:devDept.Eyeshot.Control.OriginSymbol" /> and <see cref="T:devDept.Eyeshot.Control.ViewCubeIcon" />.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.UserInterfaceSymbolBase.ScaleForDPI">
      <summary>
            Scales the element for high DPI settings.
            </summary>
      <seealso cref="M:devDept.Geometry.UtilityEx.GetScalingLevel" />
      <remarks>This method needs to be called if the element is added outside of the InitializeComponents() to adjust the rendering for high dpi settings.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.UserInterfaceSymbolBase.GetScalingLevel">
      <summary>
            Gets the display's scale factor.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.UserInterfaceSymbolBase.Size">
      <summary>
            Gets or sets the size in pixels.
            </summary>
      <remarks>
                You need to call the <see cref="!:Design.CompileUserInterfaceElements()" /> to
                see the effect of your changes at run-time.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.UserInterfaceSymbolBase.Visible">
      <summary>
            Gets or sets the visibility status.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.UserInterfaceSymbolBase.CheckAndFixDefaultLayerName(devDept.Eyeshot.Control.Workspace)">
      <summary>
            Use this method to check and fix the layer name for internal Meshes when the ui element is assigned to the Viewport.
            </summary>
      <returns>The name of the default layer. It is got from the Workspace Layers collection.</returns>
    </member>
    <member name="P:devDept.Eyeshot.Control.UserInterfaceSymbolBase.Entities">
      <summary>
            Gets or sets the mesh entities used to draw the CoordinateSystemIcon.
            </summary>
      <remarks>To be correctly visualized the entities must have a maximum size of 7.5 units.</remarks>
    </member>
    <member name="F:devDept.Eyeshot.Control.UserInterfaceSymbolBase.PickedEntity">
      <summary>
            The picked part.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.UserInterfaceSymbolBase.OnMouseDown(System.Windows.Forms.MouseEventArgs,devDept.Eyeshot.Control.Viewport)">
      <summary>
            Method called when the mouse is pressed on a UI element.
            </summary>
      <param name="e">The mouse data in screen coordinates</param>
      <param name="viewport">
      </param>
      <returns>True when an internal entity is picked, otherwise false.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.UserInterfaceSymbolBase.OnMouseUp(System.Windows.Forms.MouseEventArgs,devDept.Eyeshot.Control.Viewport)">
      <summary>
            Method called when the mouse is released on a UI element.
            </summary>
      <param name="e">The mouse data in screen coordinates</param>
      <param name="viewport">
      </param>
      <returns>True when an internal entity is picked, otherwise false.</returns>
    </member>
    <member name="P:devDept.Eyeshot.Control.UserInterfaceSymbolBase.Transformation">
      <summary>
            Gets or sets the transformation applied to the object.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.UserInterfaceSymbolBase.GetModelViewMatrix(devDept.Eyeshot.Camera,System.Double)">
      <summary>
            Gets the modelview matrix to draw the user interface symbol.
            </summary>
      <param name="camera">The camera of the viewport</param>
      <param name="dist">The desired distance of the camera from the target</param>
      <returns>
      </returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.UserInterfaceSymbolBase.PreDrawOnDepthBuffer(devDept.Graphics.RenderContextBase)">
      <summary>
            Prepares to draw on the depth buffer.
            </summary>
      <param name="data">
      </param>
    </member>
    <member name="M:devDept.Eyeshot.Control.UserInterfaceSymbolBase.PostDrawOnDepthBuffer(devDept.Graphics.RenderContextBase)">
      <summary>
            Restores previous states at the end of the draw on depth buffer.
            </summary>
      <param name="data">
      </param>
    </member>
    <member name="T:devDept.Eyeshot.Control.CoordinateSystemBase">
      <summary>
             Base class for <see cref="T:devDept.Eyeshot.Control.CoordinateSystemIcon" />, <see cref="T:devDept.Eyeshot.Control.OriginSymbol" /> and <see cref="T:devDept.Eyeshot.Control.ViewCubeIcon" />.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.CoordinateSystemBase.Lighting">
      <summary>
            When false, the UI element is drawn with a flat color.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.CoordinateSystemBase.EdgeColor">
      <summary>
            Gets or sets the edge color.
            </summary>
      <remarks>In use when <see cref="P:devDept.Eyeshot.Control.CoordinateSystemBase.Lighting" /> is false only.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.CoordinateSystemBase.ScaleForDPI">
      <summary>
            Scales the element for high DPI settings.
            </summary>
      <seealso cref="M:devDept.Geometry.UtilityEx.GetScalingLevel" />
      <remarks>This method needs to be called if the element is added outside of the InitializeComponents() to adjust the rendering for high dpi settings.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.CoordinateSystemBase.LabelFont">
      <summary>
            Gets or sets the label font.
            </summary>
      <remarks>
                You need to call the <see cref="!:Design.CompileUserInterfaceElements()" /> to
                see the effect of your changes at run-time.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.CoordinateSystemBase.LabelColorX">
      <summary>
            Gets or sets the label color when Lighting is true.
            </summary>
      <remarks>
                You need to call the <see cref="!:Design.CompileUserInterfaceElements()" /> to
                see the effect of your changes at run-time.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.CoordinateSystemBase.LabelColorY">
      <summary>
            Gets or sets the label color when Lighting is true.
            </summary>
      <remarks>
                You need to call the <see cref="!:Design.CompileUserInterfaceElements()" /> to
                see the effect of your changes at run-time.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.CoordinateSystemBase.LabelColorZ">
      <summary>
            Gets or sets the label color when Lighting is true.
            </summary>
      <remarks>
                You need to call the <see cref="!:Design.CompileUserInterfaceElements()" /> to
                see the effect of your changes at run-time.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.CoordinateSystemBase.LabelColorName">
      <summary>
            Gets or sets the label color when Lighting is true.
            </summary>
      <remarks>
                You need to call the <see cref="!:Design.CompileUserInterfaceElements()" /> to
                see the effect of your changes at run-time.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.CoordinateSystemBase.ArrowColorX">
      <summary>
            Gets or sets the color of the X axis arrow, applies only to the coordinate system style mode.
            </summary>
      <remarks>
                You need to call the <see cref="!:Design.CompileUserInterfaceElements()" /> to
                see the effect of your changes at run-time.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.CoordinateSystemBase.ArrowColorY">
      <summary>
            Gets or sets the color of the Y axis arrow, applies only to the coordinate system style mode.
            </summary>
      <remarks>
                You need to call the <see cref="!:Design.CompileUserInterfaceElements()" /> to
                see the effect of your changes at run-time.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.CoordinateSystemBase.ArrowColorZ">
      <summary>
            Gets or sets the color of the Z axis arrow, applies only to the coordinate system style mode.
            </summary>
      <remarks>
                You need to call the <see cref="!:Design.CompileUserInterfaceElements()" /> to
                see the effect of your changes at run-time.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.CoordinateSystemBase.LabelAxisX">
      <summary>
            Gets or sets the X axis label.
            </summary>
      <remarks>
                You need to call the <see cref="!:Design.CompileUserInterfaceElements()" /> to
                see the effect of your changes at run-time.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.CoordinateSystemBase.LabelAxisY">
      <summary>
            Gets or sets the Y axis label.
            </summary>
      <remarks>
                You need to call the <see cref="!:Design.CompileUserInterfaceElements()" /> to
                see the effect of your changes at run-time.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.CoordinateSystemBase.LabelAxisZ">
      <summary>
            Gets or sets the Z axis label.
            </summary>
      <remarks>
                You need to call the <see cref="!:Design.CompileUserInterfaceElements()" /> to
                see the effect of your changes at run-time.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.CoordinateSystemBase.LabelOrigin">
      <summary>
            Gets or sets the origin label.
            </summary>
      <remarks>
                You need to call the <see cref="!:Design.CompileUserInterfaceElements()" /> to
                see the effect of your changes at run-time.
            </remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.CoordinateSystemBase.CreateLabels(devDept.Graphics.RenderContextBase,devDept.Geometry.Point3D,System.String,devDept.Geometry.Point3D,System.String,devDept.Geometry.Point3D,System.String,devDept.Geometry.Point3D,System.String,devDept.Eyeshot.Control.Viewport,System.Drawing.ContentAlignment)">
      <summary>
            Creates the labels of the object.
            </summary>
      <param name="renderContext">The render context</param>
      <param name="posLabelAxisX">Position of the axis-X label</param>
      <param name="textAxisX">Text of the axis-X label</param>
      <param name="posLabelAxisY">Position of the axis-Y label</param>
      <param name="textAxisY">Text of the axis-Y label</param>
      <param name="posLabelAxisZ">Position of the axis-Z label</param>
      <param name="textAxisZ">Text of the axis-Z label</param>
      <param name="posLabelOrigin">Position of the origin label</param>
      <param name="textOrigin">Text of the origin label</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.CoordinateSystemBase.#ctor(System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.String,System.String,System.String,System.String,System.Boolean,System.Int32,devDept.Geometry.Transformation,System.Boolean)">
      <summary>Deprecated constructor.</summary>
      <param name="labelFont">Label font</param>
      <param name="labelColor">Label color</param>
      <param name="arrowColorX">X axis arrow color</param>
      <param name="arrowColorY">Y axis arrow color</param>
      <param name="arrowColorZ">Z axis arrow color</param>
      <param name="labelOrigin">Origin label string</param>
      <param name="labelAxisX">X axis label string</param>
      <param name="labelAxisY">Y axis label string</param>
      <param name="labelAxisZ">Z axis label string</param>
      <param name="visible">Visibility status</param>
      <param name="size">Size in pixels</param>
      <param name="transformation">The symbol transformation</param>
      <param name="lighting">When false, the UI element is drawn with a flat color.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.CoordinateSystemBase.#ctor(System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.String,System.String,System.String,System.String,System.Boolean,System.Int32,devDept.Geometry.Transformation,System.Boolean)">
      <summary>Deprecated constructor.</summary>
      <param name="labelFont">Label font</param>
      <param name="labelColorName">Label color for Origin</param>
      <param name="labelColorX">Label color X axis</param>
      <param name="labelColorY">Label color Y axis</param>
      <param name="labelColorZ">Label color Z axis</param>
      <param name="arrowColorX">X axis arrow color</param>
      <param name="arrowColorY">Y axis arrow color</param>
      <param name="arrowColorZ">Z axis arrow color</param>
      <param name="labelOrigin">Origin label string</param>
      <param name="labelAxisX">X axis label string</param>
      <param name="labelAxisY">Y axis label string</param>
      <param name="labelAxisZ">Z axis label string</param>
      <param name="visible">Visibility status</param>
      <param name="size">Size in pixels</param>
      <param name="transformation">The symbol transformation</param>
      <param name="lighting">When false, the UI element is drawn with a flat color.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.CoordinateSystemBase.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.String,System.String,System.String,System.String,System.Boolean,System.Int32,devDept.Geometry.Transformation,System.Boolean)">
      <summary>Standard constructor.</summary>
      <param name="labelColor">Label color</param>
      <param name="arrowColorX">X axis arrow color</param>
      <param name="arrowColorY">Y axis arrow color</param>
      <param name="arrowColorZ">Z axis arrow color</param>
      <param name="labelOrigin">Origin label string</param>
      <param name="labelAxisX">X axis label string</param>
      <param name="labelAxisY">Y axis label string</param>
      <param name="labelAxisZ">Z axis label string</param>
      <param name="visible">Visibility status</param>
      <param name="size">Size in pixels</param>
      <param name="transformation">The symbol transformation</param>
      <param name="lighting">When false, the UI element is drawn with a flat color.</param>
      <param name="reactToFocus">If true, the UI element is hidden when the viewport is not current</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.CoordinateSystemBase.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.String,System.String,System.String,System.String,System.Boolean,System.Int32,devDept.Geometry.Transformation,System.Boolean)">
      <summary>Standard constructor.</summary>
      <param name="labelColorName">Label color for Origin</param>
      <param name="labelColorX">Label color X axis</param>
      <param name="labelColorY">Label color Y axis</param>
      <param name="labelColorZ">Label color Z axis</param>
      <param name="arrowColorX">X axis arrow color</param>
      <param name="arrowColorY">Y axis arrow color</param>
      <param name="arrowColorZ">Z axis arrow color</param>
      <param name="labelOrigin">Origin label string</param>
      <param name="labelAxisX">X axis label string</param>
      <param name="labelAxisY">Y axis label string</param>
      <param name="labelAxisZ">Z axis label string</param>
      <param name="visible">Visibility status</param>
      <param name="size">Size in pixels</param>
      <param name="transformation">The symbol transformation</param>
      <param name="lighting">When false, the UI element is drawn with a flat color.</param>
      <param name="reactToFocus">If true, the UI element is hidden when the viewport is not current</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.CoordinateSystemBase.Dispose">
      <summary>
            Releases unmanaged resources.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.CoordinateSystemBase.OptimizedArrow(devDept.Eyeshot.CompileParams,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Removes vertices/triangles/normals on the base face.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.CoordinateSystemBase.GetFullTransformation">
      <summary>
            Gets the full transformation of the UI element.
            </summary>
      <returns>The transformation.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.CoordinateSystemBase.DrawEdgesAndSilho(devDept.Eyeshot.RenderParams)">
      <summary>
            Draws edges and silhouettes.
            </summary>
      <param name="data">The <see cref="T:devDept.Eyeshot.RenderParams" /> data structure</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.CoordinateSystemBase.HasTextureCoords">
      <summary>
            Tells if the element has texture coordinates.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.CoordinateSystemIcon">
      <summary>Coordinate System icon settings.</summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.CoordinateSystemIcon.GetDefaultCoordinateSystemIcon">
      <summary>
            Gets the default <see cref="T:devDept.Eyeshot.Control.CoordinateSystemIcon" />.
            </summary>
      <returns>The default <see cref="T:devDept.Eyeshot.Control.CoordinateSystemIcon" />.</returns>
      <remarks>For internal use only.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.CoordinateSystemIcon.#ctor">
      <summary>Empty constructor.</summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.CoordinateSystemIcon.#ctor(System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.String,System.String,System.String,System.String,System.Boolean,devDept.Eyeshot.Control.coordinateSystemPositionType)">
      <summary>Deprecated constructor.</summary>
      <param name="labelFont">Label font</param>
      <param name="labelColor">Label color</param>
      <param name="arrowColorX">X axis arrow color</param>
      <param name="arrowColorY">Y axis arrow color</param>
      <param name="arrowColorZ">Z axis arrow color</param>
      <param name="labelOrigin">Origin label string</param>
      <param name="labelAxisX">X axis label string</param>
      <param name="labelAxisY">Y axis label string</param>
      <param name="labelAxisZ">Z axis label string</param>
      <param name="visible">Visibility status</param>
      <param name="position">Position </param>
    </member>
    <member name="M:devDept.Eyeshot.Control.CoordinateSystemIcon.#ctor(System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.String,System.String,System.String,System.String,System.Boolean,devDept.Eyeshot.Control.coordinateSystemPositionType,System.Int32)">
      <summary>Deprecated constructor.</summary>
      <param name="labelFont">Label font</param>
      <param name="labelColor">Label color</param>
      <param name="arrowColorX">X axis arrow color</param>
      <param name="arrowColorY">Y axis arrow color</param>
      <param name="arrowColorZ">Z axis arrow color</param>
      <param name="labelOrigin">Origin label string</param>
      <param name="labelAxisX">X axis label string</param>
      <param name="labelAxisY">Y axis label string</param>
      <param name="labelAxisZ">Z axis label string</param>
      <param name="visible">Visibility status</param>
      <param name="position">Position</param>
      <param name="size">Size in pixels</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.CoordinateSystemIcon.#ctor(System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.String,System.String,System.String,System.String,System.Boolean,devDept.Eyeshot.Control.coordinateSystemPositionType,System.Int32,devDept.Geometry.Transformation)">
      <summary>Deprecated constructor.</summary>
      <param name="labelFont">Label font</param>
      <param name="labelColor">Label color</param>
      <param name="arrowColorX">X axis arrow color</param>
      <param name="arrowColorY">Y axis arrow color</param>
      <param name="arrowColorZ">Z axis arrow color</param>
      <param name="labelOrigin">Origin label string</param>
      <param name="labelAxisX">X axis label string</param>
      <param name="labelAxisY">Y axis label string</param>
      <param name="labelAxisZ">Z axis label string</param>
      <param name="visible">Visibility status</param>
      <param name="position">Position </param>
      <param name="size">Size in pixels</param>
      <param name="transformation">The transformation</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.CoordinateSystemIcon.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.String,System.String,System.String,System.String,System.Boolean,devDept.Eyeshot.Control.coordinateSystemPositionType,System.Int32,devDept.Geometry.Transformation)">
      <summary>Standard constructor.</summary>
      <param name="labelColor">Label color</param>
      <param name="arrowColorX">X axis arrow color</param>
      <param name="arrowColorY">Y axis arrow color</param>
      <param name="arrowColorZ">Z axis arrow color</param>
      <param name="labelOrigin">Origin label string</param>
      <param name="labelAxisX">X axis label string</param>
      <param name="labelAxisY">Y axis label string</param>
      <param name="labelAxisZ">Z axis label string</param>
      <param name="visible">Visibility status</param>
      <param name="position">Position </param>
      <param name="size">Size in pixels</param>
      <param name="transformation">The transformation</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.CoordinateSystemIcon.#ctor(System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.String,System.String,System.String,System.String,System.Boolean,devDept.Eyeshot.Control.coordinateSystemPositionType,System.Int32,devDept.Geometry.Transformation,System.Boolean)">
      <summary>Deprecated constructor.</summary>
      <param name="labelFont">Label font</param>
      <param name="labelColor">Label color</param>
      <param name="arrowColorX">X axis arrow color</param>
      <param name="arrowColorY">Y axis arrow color</param>
      <param name="arrowColorZ">Z axis arrow color</param>
      <param name="labelOrigin">Origin label string</param>
      <param name="labelAxisX">X axis label string</param>
      <param name="labelAxisY">Y axis label string</param>
      <param name="labelAxisZ">Z axis label string</param>
      <param name="visible">Visibility status</param>
      <param name="position">Position </param>
      <param name="size">Size in pixels</param>
      <param name="transformation">The symbol transformation</param>
      <param name="lighting">When false, the UI element is drawn with a flat color.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.CoordinateSystemIcon.#ctor(System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.String,System.String,System.String,System.String,System.Boolean,devDept.Eyeshot.Control.coordinateSystemPositionType,System.Int32,devDept.Geometry.Transformation,System.Boolean)">
      <summary>Constructor for WinForms designer.</summary>
      <param name="labelFont">Label font</param>
      <param name="labelColorName">Label color for Origin</param>
      <param name="labelColorX">Label color X axis</param>
      <param name="labelColorY">Label color Y axis</param>
      <param name="labelColorZ">Label color Z axis</param>
      <param name="arrowColorX">X axis arrow color</param>
      <param name="arrowColorY">Y axis arrow color</param>
      <param name="arrowColorZ">Z axis arrow color</param>
      <param name="labelOrigin">Origin label string</param>
      <param name="labelAxisX">X axis label string</param>
      <param name="labelAxisY">Y axis label string</param>
      <param name="labelAxisZ">Z axis label string</param>
      <param name="visible">Visibility status</param>
      <param name="position">Position </param>
      <param name="size">Size in pixels</param>
      <param name="transformation">The symbol transformation</param>
      <param name="lighting">When false, the UI element is drawn with a flat color.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.CoordinateSystemIcon.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.String,System.String,System.String,System.String,System.Boolean,devDept.Eyeshot.Control.coordinateSystemPositionType,System.Int32,devDept.Geometry.Transformation,System.Boolean)">
      <summary>Deprecated constructor.</summary>
      <param name="labelColor">Label color</param>
      <param name="arrowColorX">X axis arrow color</param>
      <param name="arrowColorY">Y axis arrow color</param>
      <param name="arrowColorZ">Z axis arrow color</param>
      <param name="labelOrigin">Origin label string</param>
      <param name="labelAxisX">X axis label string</param>
      <param name="labelAxisY">Y axis label string</param>
      <param name="labelAxisZ">Z axis label string</param>
      <param name="visible">Visibility status</param>
      <param name="position">Position </param>
      <param name="size">Size in pixels</param>
      <param name="transformation">The symbol transformation</param>
      <param name="lighting">When false, the UI element is drawn with a flat color.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.CoordinateSystemIcon.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.String,System.String,System.String,System.String,System.Boolean,devDept.Eyeshot.Control.coordinateSystemPositionType,System.Int32,devDept.Geometry.Transformation,System.Boolean)">
      <summary>Standard constructor.</summary>
            /// <param name="labelColorName">Label color origin</param><param name="labelColorX">Label color X axis</param><param name="labelColorY">Label color Y axis</param><param name="labelColorZ">Label color Z axis</param><param name="arrowColorX">X axis arrow color</param><param name="arrowColorY">Y axis arrow color</param><param name="arrowColorZ">Z axis arrow color</param><param name="labelOrigin">Origin label string</param><param name="labelAxisX">X axis label string</param><param name="labelAxisY">Y axis label string</param><param name="labelAxisZ">Z axis label string</param><param name="visible">Visibility status</param><param name="position">Position </param><param name="size">Size in pixels</param><param name="transformation">The symbol transformation</param><param name="lighting">When false, the UI element is drawn with a flat color.</param></member>
    <member name="M:devDept.Eyeshot.Control.CoordinateSystemIcon.#ctor(System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.String,System.String,System.String,System.String,System.Boolean,devDept.Eyeshot.Control.coordinateSystemPositionType,System.Int32,System.Boolean)">
      <summary>Deprecated constructor.</summary>
      <param name="labelFont">Label font</param>
      <param name="labelColor">Label color</param>
      <param name="arrowColorX">X axis arrow color</param>
      <param name="arrowColorY">Y axis arrow color</param>
      <param name="arrowColorZ">Z axis arrow color</param>
      <param name="labelOrigin">Origin label string</param>
      <param name="labelAxisX">X axis label string</param>
      <param name="labelAxisY">Y axis label string</param>
      <param name="labelAxisZ">Z axis label string</param>
      <param name="visible">Visibility status</param>
      <param name="position">Position </param>
      <param name="size">Size in pixels</param>
      <param name="lighting">When false, the UI element is drawn with a flat color.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.CoordinateSystemIcon.#ctor(System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.String,System.String,System.String,System.String,System.Boolean,devDept.Eyeshot.Control.coordinateSystemPositionType,System.Int32,System.Boolean)">
      <summary>Deprecated constructor.</summary>
      <param name="labelFont">Label font</param>
      <param name="labelColorName">Label color name</param>
      <param name="labelColorX">Label color X axis</param>
      <param name="labelColorY">Label color Y axis</param>
      <param name="labelColorZ">Label color Z axis</param>
      <param name="arrowColorX">X axis arrow color</param>
      <param name="arrowColorY">Y axis arrow color</param>
      <param name="arrowColorZ">Z axis arrow color</param>
      <param name="labelOrigin">Origin label string</param>
      <param name="labelAxisX">X axis label string</param>
      <param name="labelAxisY">Y axis label string</param>
      <param name="labelAxisZ">Z axis label string</param>
      <param name="visible">Visibility status</param>
      <param name="position">Position </param>
      <param name="size">Size in pixels</param>
      <param name="lighting">When false, the UI element is drawn with a flat color.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.CoordinateSystemIcon.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.String,System.String,System.String,System.String,System.Boolean,devDept.Eyeshot.Control.coordinateSystemPositionType,System.Int32,System.Boolean)">
      <summary>Deprecated constructor.</summary>
      <param name="labelColor">Label color</param>
      <param name="arrowColorX">X axis arrow color</param>
      <param name="arrowColorY">Y axis arrow color</param>
      <param name="arrowColorZ">Z axis arrow color</param>
      <param name="labelOrigin">Origin label string</param>
      <param name="labelAxisX">X axis label string</param>
      <param name="labelAxisY">Y axis label string</param>
      <param name="labelAxisZ">Z axis label string</param>
      <param name="visible">Visibility status</param>
      <param name="position">Position </param>
      <param name="size">Size in pixels</param>
      <param name="lighting">When false, the UI element is drawn with a flat color.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.CoordinateSystemIcon.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.String,System.String,System.String,System.String,System.Boolean,devDept.Eyeshot.Control.coordinateSystemPositionType,System.Int32,System.Boolean)">
      <summary>Standard constructor.</summary>
      <param name="labelColorName">Label color for Origin</param>
      <param name="labelColorX">Label color X axis</param>
      <param name="labelColorY">Label color Y axis</param>
      <param name="labelColorZ">Label color Z axis</param>
      <param name="arrowColorX">X axis arrow color</param>
      <param name="arrowColorY">Y axis arrow color</param>
      <param name="arrowColorZ">Z axis arrow color</param>
      <param name="labelOrigin">Origin label string</param>
      <param name="labelAxisX">X axis label string</param>
      <param name="labelAxisY">Y axis label string</param>
      <param name="labelAxisZ">Z axis label string</param>
      <param name="visible">Visibility status</param>
      <param name="position">Position </param>
      <param name="size">Size in pixels</param>
      <param name="lighting">When false, the UI element is drawn with a flat color.</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.CoordinateSystemIcon.Position">
      <summary>
            Gets or sets the position on sceeen.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.CoordinateSystemIcon.Draw(devDept.Eyeshot.RenderParams)">
      <summary>
            Draws the origin symbol.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.originSymbolStyleType">
      <summary>Origin symbol style type.</summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.originSymbolStyleType.Ball">
      <summary>The black and white sphere</summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.originSymbolStyleType.CoordinateSystem">
      <summary>The three XYZ arrows</summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.OriginSymbol">
      <summary>Origin symbol settings.</summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.OriginSymbol.GetDefaultOriginSymbol">
      <summary>
            Gets the default <see cref="T:devDept.Eyeshot.Control.OriginSymbol" />.
            </summary>
      <returns>The default <see cref="T:devDept.Eyeshot.Control.OriginSymbol" />.</returns>
      <remarks>For internal use only.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.OriginSymbol.StyleMode">
      <summary>
            Gets or sets the symbol style.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.OriginSymbol.#ctor">
      <summary>Empty constructor.</summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.OriginSymbol.#ctor(System.Int32,devDept.Eyeshot.Control.originSymbolStyleType,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Deprecated constructor.</summary>
      <param name="ballSize">Size of the sphere in pixels</param>
      <param name="styleMode">Style mode</param>
      <param name="labelFont">Label font</param>
      <param name="labelColor">Label color</param>
      <param name="arrowColorX">X axis arrow color</param>
      <param name="arrowColorY">Y axis arrow color</param>
      <param name="arrowColorZ">Z axis arrow color</param>
      <param name="labelOrigin">Origin label string</param>
      <param name="labelAxisX">X axis label string</param>
      <param name="labelAxisY">Y axis label string</param>
      <param name="labelAxisZ">Z axis label string</param>
      <param name="visible">Visibility status</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.OriginSymbol.#ctor(System.Int32,devDept.Eyeshot.Control.originSymbolStyleType,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Deprecated constructor.</summary>
      <param name="ballSize">Size of the sphere in pixels</param>
      <param name="styleMode">Style mode</param>
      <param name="labelColor">Label color</param>
      <param name="arrowColorX">X axis arrow color</param>
      <param name="arrowColorY">Y axis arrow color</param>
      <param name="arrowColorZ">Z axis arrow color</param>
      <param name="labelOrigin">Origin label string</param>
      <param name="labelAxisX">X axis label string</param>
      <param name="labelAxisY">Y axis label string</param>
      <param name="labelAxisZ">Z axis label string</param>
      <param name="visible">Visibility status</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.OriginSymbol.#ctor(System.Int32,devDept.Eyeshot.Control.originSymbolStyleType,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.String,System.String,System.String,System.String,System.Boolean,devDept.Geometry.Transformation)">
      <summary>Deprecated constructor.</summary>
      <param name="ballSize">Size of the sphere in pixels</param>
      <param name="styleMode">Style mode</param>
      <param name="labelFont">Label font</param>
      <param name="labelColor">Label color</param>
      <param name="arrowColorX">X axis arrow color</param>
      <param name="arrowColorY">Y axis arrow color</param>
      <param name="arrowColorZ">Z axis arrow color</param>
      <param name="labelOrigin">Origin label string</param>
      <param name="labelAxisX">X axis label string</param>
      <param name="labelAxisY">Y axis label string</param>
      <param name="labelAxisZ">Z axis label string</param>
      <param name="visible">Visibility status</param>
      <param name="transformation">The transformation</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.OriginSymbol.#ctor(System.Int32,devDept.Eyeshot.Control.originSymbolStyleType,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.String,System.String,System.String,System.String,System.Boolean,devDept.Geometry.Transformation)">
      <summary>Deprecated constructor.</summary>
      <param name="ballSize">Size of the sphere in pixels</param>
      <param name="styleMode">Style mode</param>
      <param name="labelColor">Label color</param>
      <param name="arrowColorX">X axis arrow color</param>
      <param name="arrowColorY">Y axis arrow color</param>
      <param name="arrowColorZ">Z axis arrow color</param>
      <param name="labelOrigin">Origin label string</param>
      <param name="labelAxisX">X axis label string</param>
      <param name="labelAxisY">Y axis label string</param>
      <param name="labelAxisZ">Z axis label string</param>
      <param name="visible">Visibility status</param>
      <param name="transformation">The transformation</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.OriginSymbol.#ctor(System.Int32,devDept.Eyeshot.Control.originSymbolStyleType,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.String,System.String,System.String,System.String,System.Boolean,devDept.Geometry.Transformation,System.Boolean)">
      <summary>Deprecated constructor.</summary>
      <param name="ballSize">Size of the sphere in pixels</param>
      <param name="styleMode">Style mode</param>
      <param name="labelFont">Label font</param>
      <param name="labelColor">Label color</param>
      <param name="arrowColorX">X axis arrow color</param>
      <param name="arrowColorY">Y axis arrow color</param>
      <param name="arrowColorZ">Z axis arrow color</param>
      <param name="labelOrigin">Origin label string</param>
      <param name="labelAxisX">X axis label string</param>
      <param name="labelAxisY">Y axis label string</param>
      <param name="labelAxisZ">Z axis label string</param>
      <param name="visible">Visibility status</param>
      <param name="transformation">The transformation</param>
      <param name="lighting">When false, the UI element is drawn with a flat color.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.OriginSymbol.#ctor(System.Int32,devDept.Eyeshot.Control.originSymbolStyleType,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.String,System.String,System.String,System.String,System.Boolean,devDept.Geometry.Transformation,System.Boolean)">
      <summary>Constructor for WinForms designer.</summary>
      <param name="ballSize">Size of the sphere in pixels</param>
      <param name="styleMode">Style mode</param>
      <param name="labelFont">Label font</param>
      <param name="labelColorName">Label color for Origin</param>
      <param name="labelColorX">Label color X axis</param>
      <param name="labelColorY">Label color Y axis</param>
      <param name="labelColorZ">Label color Z axis</param>
      <param name="arrowColorX">X axis arrow color</param>
      <param name="arrowColorY">Y axis arrow color</param>
      <param name="arrowColorZ">Z axis arrow color</param>
      <param name="labelOrigin">Origin label string</param>
      <param name="labelAxisX">X axis label string</param>
      <param name="labelAxisY">Y axis label string</param>
      <param name="labelAxisZ">Z axis label string</param>
      <param name="visible">Visibility status</param>
      <param name="transformation">The transformation</param>
      <param name="lighting">When false, the UI element is drawn with a flat color.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.OriginSymbol.#ctor(System.Int32,devDept.Eyeshot.Control.originSymbolStyleType,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.String,System.String,System.String,System.String,System.Boolean,devDept.Geometry.Transformation,System.Boolean)">
      <summary>Deprecated constructor.</summary>
      <param name="ballSize">Size of the sphere in pixels</param>
      <param name="styleMode">Style mode</param>
      <param name="labelColor">Label color</param>
      <param name="arrowColorX">X axis arrow color</param>
      <param name="arrowColorY">Y axis arrow color</param>
      <param name="arrowColorZ">Z axis arrow color</param>
      <param name="labelOrigin">Origin label string</param>
      <param name="labelAxisX">X axis label string</param>
      <param name="labelAxisY">Y axis label string</param>
      <param name="labelAxisZ">Z axis label string</param>
      <param name="visible">Visibility status</param>
      <param name="transformation">The transformation</param>
      <param name="lighting">When false, the UI element is drawn with a flat color.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.OriginSymbol.#ctor(System.Int32,devDept.Eyeshot.Control.originSymbolStyleType,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.String,System.String,System.String,System.String,System.Boolean,devDept.Geometry.Transformation,System.Boolean)">
      <summary>Standard constructor.</summary>
      <param name="ballSize">Size of the sphere in pixels</param>
      <param name="styleMode">Style mode</param>
      <param name="labelColorName">Label color name</param>
      <param name="labelColorX">Label color X axis</param>
      <param name="labelColorY">Label color Y axis</param>
      <param name="labelColorZ">Label color Z axis</param>
      <param name="arrowColorX">X axis arrow color</param>
      <param name="arrowColorY">Y axis arrow color</param>
      <param name="arrowColorZ">Z axis arrow color</param>
      <param name="labelOrigin">Origin label string</param>
      <param name="labelAxisX">X axis label string</param>
      <param name="labelAxisY">Y axis label string</param>
      <param name="labelAxisZ">Z axis label string</param>
      <param name="visible">Visibility status</param>
      <param name="transformation">The transformation</param>
      <param name="lighting">When false, the UI element is drawn with a flat color.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.OriginSymbol.#ctor(System.Int32,devDept.Eyeshot.Control.originSymbolStyleType,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Deprecated constructor.</summary>
      <param name="ballSize">Size of the sphere in pixels</param>
      <param name="styleMode">Style mode</param>
      <param name="labelFont">Label font</param>
      <param name="labelColor">Label color</param>
      <param name="arrowColorX">X axis arrow color</param>
      <param name="arrowColorY">Y axis arrow color</param>
      <param name="arrowColorZ">Z axis arrow color</param>
      <param name="labelOrigin">Origin label string</param>
      <param name="labelAxisX">X axis label string</param>
      <param name="labelAxisY">Y axis label string</param>
      <param name="labelAxisZ">Z axis label string</param>
      <param name="visible">Visibility status</param>
      <param name="lighting">When false, the UI element is drawn with a flat color.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.OriginSymbol.#ctor(System.Int32,System.String,devDept.Geometry.Transformation,System.Boolean)">
      <summary>Deprecated constructor for OriginSumbols with <see cref="P:devDept.Eyeshot.Control.OriginSymbol.StyleMode" /> == <see cref="F:devDept.Eyeshot.Control.originSymbolStyleType.CoordinateSystem" />.</summary>
      <param name="ballSize">Size of the sphere in pixels</param>
      <param name="name">Origin label string</param>
      <param name="transformation">The transformation applied to the new OriginSymbol</param>
      <param name="lighting">When false, the UI element is drawn with a flat color.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.OriginSymbol.#ctor(System.Int32,devDept.Eyeshot.Control.originSymbolStyleType,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Deprecated constructor.</summary>
      <param name="ballSize">Size of the sphere in pixels</param>
      <param name="styleMode">Style mode</param>
      <param name="labelColor">Label color</param>
      <param name="arrowColorX">X axis arrow color</param>
      <param name="arrowColorY">Y axis arrow color</param>
      <param name="arrowColorZ">Z axis arrow color</param>
      <param name="labelOrigin">Origin label string</param>
      <param name="labelAxisX">X axis label string</param>
      <param name="labelAxisY">Y axis label string</param>
      <param name="labelAxisZ">Z axis label string</param>
      <param name="visible">Visibility status</param>
      <param name="lighting">When false, the UI element is drawn with a flat color.</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.ProgressBar">
      <summary>
            Viewport progress bar.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ProgressBar.AnimationInterval">
      <summary>
            Gets or set the animation interval for continuous progress bar.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ProgressBar.Lighting">
      <summary>
            When false, the UI element is drawn with a flat color.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.ProgressBar.styleType">
      <summary>
            Progress bar style type.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ProgressBar.styleType.Linear">
      <summary>
            A linear bar that covers one third of the viewport width and starts from the bottom right corner.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ProgressBar.styleType.Docked">
      <summary>
            A linear bar that spans the complete viewport width and it's docked to the viewport bottom side.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ProgressBar.styleType.Circular">
      <summary>
            A big clock-like circular bar with percent text in the middle.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ProgressBar.styleType.Speedometer">
      <summary>
            A big speedometer with percent text in the middle.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ProgressBar.CancelButton">
      <summary>
            Gets or sets the Cancel button.
            </summary>
      <remarks>Call <see cref="!:Design.CompileUserInterfaceElements" /> to apply the changes</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.ProgressBar.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ProgressBar.#ctor(devDept.Eyeshot.Control.ProgressBar.styleType,System.Int32,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Double,System.Boolean,devDept.Eyeshot.Control.ToolBarButton)">
      <summary>
            Standard constructor.
            </summary>
      <param name="style">Progress bar style mode</param>
      <param name="value">Progress bar value [0-100]</param>
      <param name="text">Progress bar text</param>
      <param name="textColor">Progress bar text color</param>
      <param name="textBackgroundColor">Progress bar text background color</param>
      <param name="color">Progress bar color</param>
      <param name="drawScale">Drawing scale</param>
      <param name="visible">Visibility status</param>
      <param name="button">The Cancel button</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ProgressBar.#ctor(devDept.Eyeshot.Control.ProgressBar.styleType,System.Int32,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Double,System.Boolean)">
      <summary>
            Standard constructor.
            </summary>
      <param name="style">Progress bar style mode</param>
      <param name="value">Progress bar value [0-100]</param>
      <param name="text">Progress bar text</param>
      <param name="textColor">Progress bar text color</param>
      <param name="textBackgroundColor">Progress bar text background color</param>
      <param name="color">Progress bar color</param>
      <param name="drawScale">Drawing scale</param>
      <param name="visible">Visibility status</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ProgressBar.#ctor(devDept.Eyeshot.Control.ProgressBar.styleType,System.Int32,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Double,System.Boolean,devDept.Eyeshot.Control.ToolBarButton,System.Boolean)">
      <summary>
            Standard constructor.
            </summary>
      <param name="style">Progress bar style mode</param>
      <param name="value">Progress bar value [0-100]</param>
      <param name="text">Progress bar text</param>
      <param name="textColor">Progress bar text color</param>
      <param name="textBackgroundColor">Progress bar text background color</param>
      <param name="color">Progress bar color</param>
      <param name="drawScale">Drawing scale</param>
      <param name="visible">Visibility status</param>
      <param name="cancelButton">The cancel button</param>
      <param name="lighting">When false, the UI element is drawn with a flat color.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ProgressBar.#ctor(devDept.Eyeshot.Control.ProgressBar.styleType,System.Int32,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Double,System.Boolean,devDept.Eyeshot.Control.ToolBarButton,System.Boolean,System.Double,System.Boolean)">
      <summary>
            Standard constructor.
            </summary>
      <param name="style">Progress bar style mode</param>
      <param name="value">Progress bar value [0-100]</param>
      <param name="text">Progress bar text</param>
      <param name="textColor">Progress bar text color</param>
      <param name="textBackgroundColor">Progress bar text background color</param>
      <param name="color">Progress bar color</param>
      <param name="drawScale">Drawing scale</param>
      <param name="visible">Visibility status</param>
      <param name="cancelButton">The cancel button</param>
      <param name="lighting">When false, the UI element is drawn with a flat color.</param>
      <param name="thicknessFactor">Progress bar thickness factor</param>
      <param name="showPercentText">Percent text visibility status (Circular progress bar only)</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ProgressBar.#ctor(devDept.Eyeshot.Control.ProgressBar.styleType,System.Int32,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Double,System.Boolean,devDept.Eyeshot.Control.ToolBarButton,System.Boolean,System.Double,System.Double,System.Boolean)">
      <summary>
            Standard constructor.
            </summary>
      <param name="style">Progress bar style mode</param>
      <param name="value">Progress bar value [0-100]</param>
      <param name="text">Progress bar text</param>
      <param name="textColor">Progress bar text color</param>
      <param name="textBackgroundColor">Progress bar text background color</param>
      <param name="color">Progress bar color</param>
      <param name="drawScale">Drawing scale</param>
      <param name="visible">Visibility status</param>
      <param name="cancelButton">The cancel button</param>
      <param name="lighting">When false, the UI element is drawn with a flat color.</param>
      <param name="thicknessFactor">Progress bar thickness factor</param>
      <param name="lengthFactor">Linear progress bar length factor</param>
      <param name="showPercentText">Percent text visibility status (Circular progress bar only)</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ProgressBar.#ctor(devDept.Eyeshot.Control.ProgressBar)">
      <summary>
            Copy constructor.
            </summary>
      <param name="another">The other ProgressBar object</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.ProgressBar.ThicknessFactor">
      <summary>
            Gets or sets progress bar thickness factor (range 0-1).
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ProgressBar.LengthFactor">
      <summary> 
            Gets or sets the linear progress bar length factor (range 0-1). 
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ProgressBar.ShowPercentText">
      <summary>
            Gets or sets the percent text visibility status.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ProgressBar.StyleMode">
      <summary>
            Gets or sets the progress bar style.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ProgressBar.Value">
      <summary>
            Gets or sets the progress bar value.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ProgressBar.Text">
      <summary>
            Gets or sets the progress bar text.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ProgressBar.CancellingText">
      <summary>
            Gets or sets the progress bar "Cancelling..." text shown during the cancelling of the WorkUnit.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ProgressBar.Visible">
      <summary>
            Gets or sets the progress bar visibility during the <see cref="T:devDept.WorkUnit" /> asynchronous execution.
            </summary>
      <remarks>
        <seealso cref="!:Design.StartWork" />
      </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ProgressBar.Color">
      <summary>
            Gets or sets the progress bar color.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ProgressBar.TextColor">
      <summary>
            Gets or sets the progress bar text color.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ProgressBar.TextBackgroundColor">
      <summary>
            Gets or sets the progress bar text background color.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ProgressBar.DrawScale">
      <summary>
            Gets or sets the scale of the progress bar.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ProgressBar.ViewportIndex">
      <summary>
            Gets the index of the viewport on which the progress bar is displayed. 
            </summary>
      <remarks>This index is set to the ActiveViewport when the Workunit is started</remarks>
    </member>
    <member name="T:devDept.Eyeshot.Control.SimulationTimeLine">
      <summary>
            Manufacture simulation timeline.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.SimulationTimeLine.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.SimulationTimeLine.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Double,System.Boolean,System.Double)">
      <summary>
            Standard constructor.
            </summary>
      <param name="thumbColor">The timeline thumb color</param>
      <param name="cursorLocationColor">The color used to highlight the cursor location</param>
      <param name="safeMovementsColor">The SimulationTimeLine color of the movements with no collisions</param>
      <param name="collisionColor">The SimulationTimeLine collision color</param>
      <param name="rapidsColor">The SimulationTimeLine rapid movements color</param>
      <param name="drawScale">The Drawing scale</param>
      <param name="visible">The Visibility status</param>
      <param name="thicknessFactor">SimulationTimeLine thickness factor</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.SimulationTimeLine.#ctor(devDept.Eyeshot.Control.SimulationTimeLine)">
      <summary>
            Copy constructor.
            </summary>
      <param name="another">The other SimulationTimeLine object</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.SimulationTimeLine.ThicknessFactor">
      <summary>
            Gets or sets SimulationTimeLine thickness factor (range 0-1).
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.SimulationTimeLine.Init">
      <summary>
            Initialize the TimeLine
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SimulationTimeLine.Visible">
      <summary>
            Gets or sets the SimulationTimeLine visibility.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SimulationTimeLine.HoveringColor">
      <summary>
            Gets or sets the SimulationTimeLine background color.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SimulationTimeLine.RapidColor">
      <summary>
            Gets or sets the SimulationTimeLine color for the rapid movements.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SimulationTimeLine.ThumbColor">
      <summary>
            Gets or sets the SimulationTimeLine color of the timeline thumb.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SimulationTimeLine.Color">
      <summary>
            Gets or sets the SimulationTimeLine color of the movements without collision.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SimulationTimeLine.CollisionColor">
      <summary>
            Gets or sets the SimulationTimeLine collision color.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.SimulationTimeLine.DrawScale">
      <summary>
            Gets or sets the scale of the SimulationTimeLine.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.SimulationTimeLine.GetToolTipText(devDept.Eyeshot.Entities.Toolpath.Motion,System.Int32,System.Boolean)">
      <summary>
            Gets the tooltip Text.
            </summary>
      <param name="motion">The motion.</param>
      <param name="operationIndex">The operation index.</param>
      <param name="collision">True if the holder collides with the simulation stock.</param>
      <returns>The text of the ToolTip referred to the motion of the timeline under the mouse cursor.</returns>
    </member>
    <member name="P:devDept.Eyeshot.Control.SimulationTimeLine.ViewportIndex">
      <summary>
            Gets the index of the viewport on which the SimulationTimeLine is displayed. 
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.BarBase">
      <exclude />
      <excludetoc />
    </member>
    <member name="M:devDept.Eyeshot.Control.BarBase.Contains(System.Drawing.Point)">
      <summary>
            Tells if a point in viewport coordinates is over one of the buttons.
            </summary>
      <param name="mousePos">Mouse cursor position (zero on top) in screen coordinates</param>
      <returns>True if the point is over the button</returns>
    </member>
    <member name="T:devDept.Eyeshot.Control.ToolBar">
      <summary>
            Viewport ToolBar.
            </summary>
      <remarks>Call <see cref="!:Design.CompileUserInterfaceElements" /> to apply the changes</remarks>
    </member>
    <member name="T:devDept.Eyeshot.Control.ToolBar.positionType">
      <summary>
            Toolbar position/orientation.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ToolBar.positionType.HorizontalTopLeft">
      <summary>
            Horizontal at the top-left corner of the viewport.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ToolBar.positionType.HorizontalTopCenter">
      <summary>
            Centered at the top side of the viewport.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ToolBar.positionType.HorizontalTopRight">
      <summary>
            Horizontal at the top-right corner of the viewport.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ToolBar.positionType.VerticalTopRight">
      <summary>
            Vertical at the top-right corner of the viewport.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ToolBar.positionType.VerticalMiddleRight">
      <summary>
            Centered on the right side of the viewport.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ToolBar.positionType.VerticalBottomRight">
      <summary>
            Vertical at the bottom-right corner of the viewport.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ToolBar.positionType.HorizontalBottomRight">
      <summary>
            Horizontal at the bottom-right corner of the viewport.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ToolBar.positionType.HorizontalBottomCenter">
      <summary>
            Centered at the bottom side of the viewport.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ToolBar.positionType.HorizontalBottomLeft">
      <summary>
            Horizontal at the bottom-left corner of the viewport.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ToolBar.positionType.VerticalBottomLeft">
      <summary>
            Vertical at the bottom-left corner of the viewport.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ToolBar.positionType.VerticalMiddleLeft">
      <summary>
            Centered on the left side of the viewport.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ToolBar.positionType.VerticalTopLeft">
      <summary>
            Vertical at the top-left corner of the viewport.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.ToolBar.styleType">
      <summary>
            Toolbar style type.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ToolBar.styleType.Legacy">
      <summary>
            Legacy toolbar style.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ToolBar.styleType.Win10">
      <summary>
            Windows 10 toolbar style.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ToolBar.GetDefaultToolBar">
      <summary>
            Gets the default <see cref="T:devDept.Eyeshot.Control.ToolBar" />.
            </summary>
      <returns>The default <see cref="T:devDept.Eyeshot.Control.ToolBar" />.</returns>
      <remarks>For internal use only.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ToolBar.Visible">
      <summary>
            Gets or sets the ToolBar visibility status.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ToolBar.Position">
      <summary>
            Gets or sets the toolbar position.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ToolBar.Buttons">
      <summary>
            Gets or sets the list of toolbar buttons.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ToolBar.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ToolBar.#ctor(devDept.Eyeshot.Control.ToolBar.positionType,System.Boolean,devDept.Eyeshot.Control.ToolBarButton[])">
      <summary>
            Standard constructor (WinForms).
            </summary>
      <param name="position">Toolbar position</param>
      <param name="visible">Toolbar visibility status</param>
      <param name="buttons">Toolbar buttons</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ToolBar.#ctor(devDept.Eyeshot.Control.ToolBar)">
      <summary>
            Copy constructor.
            </summary>
      <param name="another">The other ToolBar object</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.ButtonSettings">
      <summary>
            Settings for <see cref="T:devDept.Eyeshot.Control.ToolBar" /> buttons and <see cref="T:devDept.Eyeshot.Control.ProgressBar" /> buttons.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ButtonSettings.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ButtonSettings.#ctor(System.Int32,System.Int32,System.Int32,System.Drawing.Color)">
      <summary>
            Standard constructor.
            </summary>
      <param name="buttonSize">The buttons size</param>
      <param name="buttonCornerRadius">The buttons corner radius</param>
      <param name="gap">Distance between the buttons</param>
      <param name="buttonHighlightColor">The buttons highlight color</param>
      <remarks>You need to call the <see cref="!:Design.CompileUserInterfaceElements()" /> to
                see the effect of your changes at run-time.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ButtonSettings.Size">
      <summary>
            Gets or sets the button size.
            </summary>
      <remarks>You need to call the Viewport.CompileUserInterfaceElements() to see the effect of this command.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ButtonSettings.CornerRadius">
      <summary>
            Gets or sets the button corner radius.
            </summary>
      <remarks>You need to call the Viewport.CompileUserInterfaceElements() to see the effect of this command.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ButtonSettings.HighlightColor">
      <summary>
            Gets or sets the button highlight color.
            </summary>
      <remarks>You need to call the <see cref="M:devDept.Eyeshot.Control.Workspace.CompileUserInterfaceElements" /> to see the effect of this command.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ButtonSettings.Gap">
      <summary>
            Gets or sets the distance between ToolBar Buttons.
            </summary>
      <remarks>You need to call the Viewport.CompileUserInterfaceElements() to see the effect of this command.</remarks>
    </member>
    <member name="T:devDept.Eyeshot.Control.ToolBarButton">
      <summary>
            The ToolBarButton class that raises the Click event.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.ToolBarButton.ClickEventHandler">
      <summary>
             Represents the method that will handle the <see cref="E:devDept.Eyeshot.Control.ToolBarButton.Click" /> event. 
            </summary>
      <param name="sender">The source of the event</param>
      <param name="e">The event data</param>
      <remarks>When the event is marked as Handled, no built-in behaviors take place.</remarks>
    </member>
    <member name="E:devDept.Eyeshot.Control.ToolBarButton.Click">
      <summary>
            Occurs when the button is clicked.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ToolBarButton.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ToolBarButton.#ctor(System.Drawing.Image,System.String,System.String,devDept.Eyeshot.Control.ToolBarButton.styleType,System.Boolean)">
      <summary>
            Constructor.
            </summary>
      <param name="buttonImage">The ToolBarButton image</param>
      <param name="name">The ToolBarButton name</param>
      <param name="toolTipText">The ToolBarButton tooltip text</param>
      <param name="style">The ToolBarButton style mode</param>
      <param name="visible">The ToolBarButton visibility status</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ToolBarButton.#ctor(System.Drawing.Image,System.String,System.String,devDept.Eyeshot.Control.ToolBarButton.styleType,System.Boolean,System.Boolean)">
      <summary>Constructor.
            </summary>
      <param name="buttonImage">The ToolBarButton image</param>
      <param name="name">The ToolBarButton name</param>
      <param name="toolTipText">The ToolBarButton tooltip text</param>
      <param name="style">The ToolBarButton style mode</param>
      <param name="visible">The ToolBarButton visibility status</param>
      <param name="enabled">The ToolBarButton enabled status</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ToolBarButton.#ctor(System.Drawing.Image,System.String,System.String,devDept.Eyeshot.Control.ToolBarButton.styleType,System.Boolean,System.Boolean,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image)">
      <summary>Deprecated constructor.
            </summary>
      <param name="buttonImage">The ToolBarButton image</param>
      <param name="name">The ToolBarButton name</param>
      <param name="toolTipText">The ToolBarButton tooltip text</param>
      <param name="style">The ToolBarButton style mode</param>
      <param name="visible">The ToolBarButton visibility status</param>
      <param name="enabled">The ToolBarButton enabled status</param>
      <param name="downImage">The ToolBarButton bitmap for the down state (optional)</param>
      <param name="hoverImage">The ToolBarButton bitmap for the mouse hover state (optional)</param>
      <param name="disabledImage">The ToolBarButton bitmap for the disabled state (DEPRECATED)</param>
      <param name="disabledDownImage">The ToolBarButton bitmap for the disabled down state (DEPRECATED)</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ToolBarButton.#ctor(System.Drawing.Image,System.String,System.String,devDept.Eyeshot.Control.ToolBarButton.styleType,System.Boolean,System.Boolean,System.Drawing.Image,System.Drawing.Image)">
      <summary>Standard constructor.
            </summary>
      <param name="buttonImage">The ToolBarButton image</param>
      <param name="name">The ToolBarButton name</param>
      <param name="toolTipText">The ToolBarButton tooltip text</param>
      <param name="style">The ToolBarButton style mode</param>
      <param name="visible">The ToolBarButton visibility status</param>
      <param name="enabled">The ToolBarButton enabled status</param>
      <param name="downImage">The ToolBarButton bitmap for the down state (optional)</param>
      <param name="hoverImage">The ToolBarButton bitmap for the mouse hover state (optional)</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.ToolBarButton.StyleMode">
      <summary>
            Gets or sets the style of the toolbar button (DropDownButton is not supported).
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ToolBarButton.Name">
      <summary>
            Gets or sets the name of the ToolBarButton.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ToolBarButton.Visible">
      <summary>
            Gets or sets the visibility status. 
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ToolBarButton.Enabled">
      <summary>
            Gets or sets the button status. 
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ToolBarButton.Pushed">
      <summary>
            Gets or sets a value indicating whether a toggle-style toolbar button is currently in the pushed state.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.ToolBarButton.styleType">
      <summary>
            Specifies the button style type within a ToolBarButton.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ToolBarButton.styleType.PushButton">
      <summary>
            A standard, three-dimensional button.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ToolBarButton.styleType.ToggleButton">
      <summary>
            A toggle button that appears sunken when clicked and retains the sunken appearance until clicked again.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.ToolBarButton.styleType.Separator">
      <summary>
            A space or line between toolbar buttons.       
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ToolBarButton.Rectangle">
      <summary>
            Gets button rectangle in screen coordinates (zero on the top-left corner of the viewport).
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ToolBarButton.Image">
      <summary>
            Gets or sets the button image.
            </summary>
      <remarks>Call <see cref="!:Design.CompileUserInterfaceElements()" /> to apply the changes.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ToolBarButton.HoverImage">
      <summary>
            Gets or sets the mouse hover state button image.
            </summary>
      <remarks>Call <see cref="M:devDept.Eyeshot.Control.Workspace.CompileUserInterfaceElements" /> to apply the changes</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ToolBarButton.DownImage">
      <summary>
            Gets or sets the down state button image.
            </summary>
      <remarks>Call <see cref="!:Design.CompileUserInterfaceElements" /> to apply the changes</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ToolBarButton.DisabledImage">
      <summary>
            Deprecated property. Gets or sets the Image for the disabled state.
            </summary>
      <remarks>Call <see cref="!:Design.CompileUserInterfaceElements" /> to apply the changes</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ToolBarButton.DisabledDownImage">
      <summary>
            Gets or sets the Image for the disabled down state.
            </summary>
      <remarks>Call <see cref="!:Design.CompileUserInterfaceElements" /> to apply the changes</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.ToolBarButton.Contains(System.Drawing.Point)">
      <summary>
            Tells if a point in screen coordinates is inside the button.
            </summary>
      <param name="mousePos">Mouse cursor position (zero on top) in viewport coordinates (see <see cref="M:devDept.Eyeshot.Control.Viewport.ScreenToViewport(System.Drawing.Point)" />) </param>
      <returns>True if the point is inside the button</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.ToolBarButton.DrawImage(System.Drawing.Graphics,devDept.Eyeshot.Control.Workspace,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Draws the button image.
            </summary>
      <param name="g">Graphics surface.</param>
      <param name="toolbar">
      </param>
      <param name="x">
      </param>
      <param name="y">
      </param>
      <param name="width">
      </param>
      <param name="height">
      </param>
      <param name="colorTheme">
      </param>
    </member>
    <member name="P:devDept.Eyeshot.Control.ToolBarButton.ToolTipText">
      <summary>
            Gets or sets the text to show on the ToolTip.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ToolBarButton.Tag">
      <summary>
            Gets or sets the toolbar button custom data.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.ToolBarButtonList">
      <summary>
            Class that holds and manages the list of ToolBarButtons.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ToolBarButtonList.ParentToolBar">
      <summary>
            Gets the parent toolBar.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ToolBarButtonList.ToArray">
      <summary>
            Copies the elements of the <see cref="T:devDept.Eyeshot.Control.ToolBarButtonList" /> to a new array.</summary>
      <returns>An array containing copies of the elements of the <see cref="T:devDept.Eyeshot.Control.ToolBarButtonList" />.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.ToolBarButtonList.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance with the data needed to serialize the target object.
            </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance that defines the serialized data.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> instance that contains the serialized data.</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.DefaultToolBarButton">
      <summary>
            Base class for default ToolBar buttons.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.DefaultToolBarButton.Image">
      <summary>
            Gets the bitmap of the button.
            </summary>
      <exception cref="T:devDept.EyeshotException">Thrown when you try to set the <see cref="P:devDept.Eyeshot.Control.DefaultToolBarButton.Image" /> property on default buttons.</exception>
    </member>
    <member name="P:devDept.Eyeshot.Control.DefaultToolBarButton.DownImage">
      <summary>
            Gets the Image for the down state.
            </summary>
      <exception cref="T:devDept.EyeshotException">Thrown when you try to set the <see cref="P:devDept.Eyeshot.Control.DefaultToolBarButton.DownImage" /> property on default buttons.</exception>
    </member>
    <member name="P:devDept.Eyeshot.Control.DefaultToolBarButton.HoverImage">
      <summary>
            Gets the Image for the mouse hover state.
            </summary>
      <exception cref="T:devDept.EyeshotException">Thrown when you try to set the <see cref="P:devDept.Eyeshot.Control.DefaultToolBarButton.HoverImage" /> property on default buttons.</exception>
    </member>
    <member name="T:devDept.Eyeshot.Control.ZoomFitToolBarButton">
      <summary>
            The ZoomFitToolBarButton default class.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ZoomFitToolBarButton.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.ZoomToolBarButton">
      <summary>
            The ZoomToolBarButton default class.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ZoomToolBarButton.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.ZoomWindowToolBarButton">
      <summary>
            The ZoomWindowToolBarButton default class.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ZoomWindowToolBarButton.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.MagnifyingGlassToolBarButton">
      <summary>
            The MagnifyingGlassToolBarButton default class.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.MagnifyingGlassToolBarButton.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.RotateToolBarButton">
      <summary>
            The RotateToolBarButton default class.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.RotateToolBarButton.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.PanToolBarButton">
      <summary>
            The PanToolBarButton default class.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.PanToolBarButton.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.HomeToolBarButton">
      <summary>
            The HomeToolBarButton default class.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.HomeToolBarButton.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.ShareToolBarButton">
      <summary>
            The ShareToolBarButton default class.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ShareToolBarButton.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.UndoToolBarButton">
      <summary>
            The UndoToolBarButton default class.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.UndoToolBarButton.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.RedoToolBarButton">
      <summary>
            The RedoToolBarButton default class.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.RedoToolBarButton.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.ToolBarSeparator">
      <summary>
            The ToolBarSeparator default class.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ToolBarSeparator.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.CancelToolBarButton">
      <summary>
            The CancelToolBarButton default class.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.CancelToolBarButton.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.BeginningToolBarButton">
      <summary>
            The BeginningToolBarButton default class.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.BeginningToolBarButton.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.PreviousToolBarButton">
      <summary>
            The PreviousToolBarButton default class.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.PreviousToolBarButton.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.StartToolBarButton">
      <summary>
            The StartToolBarButton default class.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.StartToolBarButton.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.PauseToolBarButton">
      <summary>
            The PauseToolBarButton default class.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.PauseToolBarButton.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.NextToolBarButton">
      <summary>
            The NextToolBarButton default class.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.NextToolBarButton.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.EndToolBarButton">
      <summary>
            The EndToolBarButton default class.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.EndToolBarButton.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.ViewCubeIcon">
      <summary>View Cube icon settings. This user interface element will never be added to images and printouts.</summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ViewCubeIcon.GetDefaultViewCubeIcon">
      <summary>
            Gets the default <see cref="T:devDept.Eyeshot.Control.ViewCubeIcon" />.
            </summary>
      <returns>The default <see cref="T:devDept.Eyeshot.Control.ViewCubeIcon" />.</returns>
      <remarks>For internal use only.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.AnimateCamera">
      <summary>
            When true, animates the camera when changing the orientation.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.Lighting">
      <summary>
            When false, the UI element is drawn with a flat color.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.FitAfterViewChange">
      <summary>
            When true, fits the view when the view orientation changes.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.ShowRing">
      <summary>
            Gets or sets the visibility of the ring under the view cube.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.ShowShadow">
      <summary>
            Gets or sets the visibility of the shadow under the view cube.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.ViewCubeIcon.ViewCubePartEntity">
      <summary>
            Class that represents a portion of the <see cref="T:devDept.Eyeshot.Control.ViewCubeIcon" /></summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ViewCubeIcon.ViewCubePartEntity.GetView">
      <summary>
            Gets the view orientation corresponding to the selected part of the viewcube.
            </summary>
      <returns>The corresponding view orientation.</returns>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.FrontRingLabel">
      <summary>
            Gets or sets the label on the ring for front orientation.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.BackRingLabel">
      <summary>
            Gets or sets the label on the ring for front orientation.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.LeftRingLabel">
      <summary>
            Gets or sets the label on the ring for left orientation.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.RightRingLabel">
      <summary>
            Gets or sets the label on the ring for right orientation.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.FrontColor">
      <summary>
            Gets or sets the color of the front face.
            </summary>
      <remarks>This value is used only if <see cref="P:devDept.Eyeshot.Control.ViewCubeIcon.Lighting" /> is true, else it depends on the <see cref="P:devDept.Eyeshot.Control.BackgroundSettings.ColorTheme" />.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.BackColor">
      <summary>
            Gets or sets the color of the back face.
            </summary>
      <remarks>This value is used only if <see cref="P:devDept.Eyeshot.Control.ViewCubeIcon.Lighting" /> is true, else it depends on the <see cref="P:devDept.Eyeshot.Control.BackgroundSettings.ColorTheme" />.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.LeftColor">
      <summary>
            Gets or sets the color of the left face.
            </summary>
      <remarks>This value is used only if <see cref="P:devDept.Eyeshot.Control.ViewCubeIcon.Lighting" /> is true, else it depends on the <see cref="P:devDept.Eyeshot.Control.BackgroundSettings.ColorTheme" />.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.RightColor">
      <summary>
            Gets or sets the color of the right face.
            </summary>
      <remarks>This value is used only if <see cref="P:devDept.Eyeshot.Control.ViewCubeIcon.Lighting" /> is true, else it depends on the <see cref="P:devDept.Eyeshot.Control.BackgroundSettings.ColorTheme" />.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.TopColor">
      <summary>
            Gets or sets the color of the top face.
            </summary>
      <remarks>This value is used only if <see cref="P:devDept.Eyeshot.Control.ViewCubeIcon.Lighting" /> is true, else it depends on the <see cref="P:devDept.Eyeshot.Control.BackgroundSettings.ColorTheme" />.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.BottomColor">
      <summary>
            Gets or sets the color of the bottom face.
            </summary>
      <remarks>This value is used only if <see cref="P:devDept.Eyeshot.Control.ViewCubeIcon.Lighting" /> is true, else it depends on the <see cref="P:devDept.Eyeshot.Control.BackgroundSettings.ColorTheme" />.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.FrontRingColor">
      <summary>
            Gets or sets the color of the front ring label.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.BackRingColor">
      <summary>
            Gets or sets the color of the back ring label.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.LeftRingColor">
      <summary>
            Gets or sets the color of the left ring label.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.RightRingColor">
      <summary>
            Gets or sets the color of the left ring label.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.HighlightColor">
      <summary>
            Gets or sets the highlight color.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.FrontText">
      <summary>
            Gets or sets the text of the front face.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.BackText">
      <summary>
            Gets or sets the text of the back face.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.LeftText">
      <summary>
            Gets or sets the text of the left face.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.RightText">
      <summary>
            Gets or sets the text of the right face.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.BottomText">
      <summary>
            Gets or sets the text of the bottom face.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.TopText">
      <summary>
            Gets or sets the text of the top face.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ViewCubeIcon.#ctor">
      <summary>Empty constructor.</summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ViewCubeIcon.#ctor(devDept.Eyeshot.Control.coordinateSystemPositionType,System.Boolean,System.Drawing.Color,System.Boolean,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Char,System.Char,System.Char,System.Char,System.Boolean,System.Drawing.Font,System.Drawing.Color,System.Int32)">
      <summary>Deprecated constructor.</summary>
      <param name="position">Position</param>
      <param name="visible">Visibility status</param>
      <param name="highlightColor">Color of highlight</param>
      <param name="animateCamera">If true, animates the camera when changing the orientation</param>
      <param name="animateCameraDuration">Deprecated, see <see cref="!:Design.AnimateCameraDuration" /></param>
      <param name="frontText">Text of the front face</param>
      <param name="backText">Text of the back face</param>
      <param name="leftText">Text of the left face</param>
      <param name="rightText">Text of the right face</param>
      <param name="topText">Text of the top face</param>
      <param name="bottomText">Text of the bottom face</param>
      <param name="frontRingLabel">Front orientation ring label</param>
      <param name="backRingLabel">Back orientation ring label</param>
      <param name="leftRingLabel">Left orientation ring label</param>
      <param name="rightRingLabel">Right orientation ring label</param>
      <param name="showRing">If true, shows the ring under the view cube</param>
      <param name="font">The font used to draw the texts on the cube faces and the labels on the ring</param>
      <param name="textColor">The color used to draw the texts on the cube faces</param>
      <param name="size">The size in pixels</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ViewCubeIcon.#ctor(devDept.Eyeshot.Control.coordinateSystemPositionType,System.Boolean,System.Drawing.Color,System.Boolean,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Char,System.Char,System.Char,System.Char,System.Boolean,System.Drawing.Font,System.Drawing.Color,System.Int32,System.Boolean)">
      <summary>Deprecated constructor.</summary>
      <param name="position">Position</param>
      <param name="visible">Visibility status</param>
      <param name="highlightColor">Color of highlight</param>
      <param name="animateCamera">If true, animates the camera when changing the orientation</param>
      <param name="animateCameraDuration">Deprecated, see <see cref="!:Design.AnimateCameraDuration" /></param>
      <param name="frontText">Text of the front face</param>
      <param name="backText">Text of the back face</param>
      <param name="leftText">Text of the left face</param>
      <param name="rightText">Text of the right face</param>
      <param name="topText">Text of the top face</param>
      <param name="bottomText">Text of the bottom face</param>
      <param name="frontRingLabel">Front orientation ring label</param>
      <param name="backRingLabel">Back orientation ring label</param>
      <param name="leftRingLabel">Left orientation ring label</param>
      <param name="rightRingLabel">Right orientation ring label</param>
      <param name="showRing">If true, shows the ring under the view cube</param>
      <param name="font">The font used to draw the texts on the cube faces and the labels on the ring</param>
      <param name="textColor">The color used to draw the texts on the cube faces</param>
      <param name="size">The size in pixels</param>
      <param name="fitAfterViewChange">If true, fits the view when the view orientation changes</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ViewCubeIcon.#ctor(devDept.Eyeshot.Control.coordinateSystemPositionType,System.Boolean,System.Drawing.Color,System.Boolean,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Char,System.Char,System.Char,System.Char,System.Boolean,System.Drawing.Font,System.Drawing.Color,System.Int32,System.Boolean,System.Boolean)">
      <summary>Deprecated constructor.</summary>
      <param name="position">Position</param>
      <param name="visible">Visibility status</param>
      <param name="highlightColor">Color of highlight</param>
      <param name="animateCamera">If true, animates the camera when changing the orientation</param>
      <param name="animateCameraDuration">Deprecated, see <see cref="!:Design.AnimateCameraDuration" /></param>
      <param name="frontText">Text of the front face</param>
      <param name="backText">Text of the back face</param>
      <param name="leftText">Text of the left face</param>
      <param name="rightText">Text of the right face</param>
      <param name="topText">Text of the top face</param>
      <param name="bottomText">Text of the bottom face</param>
      <param name="frontRingLabel">Front orientation ring label</param>
      <param name="backRingLabel">Back orientation ring label</param>
      <param name="leftRingLabel">Left orientation ring label</param>
      <param name="rightRingLabel">Right orientation ring label</param>
      <param name="showRing">If true, shows the ring under the view cube</param>
      <param name="font">The font used to draw the texts on the cube faces and the labels on the ring</param>
      <param name="textColor">The color used to draw the texts on the cube faces</param>
      <param name="size">The size in pixels</param>
      <param name="fitAfterViewChange">If true, fits the view when the view orientation changes</param>
      <param name="enabled">The enabled status</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ViewCubeIcon.#ctor(devDept.Eyeshot.Control.coordinateSystemPositionType,System.Boolean,System.Drawing.Color,System.Boolean,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Char,System.Char,System.Char,System.Char,System.Boolean,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Boolean,System.Boolean)">
      <summary>Deprecated constructor.</summary>
      <param name="position">Position</param>
      <param name="visible">Visibility status</param>
      <param name="highlightColor">Color of highlight</param>
      <param name="animateCamera">If true, animates the camera when changing the orientation</param>
      <param name="animateCameraDuration">Deprecated, see <see cref="!:Design.AnimateCameraDuration" /></param>
      <param name="frontText">Text of the front face</param>
      <param name="backText">Text of the back face</param>
      <param name="leftText">Text of the left face</param>
      <param name="rightText">Text of the right face</param>
      <param name="topText">Text of the top face</param>
      <param name="bottomText">Text of the bottom face</param>
      <param name="frontColor">The color of the front face</param>
      <param name="backColor">The color of the back face</param>
      <param name="leftColor">The color of the left face</param>
      <param name="rightColor">The color of the right face</param>
      <param name="topColor">The color of the top face</param>
      <param name="bottomColor">The color of the bottom face</param>
      <param name="frontRingLabel">Front orientation ring label</param>
      <param name="backRingLabel">Back orientation ring label</param>
      <param name="leftRingLabel">Left orientation ring label</param>
      <param name="rightRingLabel">Right orientation ring label</param>
      <param name="showRing">If true, shows the ring under the view cube</param>
      <param name="font">The font used to draw the texts on the cube faces and the labels on the ring</param>
      <param name="textColor">The color used to draw the texts on the cube faces</param>
      <param name="edgeColor">The color used to draw the cube edges</param>
      <param name="size">The size in pixels</param>
      <param name="fitAfterViewChange">If true, fits the view when the view orientation changes</param>
      <param name="enabled">The enabled status</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ViewCubeIcon.#ctor(devDept.Eyeshot.Control.coordinateSystemPositionType,System.Boolean,System.Drawing.Color,System.Boolean,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Char,System.Char,System.Char,System.Char,System.Boolean,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Boolean,System.Boolean,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image)">
      <summary>Deprecated constructor.</summary>
      <param name="position">Position</param>
      <param name="visible">Visibility status</param>
      <param name="highlightColor">Color of highlight</param>
      <param name="animateCamera">If true, animates the camera when changing the orientation</param>
      <param name="animateCameraDuration">Deprecated, see <see cref="!:Design.AnimateCameraDuration" /></param>
      <param name="frontText">Text of the front face</param>
      <param name="backText">Text of the back face</param>
      <param name="leftText">Text of the left face</param>
      <param name="rightText">Text of the right face</param>
      <param name="topText">Text of the top face</param>
      <param name="bottomText">Text of the bottom face</param>
      <param name="frontColor">The color of the front face</param>
      <param name="backColor">The color of the back face</param>
      <param name="leftColor">The color of the left face</param>
      <param name="rightColor">The color of the right face</param>
      <param name="topColor">The color of the top face</param>
      <param name="bottomColor">The color of the bottom face</param>
      <param name="frontRingLabel">Front orientation ring label</param>
      <param name="backRingLabel">Back orientation ring label</param>
      <param name="leftRingLabel">Left orientation ring label</param>
      <param name="rightRingLabel">Right orientation ring label</param>
      <param name="showRing">If true, shows the ring under the view cube</param>
      <param name="font">The font used to draw the texts on the cube faces and the labels on the ring</param>
      <param name="textColor">The color used to draw the texts on the cube faces</param>
      <param name="edgeColor">The color used to draw the cube edges</param>
      <param name="size">The size in pixels</param>
      <param name="fitAfterViewChange">If true, fits the view when the view orientation changes</param>
      <param name="enabled">The enabled status</param>
      <param name="frontImage">The front face image</param>
      <param name="backImage">The back face image</param>
      <param name="leftImage">The left face image</param>
      <param name="rightImage">The right face image</param>
      <param name="topImage">The top face image</param>
      <param name="bottomImage">The bottom face image</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ViewCubeIcon.#ctor(devDept.Eyeshot.Control.coordinateSystemPositionType,System.Boolean,System.Drawing.Color,System.Boolean,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Char,System.Char,System.Char,System.Char,System.Boolean,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Boolean,System.Boolean,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Boolean)">
      <summary>Deprecated constructor.</summary>
      <param name="position">Position</param>
      <param name="visible">Visibility status</param>
      <param name="highlightColor">Color of highlight</param>
      <param name="animateCamera">If true, animates the camera when changing the orientation</param>
      <param name="animateCameraDuration">Deprecated, see <see cref="!:Design.AnimateCameraDuration" /></param>
      <param name="frontText">Text of the front face</param>
      <param name="backText">Text of the back face</param>
      <param name="leftText">Text of the left face</param>
      <param name="rightText">Text of the right face</param>
      <param name="topText">Text of the top face</param>
      <param name="bottomText">Text of the bottom face</param>
      <param name="frontColor">The color of the front face</param>
      <param name="backColor">The color of the back face</param>
      <param name="leftColor">The color of the left face</param>
      <param name="rightColor">The color of the right face</param>
      <param name="topColor">The color of the top face</param>
      <param name="bottomColor">The color of the bottom face</param>
      <param name="frontRingLabel">Front orientation ring label</param>
      <param name="backRingLabel">Back orientation ring label</param>
      <param name="leftRingLabel">Left orientation ring label</param>
      <param name="rightRingLabel">Right orientation ring label</param>
      <param name="showRing">If true, shows the ring under the view cube</param>
      <param name="font">The font used to draw the texts on the cube faces and the labels on the ring</param>
      <param name="textColor">The color used to draw the texts on the cube faces</param>
      <param name="edgeColor">The color used to draw the cube edges</param>
      <param name="size">The size in pixels</param>
      <param name="fitAfterViewChange">If true, fits the view when the view orientation changes</param>
      <param name="enabled">The enabled status</param>
      <param name="frontImage">The front face image</param>
      <param name="backImage">The back face image</param>
      <param name="leftImage">The left face image</param>
      <param name="rightImage">The right face image</param>
      <param name="topImage">The top face image</param>
      <param name="bottomImage">The bottom face image</param>
      <param name="lighting">The lighting status</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ViewCubeIcon.#ctor(devDept.Eyeshot.Control.coordinateSystemPositionType,System.Boolean,System.Drawing.Color,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Char,System.Char,System.Char,System.Char,System.Boolean,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Boolean,System.Boolean,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Boolean)">
      <summary>Deprecated constructor.</summary>
      <param name="position">Position</param>
      <param name="visible">Visibility status</param>
      <param name="highlightColor">Color of highlight</param>
      <param name="animateCamera">If true, animates the camera when changing the orientation</param>
      <param name="frontText">Text of the front face</param>
      <param name="backText">Text of the back face</param>
      <param name="leftText">Text of the left face</param>
      <param name="rightText">Text of the right face</param>
      <param name="topText">Text of the top face</param>
      <param name="bottomText">Text of the bottom face</param>
      <param name="frontColor">The color of the front face</param>
      <param name="backColor">The color of the back face</param>
      <param name="leftColor">The color of the left face</param>
      <param name="rightColor">The color of the right face</param>
      <param name="topColor">The color of the top face</param>
      <param name="bottomColor">The color of the bottom face</param>
      <param name="frontRingLabel">Front orientation ring label</param>
      <param name="backRingLabel">Back orientation ring label</param>
      <param name="leftRingLabel">Left orientation ring label</param>
      <param name="rightRingLabel">Right orientation ring label</param>
      <param name="showRing">If true, shows the ring under the view cube</param>
      <param name="font">The font used to draw the texts on the cube faces and the labels on the ring</param>
      <param name="textColor">The color used to draw the texts on the cube faces</param>
      <param name="edgeColor">The color used to draw the cube edges</param>
      <param name="size">The size in pixels</param>
      <param name="fitAfterViewChange">If true, fits the view when the view orientation changes</param>
      <param name="enabled">The enabled status</param>
      <param name="frontImage">The front face image</param>
      <param name="backImage">The back face image</param>
      <param name="leftImage">The left face image</param>
      <param name="rightImage">The right face image</param>
      <param name="topImage">The top face image</param>
      <param name="bottomImage">The bottom face image</param>
      <param name="lighting">The lighting status</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ViewCubeIcon.#ctor(devDept.Eyeshot.Control.coordinateSystemPositionType,System.Boolean,System.Drawing.Color,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Char,System.Char,System.Char,System.Char,System.Boolean,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Boolean,System.Boolean,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Boolean,devDept.Geometry.Quaternion)">
      <summary>Deprecated Constructor.</summary>
      <param name="position">Position</param>
      <param name="visible">Visibility status</param>
      <param name="highlightColor">Color of highlight</param>
      <param name="animateCamera">If true, animates the camera when changing the orientation</param>
      <param name="frontText">Text of the front face</param>
      <param name="backText">Text of the back face</param>
      <param name="leftText">Text of the left face</param>
      <param name="rightText">Text of the right face</param>
      <param name="topText">Text of the top face</param>
      <param name="bottomText">Text of the bottom face</param>
      <param name="frontColor">The color of the front face</param>
      <param name="backColor">The color of the back face</param>
      <param name="leftColor">The color of the left face</param>
      <param name="rightColor">The color of the right face</param>
      <param name="topColor">The color of the top face</param>
      <param name="bottomColor">The color of the bottom face</param>
      <param name="frontRingLabel">Front orientation ring label</param>
      <param name="backRingLabel">Back orientation ring label</param>
      <param name="leftRingLabel">Left orientation ring label</param>
      <param name="rightRingLabel">Right orientation ring label</param>
      <param name="showRing">If true, shows the ring under the view cube</param>
      <param name="font">The font used to draw the texts on the cube faces and the labels on the ring</param>
      <param name="textColor">The color used to draw the texts on the cube faces</param>
      <param name="edgeColor">The color used to draw the cube edges</param>
      <param name="size">The size in pixels</param>
      <param name="fitAfterViewChange">If true, fits the view when the view orientation changes</param>
      <param name="enabled">The enabled status</param>
      <param name="frontImage">The front face image</param>
      <param name="backImage">The back face image</param>
      <param name="leftImage">The left face image</param>
      <param name="rightImage">The right face image</param>
      <param name="topImage">The top face image</param>
      <param name="bottomImage">The bottom face image</param>
      <param name="lighting">The lighting status</param>
      <param name="initialRotation">Initial rotation of the viewcube</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ViewCubeIcon.#ctor(devDept.Eyeshot.Control.coordinateSystemPositionType,System.Boolean,System.Drawing.Color,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Char,System.Char,System.Char,System.Char,System.Boolean,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Boolean,System.Boolean,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Boolean)">
      <summary>Deprecated constructor.</summary>
      <param name="position">Position</param>
      <param name="visible">Visibility status</param>
      <param name="highlightColor">Color of highlight</param>
      <param name="animateCamera">If true, animates the camera when changing the orientation</param>
      <param name="frontText">Text of the front face</param>
      <param name="backText">Text of the back face</param>
      <param name="leftText">Text of the left face</param>
      <param name="rightText">Text of the right face</param>
      <param name="topText">Text of the top face</param>
      <param name="bottomText">Text of the bottom face</param>
      <param name="frontColor">The color of the front face</param>
      <param name="backColor">The color of the back face</param>
      <param name="leftColor">The color of the left face</param>
      <param name="rightColor">The color of the right face</param>
      <param name="topColor">The color of the top face</param>
      <param name="bottomColor">The color of the bottom face</param>
      <param name="frontRingLabel">Front orientation ring label</param>
      <param name="backRingLabel">Back orientation ring label</param>
      <param name="leftRingLabel">Left orientation ring label</param>
      <param name="rightRingLabel">Right orientation ring label</param>
      <param name="showRing">If true, shows the ring under the view cube</param>
      <param name="textColor">The color used to draw the texts on the cube faces</param>
      <param name="edgeColor">The color used to draw the cube edges</param>
      <param name="size">The size in pixels</param>
      <param name="fitAfterViewChange">If true, fits the view when the view orientation changes</param>
      <param name="enabled">The enabled status</param>
      <param name="frontImage">The front face image</param>
      <param name="backImage">The back face image</param>
      <param name="leftImage">The left face image</param>
      <param name="rightImage">The right face image</param>
      <param name="topImage">The top face image</param>
      <param name="bottomImage">The bottom face image</param>
      <param name="lighting">The lighting status</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ViewCubeIcon.#ctor(devDept.Eyeshot.Control.coordinateSystemPositionType,System.Boolean,System.Drawing.Color,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Char,System.Char,System.Char,System.Char,System.Boolean,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Boolean,System.Boolean,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Boolean,devDept.Geometry.Quaternion,System.Boolean)">
      <summary>Constructor for WinForms designer.</summary>
      <param name="position">Position</param>
      <param name="visible">Visibility status</param>
      <param name="highlightColor">Color of highlight</param>
      <param name="animateCamera">If true, animates the camera when changing the orientation</param>
      <param name="frontText">Text of the front face</param>
      <param name="backText">Text of the back face</param>
      <param name="leftText">Text of the left face</param>
      <param name="rightText">Text of the right face</param>
      <param name="topText">Text of the top face</param>
      <param name="bottomText">Text of the bottom face</param>
      <param name="frontColor">The color of the front face</param>
      <param name="backColor">The color of the back face</param>
      <param name="leftColor">The color of the left face</param>
      <param name="rightColor">The color of the right face</param>
      <param name="topColor">The color of the top face</param>
      <param name="bottomColor">The color of the bottom face</param>
      <param name="frontRingLabel">Front orientation ring label</param>
      <param name="backRingLabel">Back orientation ring label</param>
      <param name="leftRingLabel">Left orientation ring label</param>
      <param name="rightRingLabel">Right orientation ring label</param>
      <param name="showRing">If true, shows the ring under the view cube</param>
      <param name="font">The font used to draw the texts on the cube faces and the labels on the ring</param>
      <param name="textColor">The color used to draw the texts on the cube faces</param>
      <param name="edgeColor">The color used to draw the cube edges</param>
      <param name="size">The size in pixels</param>
      <param name="fitAfterViewChange">If true, fits the view when the view orientation changes</param>
      <param name="enabled">The enabled status</param>
      <param name="frontImage">The front face image</param>
      <param name="backImage">The back face image</param>
      <param name="leftImage">The left face image</param>
      <param name="rightImage">The right face image</param>
      <param name="topImage">The top face image</param>
      <param name="bottomImage">The bottom face image</param>
      <param name="lighting">The lighting status</param>
      <param name="initialRotation">Initial rotation of the viewcube</param>
      <param name="showShadow">If true, shows the shadow under the view cube</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ViewCubeIcon.#ctor(devDept.Eyeshot.Control.coordinateSystemPositionType,System.Boolean,System.Drawing.Color,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Char,System.Char,System.Char,System.Char,System.Boolean,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Boolean,System.Boolean,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Boolean,System.Boolean)">
      <summary>Standard constructor.</summary>
      <param name="position">Position</param>
      <param name="visible">Visibility status</param>
      <param name="highlightColor">Color of highlight</param>
      <param name="animateCamera">If true, animates the camera when changing the orientation</param>
      <param name="frontText">Text of the front face</param>
      <param name="backText">Text of the back face</param>
      <param name="leftText">Text of the left face</param>
      <param name="rightText">Text of the right face</param>
      <param name="topText">Text of the top face</param>
      <param name="bottomText">Text of the bottom face</param>
      <param name="frontColor">The color of the front face</param>
      <param name="backColor">The color of the back face</param>
      <param name="leftColor">The color of the left face</param>
      <param name="rightColor">The color of the right face</param>
      <param name="topColor">The color of the top face</param>
      <param name="bottomColor">The color of the bottom face</param>
      <param name="frontRingLabel">Front orientation ring label</param>
      <param name="backRingLabel">Back orientation ring label</param>
      <param name="leftRingLabel">Left orientation ring label</param>
      <param name="rightRingLabel">Right orientation ring label</param>
      <param name="showRing">If true, shows the ring under the view cube</param>
      <param name="textColor">The color used to draw the texts on the cube faces</param>
      <param name="edgeColor">The color used to draw the cube edges</param>
      <param name="size">The size in pixels</param>
      <param name="fitAfterViewChange">If true, fits the view when the view orientation changes</param>
      <param name="enabled">The enabled status</param>
      <param name="frontImage">The front face image</param>
      <param name="backImage">The back face image</param>
      <param name="leftImage">The left face image</param>
      <param name="rightImage">The right face image</param>
      <param name="topImage">The top face image</param>
      <param name="bottomImage">The bottom face image</param>
      <param name="lighting">The lighting status</param>
      <param name="showShadow">If true, shows the shadow under the view cube</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ViewCubeIcon.#ctor(devDept.Eyeshot.Control.ViewCubeIcon)">
      <summary>
            Copy constructor.
            </summary>
      <param name="other">The ViewCubeIcon to copy data from</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.TextColor">
      <summary>
            Gets or sets the color of the texts on the cube faces.
            </summary>
      <remarks>This value is used only if <see cref="P:devDept.Eyeshot.Control.ViewCubeIcon.Lighting" /> is true, else it depends on the <see cref="P:devDept.Eyeshot.Control.BackgroundSettings.ColorTheme" />.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.EdgeColor">
      <summary>
            Gets or sets the edge color.
            </summary>
      <remarks>In use when <see cref="P:devDept.Eyeshot.Control.ViewCubeIcon.Lighting" /> is false only.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.ViewCubeIcon.ScaleForDPI">
      <summary>
            Scales the element for high DPI settings.
            </summary>
      <seealso cref="M:devDept.Geometry.UtilityEx.GetScalingLevel" />
      <remarks>This method needs to be called if the element is added outside of the InitializeComponents() to adjust the rendering for high dpi settings.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.Font">
      <summary>
            Gets or sets the Font used to draw the texts on the cube faces and the labels on the ring
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.InitialRotation">
      <summary>
            Gets or sets the initial rotation of the ViewCubeIcon.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ViewCubeIcon.Dispose">
      <summary>
            Releases unmanaged resources.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ViewCubeIcon.GetProjectionMatrix(devDept.Eyeshot.DrawSceneParams,System.Double)">
      <summary>
            Gets the projection matrix.
            </summary>
      <param name="data">The draw data</param>
      <param name="dist">The distance of the camera from the viewcube</param>
      <returns>The projection matrix</returns>
      <remarks>Override to set an orthographic projection.</remarks>
      <example>
            Set an orthographic projection.
            	<code lang="CS" title="[New Example]">
            return Camera.myOrtho(myParams.RenderContext, -80, 80, -80, 80, dist - 150, dist + 150);
            </code><code lang="VB" title="[New Example]">
            return Camera.myOrtho(myParams.RenderContext, -80, 80, -80, 80, dist - 150, dist + 150)
            </code></example>
    </member>
    <member name="M:devDept.Eyeshot.Control.ViewCubeIcon.GetPosition(devDept.Eyeshot.Control.Viewport,System.Int32[],System.Int32@,System.Int32@)">
      <summary>
            Gets the position of the ViewCube in camera viewport coordinates (0 on bottom).
            </summary>
      <param name="viewport">The viewport</param>
      <param name="viewFrame">The viewport bounds</param>
      <param name="x">The x position in camera viewport coordinates&gt;</param>
      <param name="y">The y position in camera viewport coordinates</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.ViewCubeIcon.Draw(devDept.Eyeshot.RenderParams)">
      <summary>
            Draws the origin symbol.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.Enabled">
      <summary>
            Gets or sets the enabled status.
            </summary>
      <remarks>If false and <see cref="!:ViewCubeIcon.Visible" /> is true, the ViewCubeICon is drawn with transparency and is not selectable.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.ViewCubeIcon.Contains(System.Drawing.Point)">
      <summary>
            Tells if a point in screen coordinates is over the ViewCube.
            </summary>
      <param name="mousePos">Mouse cursor position (zero on top)</param>
      <returns>True if the point is over the ViewCube rectangle, false otherwise.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.ViewCubeIcon.OnMouseMove(System.Windows.Forms.MouseEventArgs,devDept.Eyeshot.Control.Viewport,System.Boolean)">
      <summary>
            Occurs when the mouse moves over the ViewCubeIcon.
            </summary>
      <param name="e">The mouse event argument in screen coordinates</param>
      <param name="viewport">The viewport</param>
      <param name="overButtons">Tells if the mouse is over a <see cref="T:devDept.Eyeshot.Control.ToolBarButton" /> or <see cref="T:devDept.Eyeshot.Control.ProgressBar" /> button</param>
      <returns>True if the selected part of the ViewCubeIcon changes.</returns>
      <remarks>Override this method and return false to disable VewCubeIcon selection.</remarks>
    </member>
    <member name="T:devDept.Eyeshot.Control.ViewCubeIcon.ViewCubeClickEventHandler">
      <summary>
            Represents the method that will handle the <see cref="E:devDept.Eyeshot.Control.ViewCubeIcon.Click" /> event.
            </summary>
      <param name="sender">The source of the event</param>
      <param name="e">A <see cref="T:devDept.Eyeshot.Control.Workspace.ViewChangedEventArgs" /> object that contains the event data</param>
    </member>
    <member name="E:devDept.Eyeshot.Control.ViewCubeIcon.Click">
      <summary>
            Occurs when the <see cref="T:devDept.Eyeshot.Control.ViewCubeIcon" /> is clicked.
            </summary>
      <remarks>In the event handler set <see cref="P:System.ComponentModel.HandledEventArgs.Handled" /> = true in order to prevent the automatic view change.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.ViewCubeIcon.SetView(devDept.Eyeshot.Control.Viewport,devDept.Eyeshot.viewType)">
      <summary>
            Sets the viewport orientation.
            </summary>
      <param name="viewport">The viewport</param>
      <param name="viewOrientation">The view orientation</param>
      <remarks>This method is called after clicking on the ViewCubeIcon, only if the <see cref="E:devDept.Eyeshot.Control.ViewCubeIcon.Click" /> event was not subscribed.</remarks>
      <seealso cref="M:devDept.Eyeshot.Control.Viewport.SetView(devDept.Eyeshot.viewType)" />
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.Position">
      <summary>
            The position on sceeen.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.FrontImage">
      <summary>
            Gets or sets the front face image.
            </summary>
      <remarks>If null, the <see cref="P:devDept.Eyeshot.Control.ViewCubeIcon.FrontText" /> is used instead.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.BackImage">
      <summary>
            Gets or sets the left face image.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.LeftImage">
      <summary>
            Gets or sets the left face image.
            </summary>
      <remarks>
            If null, the <see cref="P:devDept.Eyeshot.Control.ViewCubeIcon.LeftText" /> is used instead.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.RightImage">
      <summary>
            Gets or sets the top face image.
            </summary>
      <remarks>If null, the <see cref="P:devDept.Eyeshot.Control.ViewCubeIcon.TopText" /> is used instead.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.TopImage">
      <summary>
            Gets or sets the top face image.
            </summary>
      <remarks>If null, the <see cref="P:devDept.Eyeshot.Control.ViewCubeIcon.TopText" /> is used instead.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.ViewCubeIcon.BottomImage">
      <summary>
            Gets or sets the bottom face image.
            </summary>
      <remarks>If null, the <see cref="P:devDept.Eyeshot.Control.ViewCubeIcon.BottomText" /> is used instead.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.ViewCubeIcon.ResetImages">
      <summary>
            Resets the images for all the faces.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.ViewCubeIcon.SetImages(System.Drawing.Image[])">
      <summary>
            Sets the images for all the faces.
            </summary>
      <param name="images">The array containing the images for each face (Front, Back, Top, Bottom, Left, Right), can be null/Nothing.</param>
      <remarks>If the input array is null/Nothing then all the images will be set to null/Nothing, otherwise it must contain 6 elements. Each element of the array can be null/Nothing.</remarks>
    </member>
    <member name="T:devDept.Eyeshot.Control.ViewportList">
      <summary>
            Class that holds and manages the list of Viewports.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.Design">
      <summary>
            Design control definition.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.Document">
      <summary>
            Gets the <see cref="T:devDept.Eyeshot.DesignDocument" />.
            </summary>
      <seealso cref="M:devDept.Eyeshot.Control.Design.LoadDocument(devDept.Eyeshot.DesignDocument)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.LoadDocument(devDept.Eyeshot.DesignDocument)">
      <summary>
            Loads a <see cref="T:devDept.Eyeshot.DesignDocument" /> to the control.
            </summary>
      <param name="designDocument">The <see cref="T:devDept.Eyeshot.DesignDocument" />.</param>
      <exception cref="T:devDept.EyeshotException">Thrown when trying to set a <see cref="T:devDept.Eyeshot.Document" /> already linked to another <see cref="T:devDept.Eyeshot.Control.Workspace" />.</exception>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.Viewports">
      <summary>
            Gets or sets the list of viewports.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.ActiveViewportIndex">
      <summary>
            Gets or sets the active viewport index.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.ActiveViewport">
      <summary>
            Gets the active viewport.
            </summary>
      <exception cref="T:System.IndexOutOfRangeException">Throw when <see cref="P:devDept.Eyeshot.Control.Design.Viewports" /> have not been initialized.</exception>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.Units">
      <summary>
            Gets or sets the active units of measurement.
            </summary>
      <remarks>Affects the unit system of exported models.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.ViewportsGap">
      <summary>
            Gets or sets the gap between viewports.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.Materials">
      <summary>Material collection. This collection contains material definitions.</summary>
      <exception cref="T:devDept.EyeshotException">Thrown when trying to set a new collection already linked to another <see cref="P:devDept.Eyeshot.Control.Design.Document" />.</exception>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.ZoomFitMode">
      <summary>
            Gets or sets the convexHull type used as optimization during entities zoom fit.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.Wireframe">
      <summary>
            Gets or sets the display settings for Wireframe mode, shared by all viewports.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.Shaded">
      <summary>
            Gets or sets the display settings for Shaded mode, shared by all viewports.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.Flat">
      <summary>
            Gets or sets the display settings for Flat mode, shared by all viewports.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.Rendered">
      <summary>
            Gets or sets the display settings for Rendered mode, shared by all viewports.
            </summary>
      <remarks>Call <see cref="!:Design.CompileUserInterfaceElements()" /></remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.HiddenLines">
      <summary>
            Sets the Hidden Lines options.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.BoundingBox">
      <summary>
            Bounding box settings.
            </summary>
      <remarks>You need to call <see cref="M:devDept.Eyeshot.Control.Workspace.CompileUserInterfaceElements" /> after assigning a new BoundingBox.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.MinimumFramerate">
      <summary>
            The minimum acceptable framerate for dynamic movements.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.LayoutMode">
      <summary>
            Gets or sets the viewports configuration.
            </summary>
      <remarks>
        <see cref="P:devDept.Eyeshot.Control.Design.Viewports" /> collection needs to be initialized with the correct number of Viewport items before changing this property.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.GetDefaultLayoutMode">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.Light1">
      <summary>
            Light 1 attribute.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.Light2">
      <summary>
            Light 2 attribute.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.Light3">
      <summary>
            Light 3 attribute.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.Light4">
      <summary>
            Light 4 attribute.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.Light5">
      <summary>
            Light 5 attribute.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.Light6">
      <summary>
            Light 6 attribute.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.Light7">
      <summary>
            Light 7 attribute.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.Light8">
      <summary>
            Light 8 attribute.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.AmbientLight">
      <summary>
            Gets or sets the ambient light that is always added to the scene (multiplied by the material's ambient component).
            </summary>
      <seealso cref="P:devDept.Eyeshot.Control.Design.DefaultMaterial" />
      <seealso cref="P:devDept.Eyeshot.Control.Design.Materials" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.DefaultMaterial">
      <summary>
            Gets or sets the default material attributes used by the entities without their own material.
            </summary>
      <remarks>Only <see cref="P:devDept.Eyeshot.Material.Ambient" />, <see cref="P:devDept.Eyeshot.Material.Specular" /> and <see cref="P:devDept.Eyeshot.Material.Shininess" /> are used.</remarks>
      <seealso cref="!:SelectionColor" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.GroundPlaneDistance">
      <summary>
            Gets or sets the distance between the ground plane and the design's bounding box expressed as a fraction of the design height. 
            </summary>
      <remarks>This distance is use to compute the plane used by the planar reflections and the planar shadows</remarks>
      <seealso cref="P:devDept.Eyeshot.Control.DisplayModeSettingsRendered.PlanarReflections" />
      <seealso cref="P:devDept.Eyeshot.Control.DisplayModeSettingsShaded.ShadowMode" />
      <seealso cref="M:devDept.Eyeshot.Control.Design.GetPlanarReflectionsPlane" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.PlanarShadowOpacity">
      <summary>
            Gets or sets the planar shadow's opacity. 
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.ClippingPlane1">
      <summary>
            Clipping plane 1 attributes.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.ClippingPlane2">
      <summary>
            Clipping plane 2 attributes.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.ClippingPlane3">
      <summary>
            Clipping plane 3 attributes.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.ClippingPlane4">
      <summary>
            Clipping plane 4 attributes.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.ClippingPlane5">
      <summary>
            Clipping plane 5 attributes.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.ClippingPlane6">
      <summary>
            Clipping plane 6 attributes.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.ObjectManipulator">
      <summary>
            The manipulator used to graphically position the selected entities.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.ViewportBorder">
      <summary>
            Gets or sets the border settings.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.DefaultColor">
      <summary>
            Gets or sets the default color used by top level entities with <see cref="F:devDept.Eyeshot.Entities.colorMethodType.byParent" /> color method.
            </summary>
      <seealso cref="P:devDept.Eyeshot.Entities.Entity.ColorMethod" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.Backface">
      <summary>
            Gets or sets the backface settings, shared by all viewports. This settings don't apply to multicolor entities like <see cref="T:devDept.Eyeshot.Entities.Mesh" /> for example.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.KeepSceneUpright">
      <summary>
            Gets or sets a flag that keeps the scene upright when doing SetView operations or clicking on the <see cref="T:devDept.Eyeshot.Control.ViewCubeIcon" /> faces.
            </summary>
      <remarks>If false, the SetView operations and the mouse clicks on the ViewCubeIcon set the orientation with the up-vector closest to the current one.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.OrientationMode">
      <summary>
            Gets or sets the coordinate system orientation mode.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.AssemblySelectionMode">
      <summary>
            Gets or sets a boolean that determines whether the selection goes inside the <see cref="T:devDept.Eyeshot.Entities.BlockReference" /> tree.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.SelectionFilterMode">
      <summary>
            Gets or sets the pick filter used by the pick action modes.
            </summary>
      <seealso cref="!:ActionMode" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.SplitterMoving">
      <summary>
        <para>WinForms: When the viewport control is hosted inside a SplitContainer
            control an annoying repaint issue is present during SplitContainer splitter
            moving.</para>
        <para>WPF: When the viewport control is hosted inside a Grid control with
            GridSplitter an annoying repaint issue is present during GridSplitter
            moving.</para>
        <para>Setting properly this flag it can be avoided.</para>
      </summary>
      <example>
            The following code fragment demonstrates the usage of the SplitterMoving flag to
            avoid the SplitControl repaint issue during GridSplitter moving. 
            <code lang="C#"><![CDATA[// WinForms
            bool first = true;
            private void splitContainer1_SplitterMoving(object sender, SplitterCancelEventArgs e)
            {
               if (first == true)
               {
                  MainViewport.SplitterMoving = true;
                  first = false;
               }
            }
            private void splitContainer1_SplitterMoved(object sender, SplitterEventArgs e)
            {
               first = true;
               MainViewport.SplitterMoving = false;
            }
            
            // WPF
            private void GridSplitter1_PreviewMouseDown(object sender, MouseButtonEventArgs e)
            {
            	MainViewport.SplitterMoving = true;
            }
            private void GridSplitter1_PreviewMouseUp(object sender, MouseButtonEventArgs e)
            {
            	MainViewport.SplitterMoving = false;
            }]]></code><code lang="VB"><![CDATA[// WinForms
            Dim first As Boolean = True
            Private Sub SplitContainer1_SplitterMoving(ByVal sender As System.Object, ByVal e As System.Windows.Forms.SplitterCancelEventArgs) Handles SplitContainer1.SplitterMoving
               If first = True Then
                  MainViewport.SplitterMoving = True
                  first = False
               End If
            End Sub
            Private Sub SplitContainer1_SplitterMoved(ByVal sender As System.Object, ByVal e As System.Windows.Forms.SplitterEventArgs) Handles SplitContainer1.SplitterMoved
               first = True
               MainViewport.SplitterMoving = False
            End Sub
            // WPF
            Private Sub GridSplitter1_PreviewMouseDown(ByVal sender As System.Object, ByVal e As System.Windows.Input.MouseButtonEventArgs) Handles GridSplitter1.PreviewMouseDown
                MainViewport.SplitterMoving = True
            End Sub
            Private Sub GridSplitter1__PreviewMouseUp(ByVal sender As System.Object, ByVal e As System.Windows.Input.MouseButtonEventArgs) Handles GridSplitter1.PreviewMouseUp
                MainViewport.SplitterMoving = False
            End Sub]]></code></example>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.FaceSelectionAngle">
      <summary>
            Gets or sets the angle (in radians) used to discriminate adjacent triangles in the selection of the faces of Mesh and Solids.
            </summary>
      <remarks>The default is 0.5 rad.</remarks>
      <seealso cref="P:devDept.Eyeshot.Entities.Mesh.Faces" />
      <seealso cref="P:devDept.Eyeshot.Entities.Solid.Faces" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.WriteDepthForTransparents">
      <summary>
            When true, adds an extra pass to write transparent entities in the Z buffer.
            </summary>
      <remarks>Refers to inaccurate transparency only.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.WriteDepthForFrozen">
      <summary>
            When true, frozen entities are drawn in the Z buffer.
            </summary>
      <remarks>See <see cref="M:devDept.Eyeshot.Control.Workspace.SetCurrent(devDept.Eyeshot.Entities.BlockReference,System.Boolean)" /></remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.PrintPreview(System.Drawing.Size,System.Boolean)">
      <param name="extents">If true fits the entire model in the viewport area to captures the whole scene, else uses the current camera</param>
      <remarks>For more options use the <see cref="T:devDept.Eyeshot.Control.HiddenLinesViewOnPaperPreview" /> class directly.</remarks>
      <seealso cref="!:SetPrinterSettings(PrinterSettings, bool)" />
      <seealso cref="!:PageSetup(bool, bool, int?, PaperSize, bool?)">
      </seealso>
      <seealso cref="M:devDept.Eyeshot.Control.Design.Print(System.Boolean)">
      </seealso>
      <seealso cref="T:devDept.Eyeshot.Control.HiddenLinesViewOnPaper" />
      <seealso cref="T:devDept.Eyeshot.Control.HiddenLinesViewOnPaperPreview" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.Print(System.Boolean)">
      <param name="extents">If true fits the entire model in the viewport area to captures the whole scene, else uses the current camera</param>
      <remarks>For more options use the <see cref="T:devDept.Eyeshot.Control.HiddenLinesViewOnPaper" /> class directly.</remarks>
      <seealso cref="!:SetPrinterSettings(PrinterSettings, bool)" />
      <seealso cref="!:PageSetup(bool, bool, int?, PaperSize, bool?)">
      </seealso>
      <seealso cref="M:devDept.Eyeshot.Control.Design.PrintPreview(System.Drawing.Size,System.Boolean)">
      </seealso>
      <seealso cref="T:devDept.Eyeshot.Control.HiddenLinesViewOnPaper" />
      <seealso cref="T:devDept.Eyeshot.Control.HiddenLinesViewOnPaperPreview" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.SaveFile(System.String,devDept.Eyeshot.Control.Drawing,devDept.Serialization.contentType,devDept.Serialization.FileSerializer)">
      <summary>
            Saves the current scene synchronously on disk, including entities and all the master collections (layers, blocks, etc.)
            </summary>
      <param name="fileName">File name.</param>
      <param name="drawing">The drawing control. Can be null/Nothing.</param>
      <param name="contentType">The <see cref="T:devDept.Serialization.contentType" /> to store the file.</param>
      <param name="fileSerializer">The custom <see cref="T:devDept.Serialization.FileSerializer" /> where are defined custom objects. Can be null/Nothing.</param>
      <remarks>
        <para>This command is based on Eyeshot proprietary file format.
                If the fileSerializer param is null, it skips your custom data.
                If you want to run the operation asynchronously, use the <see cref="T:devDept.Eyeshot.Translators.WriteFile" /> class in conjunction with <see cref="M:devDept.Eyeshot.Control.Workspace.StartWork(devDept.WorkUnit)" /> method.         
                </para>
      </remarks>
      <seealso cref="T:devDept.Eyeshot.Translators.WriteFile" />
      <seealso cref="M:devDept.Eyeshot.Control.Design.OpenFile(System.String,devDept.Eyeshot.Control.Drawing,devDept.Serialization.FileSerializer)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.SaveFile(System.IO.Stream,devDept.Eyeshot.Control.Drawing,devDept.Serialization.contentType,devDept.Serialization.FileSerializer)">
      <summary>
            Saves the current scene synchronously on disk, including entities and all the master collections (layers, blocks, etc.)
            </summary>
      <param name="stream">The file stream.</param>
      <param name="drawing">The drawing control. Can be null/Nothing.</param>
      <param name="contentType">The <see cref="T:devDept.Serialization.contentType" /> to store the file.</param>
      <param name="fileSerializer">The custom <see cref="T:devDept.Serialization.FileSerializer" /> where are defined custom objects. Can be null/Nothing.</param>
      <remarks>
        <para>This command is based on Eyeshot proprietary file format.
                If the fileSerializer param is null, it skips your custom data.
                If you want to run the operation asynchronously, use the <see cref="T:devDept.Eyeshot.Translators.WriteFile" /> class in conjunction with <see cref="M:devDept.Eyeshot.Control.Workspace.StartWork(devDept.WorkUnit)" /> method instead.
                </para>
      </remarks>
      <seealso cref="T:devDept.Eyeshot.Translators.WriteFile" />
      <seealso cref="M:devDept.Eyeshot.Control.Design.OpenFile(System.IO.Stream,devDept.Eyeshot.Control.Drawing,devDept.Serialization.FileSerializer)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.OpenFile(System.String,devDept.Eyeshot.Control.Drawing,devDept.Serialization.FileSerializer)">
      <summary>
            Restores the scene synchronously from disk, including entities and all the master collections (layers, blocks, etc.)
            </summary>
      <param name="fileName">File name.</param>
      <param name="drawing">The drawing control. Can be null/Nothing.</param>
      <param name="fileSerializer">The <see cref="T:devDept.Serialization.FileSerializer" />. Can be null/Nothing.</param>
      <remarks>
        <para>This command is based on Eyeshot proprietary file format.
                If the fileSerializer param is null, it skips your custom data.
                If you want to run the operation asynchronously, use the <see cref="T:devDept.Eyeshot.Translators.ReadFile" /> class in conjunction with <see cref="M:devDept.Eyeshot.Control.Workspace.StartWork(devDept.WorkUnit)" /> method instead.
                </para>
      </remarks>
      <seealso cref="T:devDept.Eyeshot.Translators.ReadFile" />
      <seealso cref="M:devDept.Eyeshot.Control.Design.SaveFile(System.String,devDept.Eyeshot.Control.Drawing,devDept.Serialization.contentType,devDept.Serialization.FileSerializer)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.OpenFile(System.IO.Stream,devDept.Eyeshot.Control.Drawing,devDept.Serialization.FileSerializer)">
      <summary>
            Restores the scene synchronously from disk, including entities and all the master collections (layers, blocks, etc.)
            </summary>
      <param name="stream">The file stream.</param>
      <param name="drawing">The drawing control. Can be null/Nothing.</param>
      <param name="fileSerializer">The <see cref="T:devDept.Serialization.FileSerializer" />. Can be null/Nothing.</param>
      <remarks>
        <para>This command is based on Eyeshot proprietary file format.
                If the fileSerializer param is null, it skips your custom data.
                If you want to run the operation asynchronously, use the <see cref="T:devDept.Eyeshot.Translators.ReadFile" /> class in conjunction with <see cref="M:devDept.Eyeshot.Control.Workspace.StartWork(devDept.WorkUnit)" /> method.
                </para>
      </remarks>
      <seealso cref="T:devDept.Eyeshot.Translators.ReadFile" />
      <seealso cref="M:devDept.Eyeshot.Control.Design.SaveFile(System.IO.Stream,devDept.Eyeshot.Control.Drawing,devDept.Serialization.contentType,devDept.Serialization.FileSerializer)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.CreateBOMTable(devDept.Eyeshot.EntityList,devDept.Eyeshot.BlockKeyedCollection,System.String,System.String,System.String,System.String,System.Boolean,devDept.Eyeshot.Entities.Table.flowDirection,System.Int32)">
      <summary>
            Creates the Bill Of Materials. 
            </summary>
      <param name="entites">The entities collection. </param>
      <param name="blocks">The blocks collection. </param>
      <param name="itemNumberText">The text on the header row of the item number column. </param>
      <param name="partNumberText">The text on the header row of the part number column. </param>
      <param name="descriptionText">The text on the header raw of the description column. </param>
      <param name="quantityText">The text on the header raw of the quantity column. </param>
      <param name="partsOnly">If true, only the block containing geometry are taken in account to create the table. </param>
      <param name="flowDirection">The table's flow direction. </param>
      <param name="maxLevel">The maximum depth level of the Bill of Materials. </param>
      <returns> Returns a Table entity that represents the Bill of Materials. </returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.CreateBillOfMaterials(devDept.Eyeshot.EntityList,devDept.Eyeshot.BlockKeyedCollection,System.Boolean,System.Int32)">
      <summary>
            Creates the data for the Bill Of Materials.
            </summary>
      <param name="entities">The entities collection. </param>
      <param name="blocks">The blocks collection. </param>
      <param name="partsOnly">If true, only the block containing geometry are taken in account to create the table.</param>
      <param name="maxLevel">The maximum depth level of the Bill of Materials.  </param>
      <returns>A DataTable containing the Bill of Materials data.</returns>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.SketchManager">
      <summary>
            The <see cref="!:devDept.Eyeshot.SketchManager" /> for <see cref="T:devDept.Eyeshot.Entities.SketchEntity" /> editing.
            </summary>
      <seealso cref="M:devDept.Eyeshot.Control.Design.EditSketch(devDept.Eyeshot.Entities.SketchEntity)" />
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.ResetOpenBlocks(System.Boolean)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.NewSketch(devDept.Geometry.Plane)">
      <summary>
            Sets the sketch entity for editing. 
            </summary>
      <param name="sketchPlane">The sketch plane.</param>
      <returns>
      </returns>
      <seealso cref="E:devDept.Eyeshot.Control.SketchManager.EditStarted" />
      <seealso cref="E:devDept.Eyeshot.Control.SketchManager.EditEnded" />
      <seealso cref="E:devDept.Eyeshot.Control.SketchManager.SystemSolved" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.NewSketch(System.Int32,devDept.Eyeshot.Entities.Brep)">
      <summary>
            Creates a new sketch on the Brep face.
            </summary>
      <param name="faceIndex">The brep face index.</param>
      <param name="brep">The brep.</param>
      <seealso cref="E:devDept.Eyeshot.Control.SketchManager.EditStarted" />
      <seealso cref="E:devDept.Eyeshot.Control.SketchManager.EditEnded" />
      <seealso cref="E:devDept.Eyeshot.Control.SketchManager.SystemSolved" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.EditSketch(devDept.Eyeshot.Entities.SketchEntity)">
      <summary>
            Sets the sketch entity for editing. 
            </summary>
      <param name="sketchEntity">The sketch.</param>
      <seealso cref="E:devDept.Eyeshot.Control.SketchManager.EditStarted" />
      <seealso cref="E:devDept.Eyeshot.Control.SketchManager.EditEnded" />
      <seealso cref="E:devDept.Eyeshot.Control.SketchManager.SystemSolved" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.UpdateViewportsSizeAndLocation">
      <summary>
            Updates the Viewports dimensions and locations depending on the <see cref="P:devDept.Eyeshot.Control.Design.LayoutMode" /> property.
            </summary>
      <remarks>If overridden, in WPF must call <see cref="!:Workspace.ApplyOpacityMask" /></remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.ExtrudeText(devDept.Eyeshot.Entities.Text,System.Double,System.Double,System.Boolean)">
      <summary>
            Extrudes a text creating an array of new solids.
            </summary>
      <param name="text">Entity text</param>
      <param name="tolerance">Entity text needs to be converted to Solid type, this is the conversion tolerance (chordal error).</param>
      <param name="amount">Extrusion amount</param>
      <param name="endCaps">Closing Caps on both ends</param>
      <returns>The created array of solids.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.ExtrudeText(devDept.Eyeshot.Entities.Text,System.Double,devDept.Geometry.Vector3D,System.Boolean)">
      <summary>
            Extrudes a text creating an array of new solids.
            </summary>
      <param name="text">Entity text</param>
      <param name="tolerance">Entity text needs to be converted to Solid type, this is the conversion tolerance (chordal error).</param>
      <param name="amount">Extrusion amount</param>
      <param name="endCaps">Closing Caps on both ends</param>
      <returns>The created array of solids.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.ExtrudeText(devDept.Eyeshot.Entities.Text,System.Double,System.Double,System.Boolean,devDept.Eyeshot.Entities.Mesh.natureType)">
      <summary>
            Extrudes a text creating an array of new meshes.
            </summary>
      <param name="text">Entity text</param>
      <param name="tolerance">Entity text needs to be converted to Mesh type, this is the conversion tolerance (chordal error).</param>
      <param name="amount">Extrusion amount</param>
      <param name="endCaps">Closing Caps on both ends</param>
      <param name="meshNature">Nature of the resulting mesh entity</param>
      <returns>The created array of meshes.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.ExtrudeText(devDept.Eyeshot.Entities.Text,System.Double,devDept.Geometry.Vector3D,System.Boolean,devDept.Eyeshot.Entities.Mesh.natureType)">
      <summary>
            Extrudes a text creating an array of new meshes.
            </summary>
      <param name="text">Entity text</param>
      <param name="tolerance">Entity text needs to be converted to Mesh type, this is the conversion tolerance (chordal error).</param>
      <param name="amount">Extrusion amount</param>
      <param name="endCaps">Closing Caps on both ends</param>
      <param name="meshNature">Nature of the resulting mesh entity</param>
      <returns>The created array of meshes.</returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.RotateCamera(System.Int32,System.Int32)">
      <summary>
            Rotates the view of the specified amount.
            </summary>
      <param name="dx">Horizontal rotation amount</param>
      <param name="dy">Vertical rotation amount</param>
      <seealso cref="!:ZoomCamera(int)" />
      <seealso cref="!:PanCamera(System.Drawing.Point, System.Drawing.Point)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.RotateCamera(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Rotates the view of the specified amount.
            </summary>
      <param name="dx">Horizontal rotation amount</param>
      <param name="dy">Vertical rotation amount</param>
      <param name="animate">If true performs an animation when changing the view</param>
      <seealso cref="!:ZoomCamera(int)" />
      <seealso cref="!:PanCamera(System.Drawing.Point, System.Drawing.Point)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.RotateCamera(System.Drawing.Point,System.Drawing.Point)">
      <summary>
            Rotates the view simulating the movement between two mouse position.
            </summary>
      <param name="mousePos1">The initial mouse position</param>
      <param name="mousePos2">The final mouse position</param>
      <seealso cref="!:ZoomCamera(int)" />
      <seealso cref="!:PanCamera(System.Drawing.Point, System.Drawing.Point)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.RotateCamera(devDept.Geometry.Vector3D,devDept.Geometry.Vector3D)">
      <summary>
            Rotates the view of the specified amount.
            </summary>
      <param name="last">Previous axis</param>
      <param name="current">Current axis</param>
      <seealso cref="!:ZoomCamera(int)" />
      <seealso cref="M:devDept.Eyeshot.Control.Design.RotateCamera(devDept.Geometry.Vector3D,devDept.Geometry.Vector3D)" />
      <seealso cref="!:PanCamera(System.Drawing.Point, System.Drawing.Point)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.RotateCamera(devDept.Geometry.Vector3D,devDept.Geometry.Vector3D,System.Boolean)">
      <summary>
            Rotates the view of the specified amount.
            </summary>
      <param name="last">Previous axis</param>
      <param name="current">Current axis</param>
      <param name="animate">If true performs an animation when changing the view</param>
      <seealso cref="!:ZoomCamera(int)" />
      <seealso cref="M:devDept.Eyeshot.Control.Design.RotateCamera(devDept.Geometry.Vector3D,devDept.Geometry.Vector3D)" />
      <seealso cref="!:PanCamera(System.Drawing.Point, System.Drawing.Point)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.RotateCamera(devDept.Geometry.Vector3D,System.Double,System.Boolean)">
      <summary>
            Rotates the view of the specified amount.
            </summary>
      <param name="axis">Rotation axis</param>
      <param name="rotAngleInDegrees">Rotation amount</param>
      <param name="trackBall">if true, the rotation is applied after the current rotation, else it's applied before</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.RotateCamera(devDept.Geometry.Vector3D,System.Double,System.Boolean,System.Boolean)">
      <summary>
            Rotates the view of the specified amount.
            </summary>
      <param name="axis">Rotation axis</param>
      <param name="rotAngleInDegrees">Rotation amount</param>
      <param name="trackBall">if true, the rotation is applied after the current rotation, else it's applied before</param>
      <param name="animate">If true performs an animation when changing the view</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.OrientCamera(devDept.Geometry.Point3D,devDept.Geometry.Point3D)">
      <summary>
            Orients the Camera between the two specified points.
            </summary>
      <param name="location">The camera location</param>
      <param name="target">The new camera target</param>
      <remarks>The <param nameref="location" /> parameter is used just to determine the direction. The final <see cref="P:devDept.Eyeshot.Camera.Location" /> depends on the <paramref name="target" /> and the <see cref="P:devDept.Eyeshot.Camera.Distance" /></remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.RotateLeft(System.Double)">
      <summary>
            Rotates the view to the left.
            </summary>
      <param name="degrees">Degrees of rotation</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.RotateRight(System.Double)">
      <summary>
            Rotates the view to the right.
            </summary>
      <param name="degrees">Degrees of rotation</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.RotateUp(System.Double)">
      <summary>
            Rotates the view upwards.
            </summary>
      <param name="degrees">Degrees of rotation</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.RotateDown(System.Double)">
      <summary>
            Rotates the view downwards.
            </summary>
      <param name="degrees">Degrees of rotation</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.MoveToPlane(System.Collections.Generic.ICollection{devDept.Eyeshot.Entities.Entity},devDept.Geometry.Point3D,devDept.Geometry.Point3D,devDept.Geometry.Point3D)">
      <summary>
            Moves a list of entities from plane XY to the specified plane.
            </summary>
      <param name="entList">The entity list</param>
      <param name="origin">The destination plane origin</param>
      <param name="xAxis">The destination plane X axis</param>
      <param name="yAxis">The destination plane Y axis</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.MoveToPlane(System.Collections.Generic.ICollection{devDept.Eyeshot.Entities.Entity},devDept.Geometry.Plane)">
      <summary>
            Moves a list of entities from plane XY to the specified plane.
            </summary>
      <param name="entList">The entity list</param>
      <param name="plane">Destination plane</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.MoveToPlane(System.Collections.Generic.IList{devDept.Geometry.Point3D},devDept.Geometry.Plane)">
      <summary>
            Moves a list of points from plane XY to the specified plane.
            </summary>
      <param name="points">The points list</param>
      <param name="plane">Destination plane</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.FindClosestTriangle(devDept.Eyeshot.Entities.IFace,System.Drawing.Point,devDept.Geometry.Point3D@,System.Int32@)">
      <summary>
            Finds the closest triangle to the viewer of the specified entity.
            </summary>
      <param name="entity">The entity</param>
      <param name="mousePos">Mouse cursor position</param>
      <param name="hitPoint">Closest triangle intersection point in the <see cref="P:devDept.Eyeshot.Control.Workspace.Parents" /> coordinate system.</param>
      <param name="hitTriangleIndex">Closest triangle index</param>
      <returns>The numbers of triangles found under the mouse cursor.</returns>
      <seealso cref="!:Design.FindClosestVertex(System.Drawing.Point, double, out Point3D)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.FindClosestTriangle(devDept.Eyeshot.SelectedItem,System.Drawing.Point,devDept.Geometry.Point3D@,System.Int32@)">
      <summary>
            Finds the closest triangle to the viewer of the specified item (which must be related to an <see cref="T:devDept.Eyeshot.Entities.IFace" /> entity and may include the parents stack for nested entities).
            </summary>
      <param name="item">The item</param>
      <param name="mousePos">Mouse cursor position</param>
      <param name="hitPoint">Closest triangle intersection point in the <see cref="P:devDept.Eyeshot.Control.Workspace.Parents" /> coordinate system.</param>
      <param name="hitTriangleIndex">Closest triangle index</param>
      <returns>The numbers of triangles found under the mouse cursor.</returns>
      <seealso cref="!:Design.FindClosestVertex(System.Drawing.Point, double, out Point3D)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.FindClosestTriangle(devDept.Eyeshot.Entities.IFace,System.Drawing.Point)">
      <summary>
            Finds the closest triangle to the viewer of the specified entity.
            </summary>
      <param name="entity">The entity</param>
      <param name="mousePos">Mouse cursor position (zero on top)</param>
      <returns>A sorted (by distance from the viewer) list of <see cref="T:devDept.Eyeshot.Entities.HitTriangle" /> found under the mouse cursor.</returns>
      <seealso cref="!:Design.FindClosestVertex(System.Drawing.Point, double, out Point3D)" />
      <remarks>If the entity is inside a <see cref="T:devDept.Eyeshot.Entities.BlockReference" />, it must be set as current.</remarks>
      <remarks>The triangles intersection points are in the <see cref="P:devDept.Eyeshot.Control.Workspace.Parents" /> coordinate system.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.FindClosestTriangle(devDept.Eyeshot.SelectedItem,System.Drawing.Point)">
      <summary>
            Finds the closest triangle to the viewer of the specified item (which must be related to an <see cref="T:devDept.Eyeshot.Entities.IFace" /> entity and may include the parents stack for nested entities).
            </summary>
      <param name="item">The item</param>
      <param name="mousePos">Mouse cursor position (zero on top)</param>
      <returns>A sorted (by distance from the viewer) list of <see cref="T:devDept.Eyeshot.Entities.HitTriangle" /> found under the mouse cursor.</returns>
      <seealso cref="!:Design.FindClosestVertex(System.Drawing.Point, double, out Point3D)" />
      <remarks>The triangles intersection points are in the <see cref="P:devDept.Eyeshot.Control.Workspace.Parents" /> coordinate system.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.StartAnimation">
      <summary>
        <para>Starts the animation timer. After calling this method the <see cref="M:devDept.Eyeshot.Entities.Entity.Animate(System.Int32)">Animate</see> method of all the entities is called periodically to allow the 
            computation of the new entity position.</para>
        <para>To animate group of entities the approach is the following:</para>
        <list type="number">
          <item>
            <description>Create groups of moving objects (using <see cref="T:devDept.Eyeshot.Block" /> class and adding entities to the <see cref="P:devDept.Eyeshot.Block.Entities" /> collection)</description>
          </item>
          <item>
            <description>Add blocks created at point 1) to the <see cref="!:Design.Blocks" /> collection</description>
          </item>
          <item>
            <description>Subclass the <see cref="T:devDept.Eyeshot.Entities.BlockReference">BlockReference</see> class for each moving group of objects</description>
          </item>
          <item>
            <description>Override the <see cref="!:BlockReference.Animate">BlockReference.Animate()</see> method of the class at point 3) and add the code to compute the data for entities transformation at that specific time frame</description>
          </item>
          <item>
            <description>Override the <see cref="M:devDept.Eyeshot.Entities.BlockReference.MoveTo(devDept.Eyeshot.DrawParams)">BlockReference.MoveTo()</see> method of the class at point 3) and add the code to move the objects on the GPU</description>
          </item>
          <item>
            <description>Override the <see cref="M:devDept.Eyeshot.Entities.Entity.IsInFrustum(devDept.Eyeshot.FrustumParams,devDept.Geometry.Point3D,System.Double)">Entity.IsInFrustum()</see> method of the class at point 3) and return true without calling the base to avoid undesired clipping. 
            		It might be necessary to override also the <see cref="P:devDept.Eyeshot.Control.BoundingBoxSettings.OverrideSceneExtents">bounding box scene extents</see></description>
          </item>
          <item>
            <description>Add the block references created at point 3) to the <see cref="!:Design.Entities" /> collection</description>
          </item>
          <item>
            <description>Call StartAnimation() providing the time interval between each frame</description>
          </item>
          <item>
            <description>Call StopAnimation() to stop the animation</description>
          </item>
        </list>
      </summary>
      <seealso cref="M:devDept.Eyeshot.Control.Design.StopAnimation">StopAnimation Method</seealso>
      <seealso cref="M:devDept.Eyeshot.Entities.Entity.Animate(System.Int32)">Animate Method</seealso>
      <seealso cref="P:devDept.Eyeshot.Control.DisplayModeSettings.SilhouettesDrawingMode" />
      <seealso cref="P:devDept.Eyeshot.Control.Design.IsAnimationRunning" />
      <seealso cref="!:BoundingBox.OverrideSceneExtents" />
      <seealso cref="M:devDept.Eyeshot.Entities.BlockReference.MoveTo(devDept.Eyeshot.DrawParams)" />
      <remarks>During animation the silhouettes, if enabled, are skipped.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.StartAnimation(System.Int32)">
      <summary>
        <para>Starts the animation timer. After calling this method the <see cref="M:devDept.Eyeshot.Entities.Entity.Animate(System.Int32)">Animate</see> method of all the entities is called periodically to allow the 
            computation of the new entity position.</para>
        <para>To animate group of entities the approach is the following:</para>
        <list type="number">
          <item>
            <description>Create groups of moving objects (using <see cref="T:devDept.Eyeshot.Block" /> class and adding entities to the <see cref="P:devDept.Eyeshot.Block.Entities" /> collection)</description>
          </item>
          <item>
            <description>Add blocks created at point 1) to the <see cref="!:Design.Blocks" /> collection</description>
          </item>
          <item>
            <description>Subclass the <see cref="T:devDept.Eyeshot.Entities.BlockReference">BlockReference</see> class for each moving group of objects</description>
          </item>
          <item>
            <description>Override the <see cref="!:BlockReference.Animate">BlockReference.Animate()</see> method of the class at point 3) and add the code to compute the data for entities transformation at that specific time frame</description>
          </item>
          <item>
            <description>Override the <see cref="M:devDept.Eyeshot.Entities.BlockReference.MoveTo(devDept.Eyeshot.DrawParams)">BlockReference.MoveTo()</see> method of the class at point 3) and add the code to move the objects on the GPU</description>
          </item>
          <item>
            <description>Override the <see cref="M:devDept.Eyeshot.Entities.Entity.IsInFrustum(devDept.Eyeshot.FrustumParams,devDept.Geometry.Point3D,System.Double)">BlockReference.IsInFrustum()</see> method of the class at point 3) and return true without calling the base to avoid undesired clipping. 
            		It might be necessary to override also the <see cref="P:devDept.Eyeshot.Control.BoundingBoxSettings.OverrideSceneExtents">bounding box scene extents</see></description>
          </item>
          <item>
            <description>Add the block references created at point 3) to the <see cref="!:Design.Entities" /> collection</description>
          </item>
          <item>
            <description>Call StartAnimation() providing the time interval between each frame</description>
          </item>
          <item>
            <description>Call StopAnimation() to stop the animation</description>
          </item>
        </list>
      </summary>
      <param name="interval">Timer interval. See <see cref="T:System.Threading.Timer" /> object.</param>
      <seealso cref="M:devDept.Eyeshot.Control.Design.StopAnimation">StopAnimation Method</seealso>
      <seealso cref="M:devDept.Eyeshot.Entities.Entity.Animate(System.Int32)">Animate Method</seealso>
      <seealso cref="P:devDept.Eyeshot.Control.DisplayModeSettings.SilhouettesDrawingMode" />
      <seealso cref="P:devDept.Eyeshot.Control.Design.IsAnimationRunning" />
      <seealso cref="!:BoundingBox.OverrideSceneExtents" />
      <seealso cref="M:devDept.Eyeshot.Entities.BlockReference.MoveTo(devDept.Eyeshot.DrawParams)" />
      <remarks>During animation the silhouettes, if enabled, are skipped.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.StartAnimation(System.Int32,System.Int32)">
      <summary>
        <para>Starts the animation timer. After calling this method the <see cref="M:devDept.Eyeshot.Entities.Entity.Animate(System.Int32)">Animate</see> method of all the entities is called periodically to allow the 
            computation of the new entity position.</para>
        <para>To animate group of entities the approach is the following:</para>
        <list type="number">
          <item>
            <description>Create groups of moving objects (using <see cref="T:devDept.Eyeshot.Block" /> class and adding entities to the <see cref="P:devDept.Eyeshot.Block.Entities" /> collection)</description>
          </item>
          <item>
            <description>Add blocks created at point 1) to the <see cref="!:Design.Blocks" /> collection</description>
          </item>
          <item>
            <description>Subclass the <see cref="T:devDept.Eyeshot.Entities.BlockReference">BlockReference</see> class for each moving group of objects</description>
          </item>
          <item>
            <description>Override the <see cref="!:BlockReference.Animate">BlockReference.Animate()</see> method of the class at point 3) and add the code to compute the data for entities transformation at that specific time frame</description>
          </item>
          <item>
            <description>Override the <see cref="M:devDept.Eyeshot.Entities.BlockReference.MoveTo(devDept.Eyeshot.DrawParams)">BlockReference.MoveTo()</see> method of the class at point 3) and add the code to move the objects on the GPU</description>
          </item>
          <item>
            <description>Override the <see cref="M:devDept.Eyeshot.Entities.Entity.IsInFrustum(devDept.Eyeshot.FrustumParams,devDept.Geometry.Point3D,System.Double)">Entity.IsInFrustum()</see> method of the class at point 3) and return true without calling the base to avoid undesired clipping. 
            		It might be necessary to override also the <see cref="P:devDept.Eyeshot.Control.BoundingBoxSettings.OverrideSceneExtents">bounding box scene extents</see></description>
          </item>
          <item>
            <description>Add the block references created at point 3) to the <see cref="!:Design.Entities" /> collection</description>
          </item>
          <item>
            <description>Call StartAnimation() providing the time interval between each frame</description>
          </item>
          <item>
            <description>Call StopAnimation() to stop the animation</description>
          </item>
        </list>
      </summary>
      <param name="stopAfter">The animation will stop after this number of frames</param>
      <param name="interval">Timer interval, see <see cref="T:System.Threading.Timer" /> object.</param>
      <seealso cref="M:devDept.Eyeshot.Control.Design.StopAnimation">StopAnimation Method</seealso>
      <seealso cref="M:devDept.Eyeshot.Entities.Entity.Animate(System.Int32)">Animate Method</seealso>
      <seealso cref="P:devDept.Eyeshot.Control.DisplayModeSettings.SilhouettesDrawingMode" />
      <seealso cref="P:devDept.Eyeshot.Control.Design.IsAnimationRunning" />
      <seealso cref="!:BoundingBox.OverrideSceneExtents" />
      <seealso cref="M:devDept.Eyeshot.Entities.BlockReference.MoveTo(devDept.Eyeshot.DrawParams)" />
      <remarks>During animation the silhouettes, if enabled, are skipped.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.IsAnimationRunning">
      <summary>
            Tells if the animation is currently running.
            </summary>
      <seealso cref="M:devDept.Eyeshot.Control.Design.StartAnimation" />
      <seealso cref="M:devDept.Eyeshot.Control.Design.StopAnimation" />
      <seealso cref="P:devDept.Eyeshot.Control.DisplayModeSettings.SilhouettesDrawingMode" />
      <remarks>During animation the silhouettes, if enabled, are skipped.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.StopAnimation">
      <summary>Stops the animation timer. Call base class method when overriding.</summary>
      <seealso cref="M:devDept.Eyeshot.Control.Design.StartAnimation(System.Int32)">StartAnimation Method</seealso>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.AnimationStep">
      <summary>Gets or sets the animation step that increments the <see cref="P:devDept.Eyeshot.Control.Design.AnimationFrameNumber" /> at each tick of the animation timer. Can be a negative number.</summary>
      <seealso cref="M:devDept.Eyeshot.Control.Design.StartAnimation(System.Int32)">StartAnimation Method</seealso>
      <seealso cref="M:devDept.Eyeshot.Control.Design.StopAnimation">StopAnimation Method</seealso>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.AnimationInterval">
      <summary>Gets or sets the animation interval.</summary>
      <seealso cref="M:devDept.Eyeshot.Control.Design.StartAnimation(System.Int32)">StartAnimation Method</seealso>
      <seealso cref="M:devDept.Eyeshot.Control.Design.StopAnimation">StopAnimation Method</seealso>
    </member>
    <member name="P:devDept.Eyeshot.Control.Design.AnimationFrameNumber">
      <summary>Gets or sets the animation frame number.</summary>
      <seealso cref="M:devDept.Eyeshot.Control.Design.StartAnimation(System.Int32)">StartAnimation Method</seealso>
      <seealso cref="M:devDept.Eyeshot.Control.Design.StopAnimation">StopAnimation Method</seealso>
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.SetSelectionScope(System.Collections.Generic.Stack{devDept.Eyeshot.Entities.BlockReference})">
      <summary>
            Sets the parents stack that represents the starting point for the selection.
            </summary>
      <remarks>The top most element of the stack is the inner most BlockReference (the last parent of the hierarchy).</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.GetPlanarReflectionsPlane">
      <summary>
             Gets the plane used to draw the planar reflections.
            </summary>
      <returns>The plane</returns>
      <seealso cref="P:devDept.Eyeshot.Control.Design.GroundPlaneDistance" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.SetColorShaded(devDept.Graphics.RenderContextBase,devDept.Eyeshot.Entities.entityNatureType,System.Drawing.Color,System.Boolean,devDept.Eyeshot.BackfaceSettings)">
      <summary>
            Shaded color changer.
            </summary>
      <param name="context">The render context</param>
      <param name="nature">The nature of the entity just to be drawn</param>
      <param name="color">The color</param>
      <param name="selected">The selection status</param>
      <param name="backface">The BackFace settings</param>
      <seealso cref="P:devDept.Eyeshot.Control.Design.Backface" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Design.SetColorRendered(devDept.Graphics.RenderContextBase,devDept.Eyeshot.Entities.entityNatureType,devDept.Eyeshot.Material,System.Boolean,devDept.Eyeshot.RenderParams)">
      <summary>
            Rendered mat changer.
            </summary>
      <param name="nature">The nature of the entity just to be drawn</param>
      <param name="material">The entity material</param>
      <param name="selected">The selection status</param>
      <param name="data">Data for high quality rendering</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.ViewportLayout">
      <summary>
            Deprecated class.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.Model">
      <summary>
            Deprecated class.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.Drawing">
      <summary>
            Drawing control definition.
            </summary>
      <remarks>The line weight factor set to the entities or to the layers are always considered as millimeters. Use the <see cref="P:devDept.Eyeshot.Control.Drawing.LineWeightFactor" /> to change the scale factor used to display the entities line weight.</remarks>
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.LineWeightFactor" />
      <seealso cref="P:devDept.Eyeshot.Entities.Entity.LineWeight" />
      <seealso cref="P:devDept.Eyeshot.Layer.LineWeight" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Drawing.Document">
      <summary>
            Gets the <see cref="T:devDept.Eyeshot.DrawingDocument" />.
            </summary>
      <seealso cref="M:devDept.Eyeshot.Control.Drawing.LoadDocument(devDept.Eyeshot.DrawingDocument)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Drawing.LoadDocument(devDept.Eyeshot.DrawingDocument)">
      <summary>
            Loads a <see cref="T:devDept.Eyeshot.DrawingDocument" /> to the control.
            </summary>
      <param name="drawingDocument">The <see cref="T:devDept.Eyeshot.DrawingDocument" />.</param>
      <exception cref="T:devDept.EyeshotException">Thrown when trying to set a <see cref="T:devDept.Eyeshot.Document" /> already linked to another <see cref="T:devDept.Eyeshot.Control.Workspace" />.</exception>
    </member>
    <member name="P:devDept.Eyeshot.Control.Drawing.ZoomFactor">
      <summary>
            Gets the camera zoom factor.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Drawing.Zoom">
      <summary>
            Gets or sets the Zoom settings.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Drawing.Pan">
      <summary>
            Gets or sets the Pan settings.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Drawing.LineWeightFactor">
      <summary>
            Gets or sets the scale factor used to display the <see cref="T:devDept.Eyeshot.Entities.ICurve" /> line weight.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Drawing.Background">
      <summary>
            Gets Background settings.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Drawing.ToolBar">
      <summary>
            Gets ToolBar settings.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Drawing.ToolBars">
      <summary>
            Gets the ToolBars settings.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Drawing.PaperColor">
      <summary>
            Gets or sets paper color.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Drawing.SilhouettesLayerName">
      <summary>
            Gets or sets the layer name for silhouettes.
            </summary>
      <remarks>When a block related to a <see cref="T:devDept.Eyeshot.Entities.VectorView" /> is built, the entities created for silhouettes are assigned to the layer with this name.</remarks>
      <seealso cref="T:devDept.Eyeshot.ViewBuilder" />
      <seealso cref="M:devDept.Eyeshot.Control.Drawing.Rebuild(devDept.Eyeshot.Control.Design,System.Boolean,System.Boolean)" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Drawing.EdgesLayerName">
      <summary>
            Gets or sets the layer name for edges.
            </summary>
      <remarks>When a block related to a <see cref="T:devDept.Eyeshot.Entities.VectorView" /> is built, the entities created for edges are assigned to the layer with this name.</remarks>
      <seealso cref="T:devDept.Eyeshot.ViewBuilder" />
      <seealso cref="M:devDept.Eyeshot.Control.Drawing.Rebuild(devDept.Eyeshot.Control.Design,System.Boolean,System.Boolean)" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Drawing.WiresLayerName">
      <summary>
            Gets or sets the layer name for wires.
            </summary>
      <remarks>When a block related to a <see cref="T:devDept.Eyeshot.Entities.VectorView" /> is built, the entities created for wires are assigned to the layer with this name.</remarks>
      <seealso cref="T:devDept.Eyeshot.ViewBuilder" />
      <seealso cref="M:devDept.Eyeshot.Control.Drawing.Rebuild(devDept.Eyeshot.Control.Design,System.Boolean,System.Boolean)" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Drawing.HiddenSilhouettesLayerName">
      <summary>
            Gets or sets the layer name for hidden silhouettes.
            </summary>
      <remarks>When a block related to a <see cref="T:devDept.Eyeshot.Entities.VectorView" /> is built, the entities created for hidden silhouettes are assigned to the layer with this name.</remarks>
      <seealso cref="T:devDept.Eyeshot.ViewBuilder" />
      <seealso cref="M:devDept.Eyeshot.Control.Drawing.Rebuild(devDept.Eyeshot.Control.Design,System.Boolean,System.Boolean)" />
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.HiddenSegmentsLineTypeName" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Drawing.HiddenEdgesLayerName">
      <summary>
            Gets or sets the layer name for hidden edges.
            </summary>
      <remarks>When a block related to a <see cref="T:devDept.Eyeshot.Entities.VectorView" /> is built, the entities created for hidden edges are assigned to the layer with this name.</remarks>
      <seealso cref="T:devDept.Eyeshot.ViewBuilder" />
      <seealso cref="M:devDept.Eyeshot.Control.Drawing.Rebuild(devDept.Eyeshot.Control.Design,System.Boolean,System.Boolean)" />
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.HiddenSegmentsLineTypeName" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Drawing.HiddenWiresLayerName">
      <summary>
            Gets or sets the layer name for hidden wires.
            </summary>
      <remarks>When a block related to a <see cref="T:devDept.Eyeshot.Entities.VectorView" /> is built, the entities created for hidden wires are assigned to the layer with this name.</remarks>
      <seealso cref="T:devDept.Eyeshot.ViewBuilder" />
      <seealso cref="M:devDept.Eyeshot.Control.Drawing.Rebuild(devDept.Eyeshot.Control.Design,System.Boolean,System.Boolean)" />
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.HiddenSegmentsLineTypeName" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Drawing.CenterlinesLayerName">
      <summary>
            Gets or sets the layer name for centerlines.
            </summary>
      <remarks>When a block related to a <see cref="T:devDept.Eyeshot.Entities.VectorView" /> is built, the entities created for centerlines are assigned to the layer with this name.</remarks>
      <seealso cref="T:devDept.Eyeshot.ViewBuilder" />
      <seealso cref="M:devDept.Eyeshot.Control.Drawing.Rebuild(devDept.Eyeshot.Control.Design,System.Boolean,System.Boolean)" />
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.CenterlinesLineTypeName" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Drawing.HiddenSegmentsLineTypeName">
      <summary>
            Gets or sets the line type name for hidden lines layers.
            </summary>
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.HiddenSilhouettesLayerName" />
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.HiddenEdgesLayerName" />
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.HiddenWiresLayerName" />
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.Layers" />
      <seealso cref="T:devDept.Eyeshot.ViewBuilder" />
      <seealso cref="M:devDept.Eyeshot.Control.Drawing.Rebuild(devDept.Eyeshot.Control.Design,System.Boolean,System.Boolean)" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Drawing.CenterlinesLineTypeName">
      <summary>
            Gets or sets the line type name for centerlines layer.
            </summary>
      <seealso cref="P:devDept.Eyeshot.Control.Workspace.Layers" />
      <seealso cref="T:devDept.Eyeshot.ViewBuilder" />
      <seealso cref="M:devDept.Eyeshot.Control.Drawing.Rebuild(devDept.Eyeshot.Control.Design,System.Boolean,System.Boolean)" />
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.CenterlinesLayerName" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Drawing.ViewBuilderText">
      <summary>
            Gets or sets the progress bar text displayed while bulding the view when executed asynchronously.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Drawing.ViewBuilderSuffix">
      <summary>
            Gets or sets the progress bar suffix text displayed while bulding the view when executed asynchronously. If null it shows the view name.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Drawing.Rebuild(devDept.Eyeshot.Control.Design,System.Boolean,System.Boolean)">
      <summary>
            Rebuilds sheets on this drawing.
            </summary>
      <param name="design">The design control.</param>
      <param name="async">When true, the views are rebuilt asynchronously.</param>
      <param name="changedOnly">When true only missing/changed views are built.</param>
      <see cref="E:devDept.Eyeshot.Control.Workspace.WorkCompleted" />
      <see cref="E:devDept.Eyeshot.Control.Workspace.WorkFailed" />
      <see cref="E:devDept.Eyeshot.Control.Workspace.WorkCancelled" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Drawing.#ctor">
      <summary>
            Standard constructor.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Drawing.AddDefaultLayersAndLineTypes">
      <summary>
            Add the default layers and line types if missing.
            </summary>
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.SilhouettesLayerName" />
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.EdgesLayerName" />
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.WiresLayerName" />
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.HiddenSilhouettesLayerName" />
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.HiddenEdgesLayerName" />
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.HiddenWiresLayerName" />
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.CenterlinesLayerName" />
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.HiddenSegmentsLineTypeName" />
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.CenterlinesLineTypeName" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Drawing.AddDefaultLineTypes">
      <summary>
            Add the default line types if missing.
            </summary>
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.HiddenSegmentsLineTypeName" />
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.CenterlinesLineTypeName" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Drawing.CopyTo(devDept.Eyeshot.Control.Workspace,System.Boolean,System.Boolean)">
      <summary>
            Copies all items inside control master collections (<see cref="P:devDept.Eyeshot.Control.Drawing.Sheets" />, <see cref="P:devDept.Eyeshot.Control.Viewport.Labels" />, <see cref="P:devDept.Eyeshot.Control.Workspace.Blocks" />, <see cref="P:devDept.Eyeshot.Control.Workspace.Layers" />, <see cref="P:devDept.Eyeshot.Control.Design.Materials" />, <see cref="P:devDept.Eyeshot.Control.Workspace.TextStyles" />, <see cref="P:devDept.Eyeshot.Control.Workspace.LineTypes" />) to the specified Workspace.
            </summary>
      <param name="destination">The Workspace that is the destination of the elements copied.</param>
      <param name="replaceRootBlock">When true and <paramref name="destination" /> is a <see cref="T:devDept.Eyeshot.Control.Design" /> control, its root block is replaced.</param>
      <param name="skipSheets">When true and <paramref name="destination" /> is a <see cref="T:devDept.Eyeshot.Control.Drawing" /> control, the <see cref="P:devDept.Eyeshot.Control.Drawing.Sheets" /> collection is not copied.</param>
      <remarks>
            You need to call <see cref="M:devDept.Eyeshot.Control.Workspace.Invalidate" /> to see the effect of this command in the destination drawing.
            </remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Drawing.PrintPreview(System.Drawing.Size)">
      <seealso cref="!:SetPrinterSettings(PrinterSettings, bool)" />
      <seealso cref="!:PageSetup(bool, bool, int?, PaperSize, bool?)">
      </seealso>
      <seealso cref="M:devDept.Eyeshot.Control.Drawing.Print">
      </seealso>
    </member>
    <member name="M:devDept.Eyeshot.Control.Drawing.Print">
      <remarks>For more options use the <see cref="T:devDept.Eyeshot.Control.HiddenLinesViewOnPaper" /> class directly.</remarks>
      <seealso cref="!:SetPrinterSettings(PrinterSettings, bool)" />
      <seealso cref="!:PageSetup(bool, bool, int?, PaperSize, bool?)">
      </seealso>
      <seealso cref="M:devDept.Eyeshot.Control.Drawing.PrintPreview(System.Drawing.Size)">
      </seealso>
    </member>
    <member name="M:devDept.Eyeshot.Control.Drawing.SaveFile(System.String,devDept.Eyeshot.Control.Design,devDept.Serialization.FileSerializer)">
      <summary>
            Saves the current scene synchronously on disk, including entities and all the master collections (layers, blocks, etc.)
            </summary>
      <param name="fileName">File name.</param>
      <param name="design">The design control.</param>
      <param name="fileSerializer">The <see cref="T:devDept.Serialization.FileSerializer" />. Can be null/Nothing.</param>
      <remarks>
        <para>This command is based on Eyeshot proprietary file format.
                If the fileSerializer param is null, it skips your custom data.
                If you want to run the operation asynchronously, use the <see cref="T:devDept.Eyeshot.Translators.WriteFile" /> class in conjunction with <see cref="M:devDept.Eyeshot.Control.Workspace.StartWork(devDept.WorkUnit)" /> method.
                </para>
      </remarks>
      <seealso cref="T:devDept.Eyeshot.Translators.WriteFile" />
      <seealso cref="M:devDept.Eyeshot.Control.Drawing.OpenFile(System.String,devDept.Eyeshot.Control.Design,devDept.Serialization.FileSerializer)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Drawing.SaveFile(System.IO.Stream,devDept.Eyeshot.Control.Design,devDept.Serialization.FileSerializer)">
      <summary>
            Saves the current scene synchronously on disk, including entities and all the master collections (layers, blocks, etc.)
            </summary>
      <param name="stream">The file stream.</param>
      <param name="design">The design control.</param>
      <param name="fileSerializer">The <see cref="T:devDept.Serialization.FileSerializer" />. Can be null/Nothing.</param>
      <remarks>
        <para>This command is based on Eyeshot proprietary file format.
                If the fileSerializer param is null, it skips your custom data.
                If you want to run the operation asynchronously, use the <see cref="T:devDept.Eyeshot.Translators.WriteFile" /> class in conjunction with <see cref="M:devDept.Eyeshot.Control.Workspace.StartWork(devDept.WorkUnit)" /> method.
                </para>
      </remarks>
      <seealso cref="T:devDept.Eyeshot.Translators.WriteFile" />
      <seealso cref="M:devDept.Eyeshot.Control.Drawing.OpenFile(System.IO.Stream,devDept.Eyeshot.Control.Design,devDept.Serialization.FileSerializer)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Drawing.OpenFile(System.String,devDept.Eyeshot.Control.Design,devDept.Serialization.FileSerializer)">
      <summary>
            Restores the scene synchronously from disk, including entities and all the master collections (layers, blocks, etc.)
            </summary>
      <param name="fileName">File name.</param>
      <param name="design">The design control.</param>
      <param name="fileSerializer">The <see cref="T:devDept.Serialization.FileSerializer" />. Can be null/Nothing.</param>
      <remarks>
        <para>This command is based on Eyeshot proprietary file format.
                If the fileSerializer param is null, it skips your custom data.
                If you want to run the operation asynchronously, use the <see cref="T:devDept.Eyeshot.Translators.ReadFile" /> class in conjunction with <see cref="M:devDept.Eyeshot.Control.Workspace.StartWork(devDept.WorkUnit)" /> method.
                </para>
      </remarks>
      <seealso cref="T:devDept.Eyeshot.Translators.ReadFile" />
      <seealso cref="M:devDept.Eyeshot.Control.Drawing.SaveFile(System.String,devDept.Eyeshot.Control.Design,devDept.Serialization.FileSerializer)" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Drawing.OpenFile(System.IO.Stream,devDept.Eyeshot.Control.Design,devDept.Serialization.FileSerializer)">
      <summary>
            Restores the scene synchronously from disk, including entities and all the master collections (layers, blocks, etc.)
            </summary>
      <param name="stream">The file stream.</param>
      <param name="design">The design control.</param>
      <param name="fileSerializer">The <see cref="T:devDept.Serialization.FileSerializer" />. Can be null/Nothing.</param>
      <remarks>
        <para>This command is based on Eyeshot proprietary file format.
                If the fileSerializer param is null, it skips your custom data.
                If you want to run the operation asynchronously, use the <see cref="T:devDept.Eyeshot.Translators.ReadFile" /> class in conjunction with <see cref="M:devDept.Eyeshot.Control.Workspace.StartWork(devDept.WorkUnit)" /> method.
                </para>
      </remarks>
      <seealso cref="T:devDept.Eyeshot.Translators.ReadFile" />
      <seealso cref="M:devDept.Eyeshot.Control.Drawing.SaveFile(System.IO.Stream,devDept.Eyeshot.Control.Design,devDept.Serialization.FileSerializer)" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Drawing.Sheets">
      <summary>
            Gets or sets the sheets collection.
            </summary>
      <exception cref="T:devDept.EyeshotException">Thrown when trying to set a new collection already linked to another <see cref="P:devDept.Eyeshot.Control.Drawing.Document" />.</exception>
    </member>
    <member name="P:devDept.Eyeshot.Control.Drawing.ActiveSheet">
      <summary>
            Gets or sets the active sheet.
            </summary>
      <remarks>
        <para>When a <see cref="T:devDept.Eyeshot.Sheet" /> is set as active, its entities are shared with the Drawing one.</para>
        <para>Since the drawing collection is modified, this method can't be called inside a loop.</para>
      </remarks>
      <exception cref="T:devDept.EyeshotException">Thrown when an element with the specified name does not exist in the collection or the name is null.</exception>
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.ActiveSheetIndex" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Drawing.ActiveSheetIndex">
      <summary>
            Gets or sets the active sheet index.
            </summary>
      <remarks>
        <para>When a <see cref="T:devDept.Eyeshot.Sheet" /> is set as active, its entities are shared with the Drawing one.</para>
        <para>Since the drawing collection is modified, this method can't be called inside a loop.</para>
      </remarks>
      <exception cref="T:devDept.EyeshotException">Thrown when an element with the specified name does not exist in the collection or the name is null.</exception>
      <seealso cref="P:devDept.Eyeshot.Control.Drawing.ActiveSheet" />
    </member>
    <member name="T:devDept.Eyeshot.Control.Manufacture">
      <summary>
            Manufacture control definition.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Manufacture.ShortcutKeys">
      <summary>
            Gets or sets the keyboard shortcuts.
            </summary>
      <remarks>
            For the manufacture workspace they include also the Start, Pause, Next and Previous shortcut. 
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.Manufacture.SimulationTimeLine">
      <summary>
            The simulation timeline.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Manufacture.SimulationToolpath">
      <summary>
            Gets or set the simulation toolpath entity. When set, the toolpath is added to the scene.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Manufacture.CanSimulate">
      <summary>
            Returns true if the tool and simulation toolpath are defined, false otherwise.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Manufacture.ToolBlockRef">
      <summary>
            Gets the simulation tool block reference.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Manufacture.SimulationTool">
      <summary>
            Gets or set the simulation tool. When set, the <see cref="P:devDept.Eyeshot.Control.Manufacture.ToolBlockRef" /> is reset.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Manufacture.SimulationStock">
      <summary>
            Gets or set the simulation stock entity. When set, the stock is added to the scene.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Manufacture.StopOnCollision">
      <summary>
            When true, the simulation is paused if the tool collides with the simulation stock.
            </summary>
      <seealso cref="P:devDept.Eyeshot.Milling.Tool.CollisionRadius" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Manufacture.#ctor">
      <summary>
            Standard constructor.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.Manufacture.PositionChangedEventArgs">
      <summary>
            Provides data for the <see cref="E:devDept.Eyeshot.Control.Manufacture.PositionChanged" /> event.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Manufacture.PositionChangedEventArgs.#ctor(devDept.Eyeshot.Entities.PointCL,System.Int32)">
      <summary>
            Standard constructor.
            </summary>
      <param name="cl">The cutter location point</param>
      <param name="direction">The simulation direction</param>
    </member>
    <member name="P:devDept.Eyeshot.Control.Manufacture.PositionChangedEventArgs.CutterLocation">
      <summary>
            Gets the simulation tool position.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Manufacture.PositionChangedEventArgs.Direction">
      <summary>
            Gets the simulation direction: +1 for forward, -1 for backward, 0 for undetermined.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.Manufacture.PositionChangedEventHandler">
      <summary>
             Represents the method that will handle the <see cref="E:devDept.Eyeshot.Control.Manufacture.PositionChanged" /> event. 
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:devDept.Eyeshot.Control.Manufacture.PositionChangedEventArgs" /> object that contains the event data.</param>
    </member>
    <member name="E:devDept.Eyeshot.Control.Manufacture.PositionChanged">
      <summary>
            Occurs when the simulation tool position changes.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.Manufacture.SimulationEndedEventHandler">
      <summary>
             Represents the method that will handle the <see cref="E:devDept.Eyeshot.Control.Manufacture.SimulationEnded" /> event. 
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.EventArgs" /> object that contains the event data.</param>
    </member>
    <member name="E:devDept.Eyeshot.Control.Manufacture.SimulationEnded">
      <summary>
            Occurs when the when the simulation is ended.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.Manufacture.SimulationStartedEventHandler">
      <summary>
             Represents the method that will handle the <see cref="E:devDept.Eyeshot.Control.Manufacture.SimulationStarted" /> event. 
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.EventArgs" /> object that contains the event data.</param>
    </member>
    <member name="E:devDept.Eyeshot.Control.Manufacture.SimulationStarted">
      <summary>
            Occurs when the when the simulation is started. The event is fired both
            when the 'play' button is pressed and when the 'go to end' button is pressed. 
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.Manufacture.SimulationPausedEventHandler">
      <summary>
             Represents the method that will handle the <see cref="E:devDept.Eyeshot.Control.Manufacture.SimulationPaused" /> event. 
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.EventArgs" /> object that contains the event data.</param>
    </member>
    <member name="E:devDept.Eyeshot.Control.Manufacture.SimulationPaused">
      <summary>
            Occurs when the when the simulation is paused.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Manufacture.ResetSimulation">
      <summary>
            Resets the simulation.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Manufacture.PauseSimulation">
      <summary>
            Pauses the simulation.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Manufacture.SimulationSpeed">
      <summary>
            Gets or sets the simulation speed, in <see cref="P:devDept.Eyeshot.Block.Units" /> per second.
            </summary>
      <seealso cref="P:devDept.Eyeshot.Block.Units" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Manufacture.AutoSpeed(System.Int32)">
      <summary>
            Automatically set the speed (the speed is computed based on
            the current end mill diameter). To set the accurate speed of
            the end mill, use <see cref="P:devDept.Eyeshot.Control.Manufacture.SimulationSpeed" />.
            </summary>
      <param name="factor">Positive factor multiplying the initial speed.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Manufacture.GoToBeginning">
      <summary>
            Moves the tool to the first <see cref="P:devDept.Eyeshot.Control.Manufacture.SimulationToolpath" /> motion.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Manufacture.GoToPrevious">
      <summary>
            Moves the tool to the previous <see cref="P:devDept.Eyeshot.Control.Manufacture.SimulationToolpath" /> motion.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Manufacture.Start">
      <summary>
            Starts simulation execution.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Manufacture.Pause">
      <summary>
            Pauses simulation execution.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Manufacture.GoToNext">
      <summary>
            Moves the tool to the next <see cref="P:devDept.Eyeshot.Control.Manufacture.SimulationToolpath" /> motion.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Manufacture.GoToMotion(System.Int32,System.Boolean)">
      <summary>
            Moves the tool at the beginning of the <see cref="P:devDept.Eyeshot.Control.Manufacture.SimulationToolpath" />.
            </summary>
      <param name="index">The motion index</param>
      <param name="cut">When true, the stock is cut during the movement.</param>
      <seealso cref="M:devDept.Eyeshot.Control.Workspace.Invalidate" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Manufacture.GoToEnd">
      <summary>
            Moves the tool at the end of the <see cref="P:devDept.Eyeshot.Control.Manufacture.SimulationToolpath" />.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Manufacture.SimulationSetup">
      <summary>
            Gets or sets simulation setup.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Manufacture.CuttingStockText">
      <summary>
            Gets or sets the "Cutting stock..." text string.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Manufacture.ResetTimeLine">
      <summary>
            Resets the simulation timeline.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Manufacture.ClearancePlane">
      <summary>
            Gets or sets the machining clearance plane.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Manufacture.RetractPlane">
      <summary>
            Gets or sets the machining retract plane.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Manufacture.TopPlane">
      <summary>
            Gets or sets the machining top plane.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Manufacture.BottomPlane">
      <summary>
            Gets or sets the machining bottom plane.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Manufacture.SimulationGeometry">
      <summary>
            Gets or sets the machining geometry. When set, the machining geometry is added to the scene.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Manufacture.AddUserInterfaceElementFor(devDept.Eyeshot.Milling.Setup,System.Int32)">
      <summary>
            Adds an <see cref="T:devDept.Eyeshot.Control.OriginSymbol" /> representing the work plane to the active viewport.
            </summary>
      <param name="setup">The work plane</param>
      <param name="size">The symbol ball size in pixels</param>
      <returns>The element index in the <see cref="P:devDept.Eyeshot.Control.Viewport.OriginSymbols" /> array.</returns>
    </member>
    <member name="T:devDept.Eyeshot.Control.Simulation">
      <summary>
            Simulation control definition.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.Simulation.MeshingCompletedEventHandler">
      <summary>
            Represents the method that will handle the <see cref="E:devDept.Eyeshot.Control.Simulation.MeshingCompleted" /> event. 
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:devDept.Eyeshot.Control.Simulation.MeshingCompletedEventArgs" /> object that contains the event data.</param>
    </member>
    <member name="E:devDept.Eyeshot.Control.Simulation.MeshingCompleted">
      <summary>
            Occurs when the meshing process has completed.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.Simulation.MeshingCompletedEventArgs">
      <summary>
            Provides data for the <see cref="E:devDept.Eyeshot.Control.Simulation.MeshingCompleted" /> event.
            </summary>
      <seealso cref="M:devDept.Eyeshot.Control.Simulation.Mesh(System.Double,System.Boolean)" />
      <seealso cref="!:Simulation.Mesh(BlockKeyedCollection, MaterialKeyedCollection, double, bool)" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Simulation.MeshingCompletedEventArgs.Result">
      <summary>
            The collection of resulting <see cref="T:devDept.Eyeshot.Entities.FemMesh" /> objects, grouped by <see cref="T:devDept.Eyeshot.Block" /> name.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Simulation.Mesh(System.Double,System.Boolean)">
      <summary>
            Meshes all entities (recursively).
            </summary>
      <param name="size">The element size, zero for a rough estimation.</param>
      <param name="quadratic">When true, quadratic elements are generated.</param>
      <seealso cref="T:devDept.Eyeshot.Meshing.VolumeMesher" />
      <seealso cref="T:devDept.Eyeshot.Entities.FemMesh" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Simulation.Mesh(devDept.Eyeshot.Entities.Brep,System.Double,System.Boolean,System.Double,System.Double,System.Boolean)">
      <summary>
            Meshes the specified <see cref="T:devDept.Eyeshot.Entities.Brep" /> object part of <see cref="P:devDept.Eyeshot.Control.Workspace.CurrentBlock" />.
            </summary>
      <param name="brep">The entity that will be meshed</param>
      <param name="size">The element size. Use zero for a rough estimation.</param>
      <param name="quadratic">When true, quadratic elements are generated.</param>
      <param name="maxGradation">Sets <see cref="P:devDept.Eyeshot.Meshing.VolumeMesher.MaxGradation" /></param>
      <param name="shapeQualityWeight">Sets <see cref="P:devDept.Eyeshot.Meshing.VolumeMesher.ShapeQualityWeight" /></param>
      <param name="computeEdgeQuality">Sets <see cref="P:devDept.Eyeshot.Meshing.VolumeMesher.ComputeEdgeQuality" /></param>
      <seealso cref="T:devDept.Eyeshot.Meshing.VolumeMesher" />
      <seealso cref="T:devDept.Eyeshot.Entities.FemMesh" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Simulation.Mesh(devDept.Eyeshot.Entities.Brep,System.Double[],System.Boolean,System.Double,System.Double,System.Boolean)">
      <summary>
            Meshes the specified <see cref="T:devDept.Eyeshot.Entities.Brep" /> object part of <see cref="P:devDept.Eyeshot.Control.Workspace.CurrentBlock" />.
            </summary>
      <param name="brep">The entity that will be meshed</param>
      <param name="sizeOnVertices">The elements sizes, one per BRep vertex.</param>
      <param name="quadratic">When true, quadratic elements are generated.</param>
      <param name="maxGradation">Sets <see cref="P:devDept.Eyeshot.Meshing.VolumeMesher.MaxGradation" /></param>
      <param name="shapeQualityWeight">Sets <see cref="P:devDept.Eyeshot.Meshing.VolumeMesher.ShapeQualityWeight" /></param>
      <param name="computeEdgeQuality">Sets <see cref="P:devDept.Eyeshot.Meshing.VolumeMesher.ComputeEdgeQuality" /></param>
      <remarks>
            The BRep object must be closed. On imported geometry you may need to use <see cref="M:devDept.Eyeshot.Entities.Brep.FixTopology" /> to fix topology.
            </remarks>
      <seealso cref="T:devDept.Eyeshot.Meshing.VolumeMesher" />
      <seealso cref="T:devDept.Eyeshot.Entities.FemMesh" />
      <seealso cref="M:devDept.Eyeshot.Entities.Brep.FixTopology" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Simulation.Mesh(devDept.Eyeshot.Block,devDept.Eyeshot.BlockKeyedCollection,devDept.Eyeshot.MaterialKeyedCollection,System.Double,System.Boolean)">
      <summary>
            Meshes the specified list of blocks (recursively).
            </summary>
      <param name="current">The starting block. All the objects in the specified assembly branch will be meshed (recursively).</param>
      <param name="blocks">A collection of blocks to be meshed (recursively)</param>
      <param name="materials">A collection of materials</param>
      <param name="size">The element size</param>
      <param name="quadratic">When true, quadratic elements are generated.</param>
      <seealso cref="T:devDept.Eyeshot.Meshing.VolumeMesher" />
      <seealso cref="T:devDept.Eyeshot.Entities.FemMesh" />
    </member>
    <member name="P:devDept.Eyeshot.Control.Simulation.ForceSymbolColor">
      <summary>
            Gets or sets FEM force symbol color.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Simulation.PressureSymbolColor">
      <summary>
            Gets or sets FEM pressure symbol color.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Simulation.PunctualForceSymbolColor">
      <summary>
            Gets or sets FEM pressure symbol color.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Simulation.RestraintSymbolColor">
      <summary>
            Gets or sets FEM restraint symbol color.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Simulation.ShowRestraint">
      <summary>
            Restraint symbols visibility status.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Simulation.ShowLoad">
      <summary>
            Load symbols visibility status.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.Simulation.ShowJoint">
      <summary>
            Joint symbols visibility status.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Simulation.MakeLoopByLength(System.Collections.Generic.IList{devDept.Eyeshot.Entities.ICurve},System.Int32,System.Double)">
      <summary>
            Returns a closed loop of points at the specified distance.
            </summary>
      <param name="entityList">A list of entities</param>
      <param name="startIndex">The entity to start with</param>
      <param name="length">The desired distance between points</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Simulation.DrawTranslationRestraint(devDept.Graphics.RenderContextBase)">
      <summary>
            Gives the chance to overriders to customize translation restraint symbol drawing.
            </summary>
      <param name="context">The render context</param>
      <example>
        <code lang="C#"><![CDATA[protected override void DrawTranslationRestraint(RenderContextBase context)
            {
               // one normal per triangle mesh
               Mesh m = Mesh.CreateBox(1, 2, 3);
               m.UpdateNormals();
               context.DrawPlainTriangles(m.Triangles, m.Vertices, m.Normals);
             
               // or smooth normals mesh
               Mesh m = Mesh.CreateSphere(1, 16, 8);
               m.UpdateNormals();
               context.DrawTriangles(m.Vertices, m.Normals, m.Triangles, null); 
            }]]></code>
        <code lang="VB"><![CDATA[Protected Overrides Sub DrawTranslationRestraint(ByVal context As RenderContextBase)
                ' one normal per triangle mesh   
                Dim m As Mesh = Mesh.CreateBox(1, 2, 3);   
                m.UpdateNormals()
                context.DrawPlainTriangles(m.Triangles, m.Vertices, m.Normals);
             
                ' or smooth normals mesh    
                Dim m As Mesh = Mesh.CreateSphere(2, 16, 8)
                m.UpdateNormals()
                context.DrawTriangles(m.Vertices, m.Normals, m.Triangles, Nothing)
            End Sub]]></code>
      </example>
    </member>
    <member name="M:devDept.Eyeshot.Control.Simulation.DrawRotationRestraint(devDept.Graphics.RenderContextBase)">
      <summary>
            Gives the chance to overriders to customize rotation restraint symbol drawing.
            </summary>
      <param name="context">The render context</param>
      <example>
        <code lang="C#"><![CDATA[protected override void DrawRotationRestraint(RenderContextBase context)
            {
               // one normal per triangle mesh
               Mesh m = Mesh.CreateBox(1, 2, 3);
               m.UpdateNormals();
               context.DrawPlainTriangles(m.Triangles, m.Vertices, m.Normals);
             
               // or smooth normals mesh
               Mesh m = Mesh.CreateSphere(1, 16, 8);
               m.UpdateNormals();
               context.DrawTriangles(m.Vertices, m.Normals, m.Triangles, null); 
            }]]></code>
        <code lang="VB"><![CDATA[Protected Overrides Sub DrawRotationRestraint(ByVal context As RenderContextBase)
                ' one normal per triangle mesh   
                Dim m As Mesh = Mesh.CreateBox(1, 2, 3);   
                m.UpdateNormals()
                context.DrawPlainTriangles(m.Triangles, m.Vertices, m.Normals);
             
                ' or smooth normals mesh    
                Dim m As Mesh = Mesh.CreateSphere(2, 16, 8)
                m.UpdateNormals()
                context.DrawTriangles(m.Vertices, m.Normals, m.Triangles, Nothing)
            End Sub]]></code>
      </example>
    </member>
    <member name="M:devDept.Eyeshot.Control.Simulation.DrawForce(devDept.Graphics.RenderContextBase)">
      <summary>
            Gives the chance to overriders to customize force symbol drawing.
            </summary>
      <param name="context">The render context</param>
      <example>
        <code lang="C#"><![CDATA[protected override void DrawLoadVector(RenderContextBase context)
            {
               // one normal per triangle mesh
               Mesh m = Mesh.CreateBox(1, 2, 3);
               m.UpdateNormals();
               context.DrawPlainTriangles(m.Triangles, m.Vertices, m.Normals);
             
               // or smooth normals mesh
               Mesh m = Mesh.CreateSphere(1, 16, 8);
               m.UpdateNormals();
               context.DrawTriangles(m.Vertices, m.Normals, m.Triangles, null); 
            }]]></code>
        <code lang="VB"><![CDATA[Protected Overrides Sub DrawLoadVector(ByVal context As RenderContextBase)
                ' one normal per triangle mesh   
                Dim m As Mesh = Mesh.CreateBox(1, 2, 3);   
                m.UpdateNormals()
                context.DrawPlainTriangles(m.Triangles, m.Vertices, m.Normals);
             
                ' or smooth normals mesh    
                Dim m As Mesh = Mesh.CreateSphere(2, 16, 8)
                m.UpdateNormals()
                context.DrawTriangles(m.Vertices, m.Normals, m.Triangles, Nothing)
            End Sub]]></code>
      </example>
    </member>
    <member name="M:devDept.Eyeshot.Control.Simulation.DrawMoment(devDept.Graphics.RenderContextBase)">
      <summary>
            Gives the chance to overriders to customize moment symbol drawing.
            </summary>
      <param name="context">The render context</param>
      <example>
        <code lang="C#"><![CDATA[protected override void DrawMomentVector(RenderContextBase context)
            {
               // one normal per triangle mesh
               Mesh m = Mesh.CreateBox(1, 2, 3);
               m.UpdateNormals();
               context.DrawPlainTriangles(m.Triangles, m.Vertices, m.Normals);
             
               // or smooth normals mesh
               Mesh m = Mesh.CreateSphere(1, 16, 8);
               m.UpdateNormals();
               context.DrawTriangles(m.Vertices, m.Normals, m.Triangles, null); 
            }]]></code>
        <code lang="VB"><![CDATA[Protected Overrides Sub DrawMomentVector(ByVal context As RenderContextBase)
                ' one normal per triangle mesh   
                Dim m As Mesh = Mesh.CreateBox(1, 2, 3);   
                m.UpdateNormals()
                context.DrawPlainTriangles(m.Triangles, m.Vertices, m.Normals);
             
                ' or smooth normals mesh    
                Dim m As Mesh = Mesh.CreateSphere(2, 16, 8)
                m.UpdateNormals()
                context.DrawTriangles(m.Vertices, m.Normals, m.Triangles, Nothing)
            End Sub]]></code>
      </example>
    </member>
    <member name="T:devDept.Eyeshot.Control.rendererType">
      <summary>
            Type of rendering engine.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.rendererType.OpenGL">
      <summary>
            OpenGL Renderer.
            </summary>
      <remarks>In WPF, it uses a hidden WinForms control losing the advantage of WPF composition for better performances.</remarks>
    </member>
    <member name="F:devDept.Eyeshot.Control.rendererType.Direct3D">
      <summary>
            Direct3D Renderer.
            </summary>
      <remarks>In WPF, it uses a hidden WinForms control losing the advantage of WPF composition for better performances.</remarks>
    </member>
    <member name="T:devDept.Eyeshot.Control.waitCursorType">
      <summary>
            Viewport wait cursor type.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.waitCursorType.Never">
      <summary>
            Wait cursor will never be displayed
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.waitCursorType.RegenOnly">
      <summary>
            Wait cursor will only be displayed during entity regeneration
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.waitCursorType.BoundingBoxOnly">
      <summary>
            Wait cursor will only be displayed during design's bounding box update
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.waitCursorType.RegenAndBoundingBox">
      <summary>
            Wait cursor will be displayed during entity regeneration and design's bounding box update
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.CameraMoveEventArgs">
      <summary>
            Provides data for the <see cref="E:devDept.Eyeshot.Control.Workspace.CameraMoveBegin" /> and <see cref="E:devDept.Eyeshot.Control.Workspace.CameraMoveEnd" /> events.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.CameraMoveEventArgs.ViewportIndex">
      <summary>
            Gets the index of the Viewport on which the Camera movement is performed.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.EnvironmentAccessibleObject">
      <summary>
            Provides methods to interact with Eyeshot controls during UIAutomation testing.
            </summary>
      <seealso cref="T:devDept.Eyeshot.UIAutomation.Actions" />
    </member>
    <member name="P:devDept.Eyeshot.Control.WorkspaceBase.Renderer">
      <summary>
            Gets or sets the Renderer mode.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.WorkspaceBase.RenderContext">
      <summary>
            Graphics rendering context. Available after window handle (HWND) initialization only.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.WorkspaceBase.LoadCursors">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="T:devDept.Eyeshot.Control.HiddenLinesViewOnClipboard">
      <summary>Class that copies a vectorial image of the current scene of the active viewport into the clipboard.</summary>
      <example>
                 The following code fragment demonstrates how to use this class to copy a vectorial image of the current scene of the active viewport into the clipboard.
                 <code lang="CS" title="[New Example]">
                        HiddenLinesViewOnClipboard hdlView = new HiddenLinesViewOnClipboard(new HiddenLinesViewSettings(viewport1));
                        viewport1.StartWork(hdlView);
                 </code><code lang="VB" title="[New Example]">
                        Dim hdlView As New HiddenLinesViewOnClipboard(new HiddenLinesViewSettings(Viewport1))
                        Viewport1.StartWork(hdlView)
             </code></example>
      <seealso cref="!:Design.CopyToClipboardVector" />
    </member>
    <member name="F:devDept.Eyeshot.Control.HiddenLinesViewOnClipboard.FileName">
      <summary>
            The name of the file to save.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Control.HiddenLinesViewOnClipboard.Scale">
      <summary>
            The scale of the drawing
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.HiddenLinesViewOnClipboard.#ctor(devDept.Eyeshot.Control.HiddenLinesViewSettingsEx)">
      <summary>Constructor.
            </summary>
      <param name="viewSettings">Hidden Lines computation settings</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.HiddenLinesViewOnClipboard.#ctor(devDept.Eyeshot.Control.HiddenLinesViewSettingsEx,System.Double)">
      <summary>Constructor.
            </summary>
      <param name="viewSettings">Hidden Lines computation settings</param>
      <param name="scale">The scale of the drawing</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.HiddenLinesViewOnFile">
      <summary>Class that saves a vectorial image of the current scene of the active viewport on disk in EMF format.</summary>
      <example>
                The following code fragment demonstrates how to save a vectorial image of the current scene of the active viewport on disk.
                <code lang="CS" title="[New Example]">
                       HiddenLinesViewOnFile hdlView = new HiddenLinesViewOnFile(new HiddenLinesViewSettings(viewport1), fileName);
                       viewport1.StartWork(hdlView);
                </code><code lang="VB" title="[New Example]">
                       Dim hdlView As New HiddenLinesViewOnFile(new HiddenLinesViewSettings(Viewport1), FileName)
                       Viewport1.StartWork(hdlView)
            </code></example>
      <seealso cref="!:Design.WriteToFileVector" />
    </member>
    <member name="M:devDept.Eyeshot.Control.HiddenLinesViewOnFile.#ctor(devDept.Eyeshot.Control.HiddenLinesViewSettingsEx,System.String)">
      <summary>Constructor.
            </summary>
      <param name="viewSettings">Hidden Lines computation settings</param>
      <param name="filename">The name of the file to save</param>
      <param name="parallel">Enables or disables the usage of the Parallel Extension for .NET</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.HiddenLinesViewOnFile.#ctor(devDept.Eyeshot.Control.HiddenLinesViewSettingsEx,System.String,System.Double)">
      <summary>Constructor.
            </summary>
      <param name="viewSettings">Hidden Lines computation settings</param>
      <param name="filename">The name of the file to save</param>
      <param name="scale">The scale of the drawing</param>
      <param name="parallel">Enables or disables the usage of the Parallel Extension for .NET</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.HiddenLinesViewOnPaper">
      <summary>Class that prints a vectorial image of the current scene.</summary>
      <example>
                The following code fragment demonstrates how to print a vectorial image of the current scene of the active viewport.
                <code lang="CS" title="[New Example]">
                       HiddenLinesViewOnPaper hdlView = new HiddenLinesViewOnPaper(new HiddenLinesViewSettings(viewport1));
                       viewport1.StartWork(hdlView);
                </code><code lang="VB" title="[New Example]">
                       Dim hdlView As New HiddenLinesViewOnPaper(new HiddenLinesViewSettings(Viewport1))
                       Viewport1.StartWork(hdlView)
            </code></example>
      <seealso cref="!:Design.WriteToFileVector" />
      <seealso cref="M:devDept.Eyeshot.Control.Design.Print(System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Design.PrintPreview(System.Drawing.Size,System.Boolean)" />
    </member>
    <member name="F:devDept.Eyeshot.Control.HiddenLinesViewOnPaper.PrintRect">
      <summary>
            The print rectangle in page units.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.HiddenLinesViewOnPaper.OrthographicScale">
      <summary>
            The scale of the printed drawing (orthographic camera only).
            </summary>
      <remarks>If 0, the view is fitted in the printing rectangle.</remarks>
      <seealso cref="P:devDept.Eyeshot.Control.HiddenLinesViewOnPaper.Units" />
    </member>
    <member name="P:devDept.Eyeshot.Control.HiddenLinesViewOnPaper.Units">
      <summary>
            Gets or sets the units of the design.
            </summary>
      <remarks>Affects the size of the design on paper with Orthographic camera projection mode.</remarks>
      <see cref="P:devDept.Eyeshot.Control.HiddenLinesViewOnPaper.OrthographicScale" />
    </member>
    <member name="P:devDept.Eyeshot.Control.HiddenLinesViewOnPaper.LineWeightUnits">
      <summary>
            Gets or sets the line weight units used for printing.
            </summary>
      <seealso cref="P:devDept.Eyeshot.Entities.Entity.LineWeight" />
    </member>
    <member name="M:devDept.Eyeshot.Control.HiddenLinesViewOnPaper.#ctor(devDept.Eyeshot.Control.HiddenLinesViewSettingsEx)">
      <summary>Extents mode constructor.</summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.HiddenLinesViewOnPaper.#ctor(devDept.Eyeshot.Control.HiddenLinesViewSettingsEx,System.Double)">
      <summary>Constructor.</summary>
      <param name="viewSettings">Hidden Lines computation settings</param>
      <param name="orthographicScale">The scale of the printed drawing (orthographic camera only)</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.HiddenLinesViewOnPaper.#ctor(devDept.Eyeshot.Control.HiddenLinesViewSettingsEx,System.Double,System.Drawing.RectangleF)">
      <summary>Constructor.</summary>
      <param name="viewSettings">Hidden Lines computation settings</param>
      <param name="orthographicScale">The scale of the printed drawing (orthographic camera only)</param>
      <param name="printRect">The print rectangle in page units</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.HiddenLinesViewOnPaper.Print(System.Drawing.Printing.PrintPageEventArgs)">
      <summary>Prints the computed lines.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="P:devDept.Eyeshot.Control.HiddenLinesViewOnPaper.ScaleViewToPageUnits">
      <summary>
            Gets the factors to scale the view coordinates to page coordinates.
            </summary>
      <remarks>This data is available after the <see cref="M:devDept.Eyeshot.Control.HiddenLinesViewOnPaper.Print(System.Drawing.Printing.PrintPageEventArgs)" /> method has been called.</remarks>
    </member>
    <member name="T:devDept.Eyeshot.Control.HiddenLinesViewOnPaperPreview">
      <summary>Class that prints a vectorial image of the current scene of the active viewport, opening a Print Preview dialog.</summary>
      <example>
                The following code fragment demonstrates how to print a vectorial image of the current scene of the active viewport.
                <code lang="CS" title="[New Example]">
                       HiddenLinesViewOnPaperPreview hdlView = new HiddenLinesViewOnPaperPreview(new HiddenLinesViewSettings(viewport1));
                       viewport1.StartWork(hdlView);
                </code><code lang="VB" title="[New Example]">
                       Dim hdlView As New HiddenLinesViewOnPaperPreview(new HiddenLinesViewSettings(Viewport1))
                       Viewport1.StartWork(hdlView)
            </code></example>
      <seealso cref="!:Design.WriteToFileVector" />
      <seealso cref="M:devDept.Eyeshot.Control.Design.Print(System.Boolean)" />
      <seealso cref="M:devDept.Eyeshot.Control.Design.PrintPreview(System.Drawing.Size,System.Boolean)" />
    </member>
    <member name="F:devDept.Eyeshot.Control.HiddenLinesViewOnPaperPreview.PrintPreviewDlgClientSize">
      <summary>
            Size of the Print Preview form client area.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.HiddenLinesViewOnPaperPreview.#ctor(devDept.Eyeshot.Control.HiddenLinesViewSettingsEx,System.Drawing.Size)">
      <summary>Constructor.</summary>
      <param name="viewSettings">Hidden Lines computation settings</param>
      <param name="printPreviewDlgClientSize">Size of the Print Preview form client area</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.HiddenLinesViewOnPaperPreview.#ctor(devDept.Eyeshot.Control.HiddenLinesViewSettingsEx,System.Drawing.Size,System.Double)">
      <summary>Constructor.</summary>
      <param name="viewSettings">Hidden Lines computation settings</param>
      <param name="printPreviewDlgClientSize">Size of the Print Preview form client area</param>
      <param name="orthographicScale">The scale of the printed drawing (orthographic camera only)</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.HiddenLinesViewOnPaperPreview.#ctor(devDept.Eyeshot.Control.HiddenLinesViewSettingsEx,System.Drawing.Size,System.Double,System.Drawing.RectangleF)">
      <summary>Constructor.</summary>
      <param name="viewSettings">Hidden Lines computation settings</param>
      <param name="printPreviewDlgClientSize">Size of the Print Preview form client area</param>
      <param name="orthographicScale">The scale of the printed drawing (orthographic camera only)</param>
      <param name="printRect">The print rectangle in page units</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.HiddenLinesViewSettingsEx">
      <summary>
             Class that holds the settings and the result of hidden lines computation. Adds Pen settings to print the result.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.HiddenLinesViewSettingsEx.PenSilhouette">
      <summary>
            The pen used to draw the silhouettes.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.HiddenLinesViewSettingsEx.PenEdge">
      <summary>
            The pen used to draw the edges.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.HiddenLinesViewSettingsEx.PenWire">
      <summary>
            The pen used to draw the wires.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.HiddenLinesViewSettingsEx.PenHiddenSilhouette">
      <summary>
            The pen used to draw the hidden silhouettes.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.HiddenLinesViewSettingsEx.PenHiddenEdge">
      <summary>
            The pen used to draw the hidden edges.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.HiddenLinesViewSettingsEx.PenHiddenWire">
      <summary>
            The pen used to draw the hidden wires.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.HiddenLinesViewSettingsEx.BrushTriangle">
      <summary>
            The brush used to draw the triangles of the Text when FillTexts is true.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.HiddenLinesViewSettingsEx.#ctor(devDept.Eyeshot.Control.HiddenLinesViewSettingsEx)">
      <summary>
            Copy constructor.
            </summary>
      <param name="another">The other hiddenLinesViewSettings</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.HiddenLinesViewSettingsEx.#ctor(devDept.Eyeshot.Control.Workspace,devDept.Eyeshot.hiddenLinesViewType)">
      <summary>
            Constructor with Workspace, it process the <see cref="P:devDept.Eyeshot.Control.Design.ActiveViewport" />.
            </summary>
      <param name="workspace">The workspace control to process</param>
      <param name="viewMode">The view type, determines the part of the scene to capture</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.HiddenLinesViewSettingsEx.#ctor(devDept.Eyeshot.Control.Viewport,devDept.Eyeshot.Control.Workspace,devDept.Eyeshot.hiddenLinesViewType,System.Nullable{System.Drawing.RectangleF})">
      <summary>
            Constructor with the Viewport to process.
            </summary>
      <param name="viewport">The viewport to process</param>
      <param name="workspace">The workspace control to process</param>
      <param name="viewMode">The view type, determines the part of the scene to capture</param>
      <param name="window">The portion of the viewport to capture in screen coordinates (0 on top), the whole viewport if not specified. Meaningful only with <see cref="F:devDept.Eyeshot.hiddenLinesViewType.Window" /><paramref name="viewMode" />.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.HiddenLinesViewSettingsEx.#ctor(devDept.Eyeshot.Camera,devDept.Eyeshot.Document,devDept.Eyeshot.hiddenLinesViewType,System.Nullable{System.Drawing.Size},System.Nullable{System.Drawing.RectangleF})">
      <summary>
            Constructor with camera.
            </summary>
      <param name="camera">The camera used to process the hidden lines</param>
      <param name="document">The Document to process</param>
      <param name="viewMode">The view type, determines the part of the scene to capture</param>
      <param name="viewportSize">The viewport size. Useful for Window viewType, in other types it just affects the size of the computed lines but is not needed in Orthographic projection mode if the <see cref="M:devDept.Eyeshot.HiddenLinesView.ScaleLinesToWorld(System.Single)" /> is called at the end of the computation.</param>
      <param name="window">The portion of the viewport to capture in screen coordinates (0 on top), the whole viewport if not specified. Meaningful only with <see cref="F:devDept.Eyeshot.hiddenLinesViewType.Window" /><paramref name="viewMode" /></param>
    </member>
    <member name="M:devDept.Eyeshot.Control.HiddenLinesViewSettingsEx.#ctor(devDept.Eyeshot.viewType,devDept.Eyeshot.Document,System.Nullable{System.Drawing.Size})">
      <summary>
        <see cref="F:devDept.Eyeshot.hiddenLinesViewType.Extents" /> view mode constructor with the viewType.
            </summary>
      <param name="view">The view to set</param>
      <param name="document">The Document to process</param>
      <param name="viewportSize">The viewport size. Affects the size of the computed lines but is not needed in Orthographic projection mode if the <see cref="M:devDept.Eyeshot.HiddenLinesView.ScaleLinesToWorld(System.Single)" /> is called at the end of the computation.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.TrialPopup.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="T:devDept.Eyeshot.Control.Extensions">
      <summary>
            Extensions for Eyeshot Control
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.Extensions.CreatePicture(System.Drawing.Image,devDept.Geometry.Plane,System.Double,System.Double,System.Boolean)">
      <summary>
            Creates a <see cref="T:devDept.Eyeshot.Entities.Picture" /> entity from the image.
            </summary>
      <param name="plane">The picture plane (also determines the picture rotation)</param>
      <param name="width">The picture width</param>
      <param name="height">The picture height</param>
      <param name="image">The picture image</param>
      <param name="tiling">If true, texture coordinates are adjusted so that a big image can be decomposed in smaller pictures with one pixel overlap</param>
      <remarks>
        <para> The image is converted to a byte array. The disposing of the image is delegated to you. </para>
        <para> The supported pixel formats are: <see cref="F:System.Drawing.Imaging.PixelFormat.Format1bppIndexed" />, <see cref="F:System.Drawing.Imaging.PixelFormat.Format8bppIndexed" />, <see cref="F:System.Drawing.Imaging.PixelFormat.Format24bppRgb" />, <see cref="F:System.Drawing.Imaging.PixelFormat.Format32bppArgb" /></para>
      </remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Extensions.CreateMaterial(System.Drawing.Image,System.String)">
      <summary>
            Creates a <see cref="T:devDept.Eyeshot.Material" /> from the image.
            </summary>
      <param name="image">The material image</param>
      <param name="name">The material name.</param>
      <remarks>
        <para> The image is converted to a byte array. The disposing of the image is delegated to you. </para>
        <para> The supported pixel formats are: <see cref="F:System.Drawing.Imaging.PixelFormat.Format1bppIndexed" />, <see cref="F:System.Drawing.Imaging.PixelFormat.Format8bppIndexed" />, <see cref="F:System.Drawing.Imaging.PixelFormat.Format24bppRgb" />, <see cref="F:System.Drawing.Imaging.PixelFormat.Format32bppArgb" /></para>
      </remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Extensions.CreateMaterial(System.Drawing.Image,System.String,System.Drawing.Color,System.Drawing.Color,System.Single)">
      <summary>
            Creates a <see cref="T:devDept.Eyeshot.Material" /> from the image.
            </summary>
      <param name="image">The material image</param>
      <param name="name">The material name</param>
      <param name="ambient">Material ambient intensity</param>
      <param name="specular">Material specular intensity</param>
      <param name="shininess">Material shininess factor (0-1)</param>
      <returns>
      </returns>
    </member>
    <member name="M:devDept.Eyeshot.Control.Extensions.CreateMarchingSquares(System.Drawing.Bitmap,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Creates a <see cref="T:devDept.Eyeshot.Triangulation.MarchingSquares" /> centered in world origin constructor.
            </summary>
      <param name="original">The bitmap image</param>
      <param name="cellSizeInX">Cell size in X in pixels</param>
      <param name="cellSizeInY">Cell size in Y in pixels</param>
      <param name="makeGrayscale">When true the image is converted to grayscale.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.Extensions.ToByteArray(System.Drawing.Image)">
      <summary>
            Convert an image to a byte array.
            </summary>
      <param name="image">The image to convert.</param>
      <remarks>
        <para>The image is converted to a byte array. The disposing of the image is delegated to you.</para>
        <para>The supported pixel formats are: <see cref="F:System.Drawing.Imaging.PixelFormat.Format1bppIndexed" />, <see cref="F:System.Drawing.Imaging.PixelFormat.Format8bppIndexed" />, <see cref="F:System.Drawing.Imaging.PixelFormat.Format24bppRgb" />, <see cref="F:System.Drawing.Imaging.PixelFormat.Format32bppArgb" /></para>
      </remarks>
      <seealso cref="M:devDept.Geometry.UtilityEx.ConvertImageToBytes(System.Drawing.Image)" />
      <seealso cref="M:devDept.Geometry.UtilityEx.ConvertBytesToImage(System.Byte[])" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Extensions.GetThumbnail(devDept.Eyeshot.Translators.ReadFile,System.Int32)">
      <summary>
            Gets the thumbnail.
            </summary>
      <param name="readFile">The <see cref="T:devDept.Eyeshot.Translators.ReadFile" /> work unit.</param>
      <param name="thumbnailSize">Desired size of the biggest dimension of the thumbnail (The maximum is 256).</param>
      <remarks>
            Returns null/Nothing if the thumbnail was not stored in the file.
            If you need to read the file header only, you can call the static method <see cref="M:devDept.Eyeshot.Control.Extensions.GetThumbnail(System.String,System.Int32)" /> instead.
            </remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Extensions.GetThumbnail(System.String,System.Int32)">
      <summary>
            Gets the thumbnail.
            </summary>
      <param name="fileName">The file name.</param>
      <param name="thumbnailSize">Desired size of the biggest dimension of the thumbnail (The maximum is 256).</param>
      <remarks>Returns null/Nothing if the thumbnail was not stored in the file.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Control.Extensions.AddViewPlaceHolder(devDept.Eyeshot.Sheet,devDept.Eyeshot.Entities.View,devDept.Eyeshot.Control.Design,devDept.Eyeshot.Control.Drawing,System.String)">
      <summary>
            Creates a block with the placeholder entities, adds it to the <see cref="T:devDept.Eyeshot.Control.Drawing" /> and adds the View to the <see cref="N:devDept.Eyeshot.Entities" /> if not already present.
            </summary>
      <remarks>
        <para>The block is added only if it doesn't already exist.</para>
        <para>The view is not rebuilt.</para>
      </remarks>
      <param name="sheet">The sheet.</param>
      <param name="view">The view.</param>
      <param name="design">The design control.</param>
      <param name="drawing">The drawing control containing the sheet.</param>
      <param name="placeHolderText">The placeholder text. If null the view name is used.</param>
      <seealso cref="T:devDept.WorkManager`1" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Extensions.Rebuild(devDept.Eyeshot.Entities.RasterView,devDept.Eyeshot.Control.Design,devDept.Eyeshot.Sheet,devDept.Eyeshot.Control.Drawing,System.Boolean)">
      <summary>
            Rebuilds blocks related to to this view.
            </summary>
      <param name="rasterView">The raster view.</param>
      <param name="design">The design control.</param>
      <param name="sheet">The parent sheet of the view.</param>
      <param name="drawing">The parent drawing control.</param>
      <param name="async">When true the related block is built asynchronously and must be added at the <see cref="E:devDept.Eyeshot.Control.Workspace.WorkCompleted" /> event, otherwise it's built synchronously.</param>
      <returns>The rebuilt block.</returns>
      <seealso cref="!:ViewBuilder.AddToDrawing" />
      <seealso cref="P:devDept.Eyeshot.Entities.View.HasChanged" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Extensions.Rebuild(devDept.Eyeshot.Sheet,devDept.Eyeshot.Control.Design,devDept.Eyeshot.Control.Drawing,System.Boolean,System.Boolean)">
      <summary>
            Rebuilds outdated views on this sheet.
            </summary>
      <param name="sheet">The sheet.</param>
      <param name="design">The design control.</param>
      <param name="drawing">The drawing control.</param>
      <param name="async">When true the blocks are built asynchronously and must be added/updated at the <see cref="E:devDept.Eyeshot.Control.Workspace.WorkCompleted" /> event by calling <see cref="!:ViewBuilder.AddToDrawing" />, otherwise they're built synchronously.</param>
      <param name="changedOnly">When true only missing/changed views are built.</param>
      <seealso cref="!:ViewBuilder.AddToDrawing" />
      <see cref="E:devDept.Eyeshot.Control.Workspace.WorkCompleted" />
      <see cref="E:devDept.Eyeshot.Control.Workspace.WorkFailed" />
      <see cref="E:devDept.Eyeshot.Control.Workspace.WorkCancelled" />
    </member>
    <member name="M:devDept.Eyeshot.Control.Extensions.BuildBillOfMaterials(devDept.Eyeshot.Sheet,devDept.Eyeshot.Control.Design,devDept.Geometry.Point3D,System.String,System.String,System.String,System.String,devDept.Eyeshot.Block@,System.String,System.Boolean,devDept.Eyeshot.Entities.Table.flowDirection,System.Int32)">
      <summary>
            Creates a block with the Bill Of Materials table.
            </summary>
      <param name="sheet">The sheet.</param>
      <param name="design">The design workspace. </param>
      <param name="insertionPoint">The Table insertion point. </param>
      <param name="itemNumberText">The item number text.</param>
      <param name="partNumberText">The part number text. </param>
      <param name="descriptionText">The description text. </param>
      <param name="quantityText">The quantity text. </param>
      <param name="block">The new block created. </param>
      <param name="blockName">The block name. </param>
      <param name="partsOnly">If true, only the blocks containing geometry are taken in account to construct the bill of materials. </param>
      <param name="flowDirection">The table flow direction (up/down). </param>
      <param name="maxLevel">The max deep used to navigate the assembly geometry to create the bill of materials.</param>
      <returns>The resulting blockreference object.</returns>
    </member>
    <member name="T:devDept.Eyeshot.Control.BackgroundSettings">
      <summary>
            Viewport background settings.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.BackgroundSettings.StyleMode">
      <summary>
            Gets or sets the viewport background style.
            </summary>
      <remarks>When using <see cref="F:devDept.Graphics.backgroundStyleType.CubicGradient" /> style, you need to call the Workspace.CompileUserInterfaceElements() to see the effect of this command.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.BackgroundSettings.BottomColor">
      <summary>
            Gets or sets the viewport background bottom color.
            </summary>
      <remarks>When using <see cref="F:devDept.Graphics.backgroundStyleType.CubicGradient" /> style, you need to call the Workspace.CompileUserInterfaceElements() to see the effect of this command.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.BackgroundSettings.IntermediateColor">
      <summary>
            Gets or sets the viewport background intermediate color.
            </summary>
      <remarks>When using <see cref="F:devDept.Graphics.backgroundStyleType.CubicGradient" /> style, you need to call the Workspace.CompileUserInterfaceElements() to see the effect of this command.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.BackgroundSettings.TopColor">
      <summary>
            Gets or sets the viewport background intermediate color.
            </summary>
      <remarks>When using <see cref="F:devDept.Graphics.backgroundStyleType.CubicGradient" /> style, you need to call the Workspace.CompileUserInterfaceElements() to see the effect of this command.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.BackgroundSettings.IntermediateColorPosition">
      <summary>
            Gets or sets intermediate color position expressed in percent of viewport height from top. 
            </summary>
      <remarks>When using <see cref="F:devDept.Graphics.backgroundStyleType.CubicGradient" /> style, you need to call the Workspace.CompileUserInterfaceElements() to see the effect of this command.</remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.BackgroundSettings.ColorThemeTransparency">
      <summary>
            Gets or sets button hover status, progress bar, view cube ring (when the ViewCubeIcon.Lighting property is false), zoom window and selection boxes transparency level.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Control.BackgroundSettings.Image">
      <summary>
            Gets or sets the background image.
            </summary>
      <remarks>
                You need to call the devDept.Eyeshot.Workspace.CompileUserInterfaceElements() to
                see the effect of this change at run-time.
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Control.BackgroundSettings.ColorTheme">
      <summary>
            Gets or sets the user interface elements color theme.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.BackgroundSettings.#ctor">
      <summary>
            Empty constructor.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Control.BackgroundSettings.#ctor(devDept.Graphics.backgroundStyleType,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Double,System.Drawing.Image,devDept.Eyeshot.colorThemeType,System.Double)">
      <summary>Standard constructor.</summary>
      <param name="styleMode">Background style</param>
      <param name="bottomColor">Bottom color, applies only to gradient styles.</param>
      <param name="intermediateColor">Intermediate color, applies only to gradient styles.</param>
      <param name="topColor">Top color, applies only to gradient styles.</param>
      <param name="intermediateColorPosition">Intermediate color position expressed in percent of viewport height from top.</param>
      <param name="image">Image, applies only to gradient style.</param>
      <param name="colorTheme">Color theme</param>
      <param name="colorThemeTransparency">Color theme transparency</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.BackgroundSettings.#ctor(devDept.Graphics.backgroundStyleType,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Double,System.Drawing.Image)">
      <summary>Standard constructor.</summary>
      <param name="styleMode">Background style</param>
      <param name="bottomColor">Bottom color, applies only to gradient styles.</param>
      <param name="intermediateColor">Intermediate color, applies only to gradient styles.</param>
      <param name="topColor">Top color, applies only to gradient styles.</param>
      <param name="intermediateColorPosition">Intermediate color position expressed in percent of viewport height from top.</param>
      <param name="image">Image, applies only to gradient style.</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.BackgroundSettings.#ctor(devDept.Eyeshot.Control.BackgroundSettings)">
      <summary>
            Copy constructor.
            </summary>
      <param name="another">The other BackgroundSettings object</param>
    </member>
    <member name="M:devDept.Eyeshot.Control.BackgroundSettings.GetSelectionBoxColor(System.Drawing.Color)">
      <summary>
            Gets the color of the selection box according to the <see cref="P:devDept.Eyeshot.Control.BackgroundSettings.ColorTheme" />.
            </summary>
      <param name="color">The color to adjust.</param>
      <returns>The resulting color.</returns>
      <seealso cref="M:devDept.Eyeshot.Control.BackgroundSettings.GetContrastColor" />
    </member>
    <member name="M:devDept.Eyeshot.Control.BackgroundSettings.GetContrastColorSemiTransparent">
      <summary>
            Gets the semi-transparent contrast color according to the <see cref="P:devDept.Eyeshot.Control.BackgroundSettings.ColorTheme" />.
            </summary>
      <returns>The resulting color.</returns>
      <seealso cref="M:devDept.Eyeshot.Control.BackgroundSettings.GetContrastColor" />
    </member>
    <member name="M:devDept.Eyeshot.Control.BackgroundSettings.GetContrastColor">
      <summary>
            Gets the contrast color according to the <see cref="P:devDept.Eyeshot.Control.BackgroundSettings.ColorTheme" />.
            </summary>
      <returns>The contrast color.</returns>
      <seealso cref="M:devDept.Eyeshot.Control.BackgroundSettings.GetContrastColorSemiTransparent" />
    </member>
    <member name="M:devDept.Eyeshot.Control.BackgroundSettings.GetContrastColorInverted">
      <summary>
            Gets the contrast color inverted according to the <see cref="P:devDept.Eyeshot.Control.BackgroundSettings.ColorTheme" />.
            </summary>
      <returns>The contrast color.</returns>
      <seealso cref="M:devDept.Eyeshot.Control.BackgroundSettings.GetContrastColor" />
    </member>
    <member name="M:devDept.Eyeshot.Control.BackgroundSettings.FreezeBrightness(System.Boolean)">
      <summary>
            Freezes the brightness evaluation.
            </summary>
      <param name="freeze">
      </param>
      <remarks>For internal use only.</remarks>
      <seealso cref="P:devDept.Eyeshot.Control.BackgroundSettings.IsDark" />
    </member>
    <member name="T:devDept.Eyeshot.Translators.ReadPDF">
      <summary>
            Utility class for loading PDF files asynchronously.
            </summary>
      <remarks>
            It does not support images or other embedded resources
            </remarks>
    </member>
    <member name="P:devDept.Eyeshot.Translators.ReadPDF.TextStyles">
      <summary>
            Gets the design collection of text styles read from the file.
            </summary>
    </member>
    <member name="F:devDept.Eyeshot.Translators.ReadPDF.Pages">
      <summary>
            Gets the pages read from file.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Translators.ReadPDF.PagesToLoad">
      <summary>
            Gets or sets the indices of the pages to load. If null, all pages are loaded.
            </summary>
    </member>
    <member name="M:devDept.Eyeshot.Translators.ReadPDF.FillTextStyles(devDept.Eyeshot.Document)">
      <summary>
            Automatically merges text styles with existing ones.
            </summary>
      <param name="document"> The workspace control.</param>
      <remarks>Text styles with the same name of the ones in the workspace will be skipped.</remarks>
    </member>
    <member name="M:devDept.Eyeshot.Translators.ReadPDF.AddTo(System.Int32,devDept.Eyeshot.DesignDocument,devDept.Eyeshot.RegenOptions)">
      <summary>
            Adds the entities of the specified page to the scene.
            </summary>
      <param name="pageIndex">The index of the page to add.</param>
      <param name="designDoc">The design document used to add the entities.</param>
      <param name="ro">Asynchronous regeneration settings.</param>
    </member>
    <member name="M:devDept.Eyeshot.Translators.ReadPDF.AddTo(devDept.Eyeshot.DesignDocument,devDept.Eyeshot.RegenOptions)">
      <summary>
            Adds the entities of the first page to the scene.
            </summary>
      <param name="designDoc">The design document used to add the entities.</param>
      <param name="ro">Asynchronous regeneration settings.</param>
    </member>
    <member name="T:devDept.Eyeshot.Translators.PdfPage">
      <summary>
            This class represent a page of the PDF document. It contains all the entities in the page, as well as its viewports and their relative scale factor.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Translators.PdfPage.Size">
      <summary>
            Gets or sets the size of the page in millimeters.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Translators.PdfPage.Entities">
      <summary>
            Gets the list of the entities contained in the page.
            </summary>
    </member>
    <member name="P:devDept.Eyeshot.Translators.PdfPage.Viewports">
      <summary>
            Gets the list of the extents of the PDF viewports in millimeters contained in the page, as well as their custom scale factor.
            </summary>
    </member>
    <member name="T:devDept.Geometry.UtilityEx">
      <summary>
            Contains a collection of utility methods and constants for internal use.
            </summary>
      <summary>
            Contains a collection of utility methods and constants for internal use.
            </summary>
    </member>
    <member name="M:devDept.Geometry.UtilityEx.DrawLinearDimPreview(devDept.Eyeshot.Control.Workspace,devDept.Geometry.Plane,devDept.Geometry.Point3D,devDept.Geometry.Point3D,System.Drawing.Point,devDept.Eyeshot.Control.DimensionPreviewDrawParams)">
      <summary>
            Draws a preview of the linear dimension for the specific couple of extension lines points.
            </summary>
      <param name="workSpace">The workspace.</param>
      <param name="dimPlane">The plane on which the dimension lies (it can be different, but must be coplanar to the dimension plane).</param>
      <param name="extLine1">The first point.</param>
      <param name="extLine2">The second point.</param>
      <param name="mouseLocation">The mouse location</param>
      <param name="previewDrawParams">The preview parameters.</param>
      <returns>The linear dimension.</returns>
    </member>
    <member name="M:devDept.Geometry.UtilityEx.DrawLinearDimPreview(devDept.Eyeshot.Control.Workspace,devDept.Geometry.Plane,devDept.Eyeshot.Entities.Line,System.Drawing.Point,devDept.Eyeshot.Control.DimensionPreviewDrawParams)">
      <summary>
            Draws a preview of the linear dimension for the specific line.
            </summary>
      <param name="workSpace">the workspace.</param>
      <param name="dimPlane">The plane on which the dimension lies (it can be different, but must be coplanar to the dimension plane).</param>
      <param name="line">The line.</param>
      <param name="mouseLocation">The mouse location.</param>
      <param name="previewDrawParams">The preview parameters.</param>
      <returns>The linear dimension.</returns>
    </member>
    <member name="M:devDept.Geometry.UtilityEx.DrawRadialDimPreview(devDept.Eyeshot.Control.Workspace,devDept.Eyeshot.Entities.Circle,System.Drawing.Point,devDept.Eyeshot.Control.DimensionPreviewDrawParams)">
      <summary>
             Draws a preview of the radial dimension for the specific circle.
            </summary>
      <param name="workSpace">The workspace.</param>
      <param name="circle">The circle. The dimension is considered to be lying in its plane.</param>
      <param name="mouseLocation">The mouse location.</param>
      <param name="previewDrawParams">The preview parameters.</param>
      <returns>The radial dimension.</returns>
    </member>
    <member name="M:devDept.Geometry.UtilityEx.DrawRadialDimPreview(devDept.Eyeshot.Control.Workspace,devDept.Geometry.Plane,devDept.Eyeshot.Entities.Circle,System.Drawing.Point,devDept.Eyeshot.Control.DimensionPreviewDrawParams)">
      <summary>
             Draws a preview of the radial dimension for the specific circle.
            </summary>
      <param name="workSpace">The workspace.</param>
      <param name="dimPlane">The plane in which the dimension lies.</param>
      <param name="circle">The circle.</param>
      <param name="mouseLocation">The mouse location.</param>
      <param name="previewDrawParams">The preview parameters.</param>
      <returns>The radial dimension.</returns>
    </member>
    <member name="M:devDept.Geometry.UtilityEx.DrawDiametricDimPreview(devDept.Eyeshot.Control.Workspace,devDept.Eyeshot.Entities.Circle,System.Drawing.Point,devDept.Eyeshot.Control.DimensionPreviewDrawParams)">
      <summary>
             Draws a preview of the diametric dimension for the specific circle.
            </summary>
      <param name="workSpace">The workspace.</param>
      <param name="circle">The circle. The dimension is considered to be lying in its plane.</param>
      <param name="mouseLocation">The mouse location.</param>
      <param name="previewDrawParams">The preview parameters.</param>
      <returns>The diametric dimension</returns>
    </member>
    <member name="M:devDept.Geometry.UtilityEx.DrawDiametricDimPreview(devDept.Eyeshot.Control.Workspace,devDept.Geometry.Plane,devDept.Eyeshot.Entities.Circle,System.Drawing.Point,devDept.Eyeshot.Control.DimensionPreviewDrawParams)">
      <summary>
             Draws a preview of the diametric dimension for the specific circle.
            </summary>
      <param name="workSpace">The workspace.</param>
      <param name="circle">The circle.</param>
      <param name="dimPlane">The plane in which the dimension lies.</param>
      <param name="mouseLocation">The mouse location.</param>
      <param name="previewDrawParams">The preview parameters.</param>
      <returns>The diametric dimension</returns>
    </member>
    <member name="M:devDept.Geometry.UtilityEx.DrawAngularDimPreview(devDept.Eyeshot.Control.Workspace,devDept.Geometry.Plane,devDept.Eyeshot.Entities.Line,devDept.Eyeshot.Entities.Line,System.Drawing.Point,devDept.Eyeshot.Control.DimensionPreviewDrawParams)">
      <summary>
            Draws a preview of the radial dimension for the specific couple of lines.
            </summary>
      <param name="workSpace">The workspace.</param>
      <param name="dimPlane">The plane on which the dimension lies (it can be different, but must be coplanar to the dimension plane).</param>
      <param name="firstLine">The first line.</param>
      <param name="secondLine">the second line.</param>
      <param name="mouseLocation">The mouse location.</param>
      <param name="previewDrawParams">The preview parameters.</param>
    </member>
    <member name="M:devDept.Geometry.UtilityEx.DrawAngularDimPreview(devDept.Eyeshot.Control.Workspace,devDept.Eyeshot.Entities.Arc,System.Drawing.Point,devDept.Eyeshot.Control.DimensionPreviewDrawParams)">
      <summary>
            Draws a preview of the radial dimension for the specific arc.
            </summary>
      <param name="workSpace">The workspace.</param>
      <param name="arc">The arc.</param>
      <param name="mouseLocation">The mouse location.</param>
      <param name="previewDrawParams">The preview parameters.</param>
    </member>
    <member name="M:devDept.Geometry.UtilityEx.DrawAngularDimPreview(devDept.Eyeshot.Control.Workspace,devDept.Geometry.Plane,devDept.Geometry.Point3D,devDept.Geometry.Point3D,devDept.Geometry.Point3D,System.Drawing.Point,devDept.Eyeshot.Control.DimensionPreviewDrawParams)">
      <summary>
            Draws a preview of the angular dimension for the specific points.
            </summary>
      <param name="workSpace">The workspace.</param>
      <param name="dimPlane">The plane on which the dimension lies (it can be different, but must be coplanar to the dimension plane).</param>
      <param name="origin">The Origin point</param>
      <param name="extLine1">The first extension line point.</param>
      <param name="extLine2">the second extension line point.</param>
      <param name="mouseLocation">The mouse location.</param>
      <param name="previewDrawParams">The preview parameters.</param>
      <returns>
      </returns>
    </member>
    <member name="M:devDept.Geometry.UtilityEx.DrawOrdinateDimPreview(devDept.Eyeshot.Control.Workspace,devDept.Geometry.Plane,devDept.Geometry.Point3D,System.Double,System.Double,System.Boolean,System.Drawing.Point,devDept.Eyeshot.Control.DimensionPreviewDrawParams)">
      <summary>
            Draws a preview of the ordinate dimension for the specific point.
            </summary>
      <param name="workSpace">The workspace.</param>
      <param name="dimPlane">The plane on which the dimension lies (it can be different, but must be coplanar to the dimension plane).</param>
      <param name="definingPoint">The point.</param>
      <param name="vertical">
      </param>
      <param name="mouseLocation">The mouse location.</param>
      <param name="previewDrawParams">The preview parameters.</param>
      <returns>The ordinate dimension.</returns>
    </member>
    <member name="M:devDept.Geometry.UtilityEx.ConvertImageToBytes(System.Drawing.Image)">
      <summary>
            Convert an image to a byte array.
            </summary>
      <returns>The byte array that represent the given image.</returns>
      <seealso cref="M:devDept.Eyeshot.Control.Extensions.ToByteArray(System.Drawing.Image)" />
    </member>
    <member name="M:devDept.Geometry.UtilityEx.ConvertBytesToImage(System.Byte[])">
      <summary>
            Create a bitmap from a byte array.
            </summary>
      <returns>The bitmap created from the given data.</returns>
    </member>
    <member name="M:devDept.Geometry.UtilityEx.GetScalingLevel">
      <summary>
            Gets the display scale factor.
            </summary>
      <remarks>
        <para>The result value is returned in a coordinate system in which 96 corresponds to 1 that means 100%.</para>
        <para>WPF only: if you've enabled per-monitor DPI in the app.manifest, use Workspace.GetScalingLevel() method instead.</para>
      </remarks>
    </member>
    <member name="M:devDept.Geometry.UtilityEx.LoadBitmapWithoutLockingFile(System.String)">
      <summary>
            Creates an image without locking the input file.
            </summary>
      <param name="fileName">The file name.</param>
      <remarks>It returns null if the file format is not supported.</remarks>
    </member>
    <member name="M:devDept.Geometry.UtilityEx.MakeGrayscale(System.Drawing.Bitmap)">
      <summary>
            Converts an image to grayscale.
            </summary>
      <param name="original">The original bitmap</param>
      <returns>The grayscale bitmap.</returns>
    </member>
    <member name="M:devDept.Geometry.UtilityEx.SetImageOpacity(System.Drawing.Image,System.Single)">
      <summary>  
            Changes the opacity of an image.
            </summary>
      <param name="image">The original image</param>
      <param name="opacity">The opacity (range 0-1)</param>
      <returns>The new bitmap</returns>
    </member>
    <member name="M:devDept.Geometry.UtilityEx.Trim(devDept.Eyeshot.Control.Design,System.Drawing.Point,System.Collections.Generic.List{devDept.Eyeshot.Entities.Entity}@)">
      <summary>
            Generates the entities that would be created due to trim.
            </summary>
      <param name="design">The design.</param>
      <param name="mouseLocation">The mouse position.</param>
      <param name="leftOverEntities">The left over entities.</param>
      <returns>True if successful, false otherwise.</returns>
    </member>
    <member name="M:devDept.Geometry.UtilityEx.TrimPreview(devDept.Eyeshot.Control.Design,System.Drawing.Point,System.Collections.Generic.List{devDept.Eyeshot.Entities.Entity}@)">
      <summary>
            Trims the entity under the mouse cursor at its intersection points.
            </summary>
      <param name="design">The design.</param>
      <param name="mouseLocation">The mouse position.</param>
      <param name="previewEntities">The preview entities.</param>
      <returns>True if successful, false otherwise.</returns>
    </member>
    <member name="M:devDept.Geometry.LockBitmap.LockBits">
      <summary>
            Lock bitmap data
            </summary>
    </member>
    <member name="M:devDept.Geometry.LockBitmap.UnlockBits">
      <summary>
            Unlock bitmap data
            </summary>
    </member>
    <member name="M:devDept.Geometry.LockBitmap.GetPixel(System.Int32,System.Int32)">
      <summary>
            Get the color of the specified pixel
            </summary>
      <param name="x">
      </param>
      <param name="y">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:devDept.Geometry.LockBitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)">
      <summary>
            Set the color of the specified pixel
            </summary>
      <param name="x">
      </param>
      <param name="y">
      </param>
      <param name="color">
      </param>
    </member>
    <member name="T:devDept.Serialization.FileSerializerWithLabels">
      <summary>
            The <see cref="T:devDept.Serialization.FileSerializer" /> for the serialization that includes the labels definition.
            </summary>
      <remarks>Use this class if you need Labels definition for your extended proprietary file format.</remarks>
    </member>
    <member name="M:devDept.Serialization.FileSerializerWithLabels.#ctor">
      <summary>
            Empty constructor used in conjunction with the <see cref="T:devDept.Eyeshot.Translators.WriteFile" /> class.
            </summary>
      <remarks>Use this constructor to define the serialization model for the <see cref="T:devDept.Eyeshot.Translators.WriteFile" /> class.</remarks>
    </member>
    <member name="M:devDept.Serialization.FileSerializerWithLabels.#ctor(devDept.Serialization.contentType)">
      <summary>
            Constructor used in conjunction with the <see cref="T:devDept.Eyeshot.Translators.ReadFile" /> class.
            </summary>
      <exception cref="T:devDept.EyeshotException">Thrown if the content type is <see cref="F:devDept.Serialization.contentType.None" />.</exception>
      <remarks>Use this constructor to define the serialization model for the <see cref="T:devDept.Eyeshot.Translators.ReadFile" /> class.</remarks>
    </member>
    <member name="M:devDept.Serialization.FileSerializerWithLabels.FillModel">
      <inheritdoc />
    </member>
    <member name="M:devDept.Serialization.FileSerializerWithLabels.GetTypeForObject(System.String)">
      <inheritdoc />
    </member>
    <member name="T:devDept.Serialization.ImageOnlySurrogate">
      <summary>
            Defines the <see cref="T:devDept.Eyeshot.Control.Labels.ImageOnly" /> surrogate.
            </summary>
    </member>
    <member name="M:devDept.Serialization.ImageOnlySurrogate.#ctor(devDept.Eyeshot.Control.Labels.ImageOnly)">
      <summary>
            Standard constructor.
            </summary>
    </member>
    <member name="F:devDept.Serialization.ImageOnlySurrogate.HotSpot">
      <summary>
            See <see cref="P:devDept.Eyeshot.Control.Labels.ImageOnly.HotSpot" />.
            </summary>
    </member>
    <member name="F:devDept.Serialization.ImageOnlySurrogate.ImageForSelection">
      <summary>
            See <see cref="P:devDept.Eyeshot.Control.Labels.ImageOnly.ImageForSelection" />.
            </summary>
    </member>
    <member name="M:devDept.Serialization.ImageOnlySurrogate.ConvertToObject">
      <remarks>
             This method uses the <see cref="M:devDept.Eyeshot.Control.Labels.ImageOnly.#ctor(devDept.Geometry.Point3D,System.Drawing.Bitmap,System.Int32,System.Int32)" /> constructor to create the object.
             </remarks>
    </member>
    <member name="T:devDept.Serialization.LabelSurrogate">
      <summary>
            Defines the base class for label surrogates.
            </summary>
      <remarks>This class is not declared as abstract to handle not supported label.</remarks>
    </member>
    <member name="M:devDept.Serialization.LabelSurrogate.#ctor(devDept.Eyeshot.Control.Labels.Label)">
      <summary>
            Standard constructor.
            </summary>
    </member>
    <member name="F:devDept.Serialization.LabelSurrogate.Color">
      <summary>
            See <see cref="P:devDept.Eyeshot.Control.Labels.Label.Color" />.
            </summary>
    </member>
    <member name="F:devDept.Serialization.LabelSurrogate.AnchorPoint">
      <summary>
            See <see cref="P:devDept.Eyeshot.Control.Labels.Label.AnchorPoint" />.
            </summary>
    </member>
    <member name="F:devDept.Serialization.LabelSurrogate.Image">
      <summary>
            See <see cref="P:devDept.Eyeshot.Control.Labels.Label.Image" />.
            </summary>
      <remarks>Stored only for <see cref="T:devDept.Eyeshot.Control.Labels.ImageOnly" /> labels.</remarks>
    </member>
    <member name="F:devDept.Serialization.LabelSurrogate.Visible">
      <summary>
            See <see cref="P:devDept.Eyeshot.Control.Labels.Label.Visible" />.
            </summary>
    </member>
    <member name="F:devDept.Serialization.LabelSurrogate.LabelData">
      <summary>
            The <see cref="P:devDept.Eyeshot.Control.Labels.Label.LabelData" /> as <see cref="T:devDept.Serialization.ProtoObject" />.
            </summary>
      <remarks>ProtoBuf does not support serializing/deserializing object.</remarks>
      <seealso cref="T:devDept.Serialization.ProtoObject" />
    </member>
    <member name="F:devDept.Serialization.LabelSurrogate.Selectable">
      <summary>
            See <see cref="P:devDept.Eyeshot.Control.Labels.Label.Selectable" />.
            </summary>
    </member>
    <member name="F:devDept.Serialization.LabelSurrogate.Alignment">
      <summary>
            See <see cref="P:devDept.Eyeshot.Control.Labels.Label.Alignment" />.
            </summary>
    </member>
    <member name="F:devDept.Serialization.LabelSurrogate.Type">
      <summary>
            Gets the label type for logging purpose (Not supported label type, i.e. different Eyeshot editions).        
            </summary>
    </member>
    <member name="M:devDept.Serialization.LabelSurrogate.ConvertToObject">
      <summary>
            Creates the label related to the surrogate.
            </summary>
      <remarks>When this method is called, the <see cref="!:Content" /> field is already initialized.</remarks>
      <returns>The label created.</returns>
    </member>
    <member name="M:devDept.Serialization.LabelSurrogate.CopyDataToObject(devDept.Eyeshot.Control.Labels.Label)">
      <summary>
            Copies common data from surrogate to object when reading data.
            </summary>
      <remarks>
        <para>This method is called by <see cref="M:devDept.Serialization.LabelSurrogate.ConvertToObject" /> method after the creation of the object instance.</para>
        <para>When this method is called, the <see cref="!:Content" /> field is already initialized.</para>
      </remarks>
      <seealso cref="M:devDept.Serialization.LabelSurrogate.ConvertToObject" />
    </member>
    <member name="M:devDept.Serialization.LabelSurrogate.CopyDataFromObject(devDept.Eyeshot.Control.Labels.Label)">
      <summary>
            Copies all data from the object to its surrogate when writing data.
            </summary>
      <remarks>
        <para>Use this method to fill ALL the properties of this surrogate. It is called by the empty constructor to initialize the surrogates properties.</para>
        <para>Beware, when this method is called, both <see cref="P:devDept.Serialization.Surrogate`1.Version" /> and <see cref="!:Content" /> fields are not initialized yet.</para>
      </remarks>
      <seealso cref="M:devDept.Serialization.LabelSurrogate.BeforeSerialize(ProtoBuf.SerializationContext)" />
    </member>
    <member name="M:devDept.Serialization.LabelSurrogate.CheckSurrogateData(System.String)">
      <summary>
            Integrity check according to the <see cref="T:devDept.Serialization.contentType" />.
            </summary>
      <remarks>
        <para>Use this method to add check/warning messages to the <see cref="P:devDept.Serialization.Surrogate`1.Log" />.</para>
        <para>During the serialization process, it is called internally before serializing the surrogate.</para>
        <para>During the deserialization process, you can use it for your custom surrogate checks in <see cref="M:devDept.Serialization.LabelSurrogate.ConvertToObject" /> or in <see cref="M:devDept.Serialization.LabelSurrogate.CopyDataToObject(devDept.Eyeshot.Control.Labels.Label)" /> methods in conjunction with the <see cref="!:Content" />.</para>
      </remarks>
      <seealso cref="M:devDept.Serialization.Surrogate`1.WriteLog(System.String)" />.
            <seealso cref="M:devDept.Serialization.Surrogate`1.ConvertToObject" />.
            <seealso cref="M:devDept.Serialization.Surrogate`1.CopyDataToObject(`0)" />.
            <seealso cref="M:devDept.Serialization.Surrogate`1.CopyDataFromObject(`0)" />.  
            <seealso cref="M:devDept.Serialization.LabelSurrogate.BeforeSerialize(ProtoBuf.SerializationContext)" />.
            <seealso cref="T:devDept.Eyeshot.Translators.WriteFile" />.
            <seealso cref="T:devDept.Eyeshot.Translators.ReadFile" />.
        </member>
    <member name="M:devDept.Serialization.LabelSurrogate.op_Implicit(devDept.Serialization.LabelSurrogate)~devDept.Eyeshot.Control.Labels.Label">
      <summary>
            Converts the surrogate to the related object during the deserialization process.
            </summary>
    </member>
    <member name="M:devDept.Serialization.LabelSurrogate.op_Implicit(devDept.Eyeshot.Control.Labels.Label)~devDept.Serialization.LabelSurrogate">
      <summary>
            Converts the object to the related surrogate during the serialization process.
            </summary>
      <exception cref="T:devDept.EyeshotException">Thrown when the <see cref="M:devDept.Eyeshot.Control.Labels.Label.ConvertToSurrogate" /> method returns null value.</exception>
    </member>
    <member name="M:devDept.Serialization.LabelSurrogate.BeforeDeserialize(ProtoBuf.SerializationContext)">
      <summary>
            Called before the object deserialization.
            </summary>
      <param name="serializationContext">The serialization context</param>
      <remarks>
        <para>The override of this method must always call the base at the beginning.</para>
        <para>This method initializes the <see cref="!:Content" /> field when reading data.</para>
      </remarks>
      <exception cref="T:System.ArgumentException">Thrown when the serialization context is not a valid <see cref="T:devDept.Serialization.FileSerializer" /> object.</exception>
    </member>
    <member name="M:devDept.Serialization.LabelSurrogate.BeforeSerialize(ProtoBuf.SerializationContext)">
      <summary>
            Called before the object serialization.
            </summary>
      <param name="serializationContext">The serialization context</param>
      <remarks>
        <para>The override of this method must always call the base at the beginning.</para>
        <para>This method initializes the <see cref="!:Content" /> field when writing data.</para>
      </remarks>
      <exception cref="T:System.ArgumentException">Thrown when the serialization context is not a valid <see cref="T:devDept.Serialization.FileSerializer" /> object.</exception>
    </member>
    <member name="T:devDept.Serialization.LeaderAndImageSurrogate">
      <summary>
            Defines the <see cref="T:devDept.Eyeshot.Control.Labels.LeaderAndImage" /> surrogate.
            </summary>
    </member>
    <member name="M:devDept.Serialization.LeaderAndImageSurrogate.#ctor(devDept.Eyeshot.Control.Labels.LeaderAndImage)">
      <summary>
            Standard constructor.
            </summary>
    </member>
    <member name="F:devDept.Serialization.LeaderAndImageSurrogate.Offset">
      <summary>
            See <see cref="P:devDept.Eyeshot.Control.Labels.LeaderAndImage.Offset" />.
            </summary>
    </member>
    <member name="M:devDept.Serialization.LeaderAndImageSurrogate.ConvertToObject">
      <remarks>
             This method uses the <see cref="M:devDept.Eyeshot.Control.Labels.LeaderAndImage.#ctor(devDept.Geometry.Point3D,System.Drawing.Bitmap,System.Drawing.Color,System.Int32,System.Int32,devDept.Geometry.Vector2D)" /> constructor to create the object.
             </remarks>
    </member>
    <member name="T:devDept.Serialization.LeaderAndTextSurrogate">
      <summary>
            Defines the <see cref="T:devDept.Eyeshot.Control.Labels.LeaderAndText" /> surrogate.
            </summary>
    </member>
    <member name="M:devDept.Serialization.LeaderAndTextSurrogate.#ctor(devDept.Eyeshot.Control.Labels.LeaderAndText)">
      <summary>
            Standard constructor.
            </summary>
    </member>
    <member name="F:devDept.Serialization.LeaderAndTextSurrogate.Offset">
      <summary>
            See <see cref="P:devDept.Eyeshot.Control.Labels.LeaderAndText.Offset" />.
            </summary>
    </member>
    <member name="M:devDept.Serialization.LeaderAndTextSurrogate.ConvertToObject">
      <remarks>
             This method uses the <see cref="M:devDept.Eyeshot.Control.Labels.LeaderAndText.#ctor(devDept.Geometry.Point3D,System.String,System.Drawing.Font,System.Drawing.Color,devDept.Geometry.Vector2D)" /> constructor to create the object.
             </remarks>
    </member>
    <member name="T:devDept.Serialization.OutlinedTextSurrogate">
      <summary>
            Defines the <see cref="T:devDept.Eyeshot.Control.Labels.OutlinedText" /> surrogate.
            </summary>
    </member>
    <member name="M:devDept.Serialization.OutlinedTextSurrogate.#ctor(devDept.Eyeshot.Control.Labels.OutlinedText)">
      <summary>
            Standard constructor.
            </summary>
    </member>
    <member name="M:devDept.Serialization.OutlinedTextSurrogate.ConvertToObject">
      <remarks>
             This method uses the <see cref="M:devDept.Eyeshot.Control.Labels.OutlinedText.#ctor(devDept.Geometry.Point3D,System.String,System.Drawing.Font,System.Drawing.Color)" /> constructor to create the object.
             </remarks>
    </member>
    <member name="T:devDept.Serialization.TextOnlySurrogate">
      <summary>
            Defines the <see cref="T:devDept.Eyeshot.Control.Labels.TextOnly" /> surrogate.
            </summary>
    </member>
    <member name="M:devDept.Serialization.TextOnlySurrogate.#ctor(devDept.Eyeshot.Control.Labels.TextOnly)">
      <summary>
            Standard constructor.
            </summary>
    </member>
    <member name="F:devDept.Serialization.TextOnlySurrogate.Text">
      <summary>
            See <see cref="P:devDept.Eyeshot.Control.Labels.TextOnly.Text" />.
            </summary>
    </member>
    <member name="F:devDept.Serialization.TextOnlySurrogate.Font">
      <summary>
            See <see cref="P:devDept.Eyeshot.Control.Labels.TextOnly.Font" />.
            </summary>
    </member>
    <member name="F:devDept.Serialization.TextOnlySurrogate.Vertical">
      <summary>
            See <see cref="P:devDept.Eyeshot.Control.Labels.TextOnly.Vertical" />.
            </summary>
    </member>
    <member name="F:devDept.Serialization.TextOnlySurrogate.FillColor">
      <summary>
            See <see cref="P:devDept.Eyeshot.Control.Labels.TextOnly.FillColor" />.
            </summary>
    </member>
    <member name="F:devDept.Serialization.TextOnlySurrogate.ColorForSelection">
      <summary>
            See <see cref="P:devDept.Eyeshot.Control.Labels.TextOnly.ColorForSelection" />.
            </summary>
    </member>
    <member name="F:devDept.Serialization.TextOnlySurrogate.FillColorForSelection">
      <summary>
            See <see cref="P:devDept.Eyeshot.Control.Labels.TextOnly.FillColorForSelection" />.
            </summary>
    </member>
    <member name="F:devDept.Serialization.TextOnlySurrogate.CornerRadius">
      <summary>
            See <see cref="P:devDept.Eyeshot.Control.Labels.TextOnly.CornerRadius" />.
            </summary>
    </member>
    <member name="M:devDept.Serialization.TextOnlySurrogate.ConvertToObject">
      <remarks>
             This method uses the <see cref="M:devDept.Eyeshot.Control.Labels.TextOnly.#ctor(devDept.Geometry.Point3D,System.String,System.Drawing.Font,System.Drawing.Color)" /> constructor to create the object.
             </remarks>
    </member>
    <member name="T:devDept.Graphics.D3DRenderContext">
      <summary>
            Direct3D render context class.
            </summary>
    </member>
    <member name="M:devDept.Graphics.D3DRenderContext.DrawTriangles(devDept.Geometry.Point3D[])">
      <summary>
            Draws triangles without normals.
            </summary>
      <param name="vertices">The vertices</param>
    </member>
    <member name="M:devDept.Graphics.D3DRenderContext.ReadColorBuffer(devDept.Eyeshot.IViewport,System.Drawing.Rectangle,System.Int32@,System.Int32@)">
      <summary>
            Reads the color buffer.
            </summary>
      <param name="viewport">
      </param>
      <param name="rect">Rectangle to read, in screen coordinates.</param>
      <param name="stride">
      </param>
      <param name="bpp">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:devDept.Graphics.D3DRenderContext.ResolveMultisampleTexture(devDept.Graphics.TextureBase,devDept.Graphics.TextureBase)">
      <summary>
            Resolves a multisample texture on a single sample texture.
            </summary>
      <param name="multiSampleTexture">
      </param>
      <param name="singleSampleTexture">
      </param>
    </member>
    <member name="M:devDept.Graphics.D3DRenderContext.GetPixel(System.Int32,System.Int32)">
      <summary>
            Gets the color of the specified pixel in this viewport
            </summary>
      <param name="x">The x window coordinate of the pixel to retrieve</param>
      <param name="y">The y window coordinate of the pixel to retrieve (0 on bottom)</param>
      <returns>The color of the pixel</returns>
    </member>
    <member name="T:devDept.Graphics.DXUtils">
      <summary>
            Utility Class for <see cref="T:devDept.Graphics.D3DRenderContext" /> class.
            </summary>
    </member>
    <member name="M:devDept.Graphics.DXUtils.ConvertToFloatArray(System.Double[])">
      <summary>
            Converts the given array of doubles to an array of floats.
            </summary>
      <param name="array">The array of doubles</param>
      <returns>The array of floats.</returns>
    </member>
    <member name="M:devDept.Graphics.DXUtils.ConvertToDoubleArray(System.Single[])">
      <summary>
            Converts the given array of floats to an array of doubles.
            </summary>
      <param name="array">The array of doubles</param>
      <returns>The array of doubles.</returns>
    </member>
    <member name="T:devDept.Graphics.vertexBufferData">
      <summary>
            Class that holds the data for a portion of a vertex Buffer.
            </summary>
    </member>
    <member name="F:devDept.Graphics.vertexBufferData.nElementsPerChunk">
      <summary>
            Number of elements of each chunk.
            </summary>
    </member>
    <member name="F:devDept.Graphics.vertexBufferData.startVertex">
      <summary>
            Start vertex of first chunk (the others start necessarily from 0).
            </summary>
    </member>
    <member name="F:devDept.Graphics.vertexBufferData.firstChunk">
      <summary>
            First chunk index.
            </summary>
    </member>
    <member name="F:devDept.Graphics.vertexBufferData.lastChunk">
      <summary>
            Last chunk index.
            </summary>
    </member>
    <member name="T:devDept.Graphics.D3DRenderContextWF">
      <summary>
            Render context class that uses Direct3D in a WindowsForms control.
            </summary>
    </member>
    <member name="T:devDept.Graphics.D3DTextureBase">
      <summary>
            Base class for Direct3D textures.
            </summary>
    </member>
    <member name="M:devDept.Graphics.D3DTextureBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Constructor for deserializing objects.
            </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance that defines the serialized data.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> instance that contains the serialized data.</param>
    </member>
    <member name="T:devDept.Graphics.D3DTexture">
      <summary>
            Base class for Direct3D textures.
            </summary>
      <remarks>For internal use only.</remarks>
    </member>
    <member name="M:devDept.Graphics.D3DTexture.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Constructor for deserializing objects.
            </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance that defines the serialized data.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> instance that contains the serialized data.</param>
    </member>
    <member name="M:devDept.Graphics.D3DTexture.UpdateRegion(devDept.Graphics.RenderContextBase,System.Byte[],System.Int32,System.Int32)">
      <summary>
            Updates a region of a texture already loaded in memory.
            </summary>
      <param name="renderContext">The render context</param>
      <param name="bitmap">The region of the image to update</param>
      <param name="xOffset">The texel offset in the x direction (0,0 being the bottom-left corner)</param>
      <param name="yOffset">The texel offset in the y direction (0,0 being the bottom-left corner)</param>
    </member>
    <member name="T:devDept.Graphics.D3DTexture2D">
      <summary>
            2D color texture class for Direct3D.
            </summary>
    </member>
    <member name="M:devDept.Graphics.D3DTexture2D.#ctor(devDept.Graphics.RenderContextBase,System.Drawing.Bitmap,devDept.Graphics.textureFilteringFunctionType,devDept.Graphics.textureFilteringFunctionType,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Creates a 2D texture.
            </summary>
      <param name="renderContext">The render context</param>
      <param name="bmp">The image</param>
      <param name="minFunc">Minification function</param>
      <param name="magFunc">Magnification function</param>
      <param name="anisotropicFiltering">If true, enables anisotropic filtering for mipmapping</param>
      <param name="repeatX">If true, the texture is repeated in the X direction</param>
      <param name="repeatY">If true, the texture is repeated in the Y direction</param>
      <returns>
      </returns>
    </member>
    <member name="M:devDept.Graphics.D3DTexture2D.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Constructor for deserializing objects.
            </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance that defines the serialized data.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> instance that contains the serialized data.</param>
    </member>
    <member name="T:devDept.Graphics.D3DTextureDepth">
      <summary>
            Depth texture class for Direct3D.
            </summary>
    </member>
    <member name="T:devDept.Graphics.OglEntityGraphicsData">
      <summary>
            Class that holds the compiled graphics data.
            </summary>
    </member>
    <member name="M:devDept.Graphics.OglEntityGraphicsData.Dispose">
      <summary>
            Cleans up the graphics resources.
            </summary>
    </member>
    <member name="M:devDept.Graphics.OglEntityGraphicsData.IsValid">
      <summary>
            Tells if the graphics data has been compiled.
            </summary>
      <returns>True if the graphics data has been compiled.</returns>
    </member>
    <member name="T:devDept.Graphics.D3DEntityGraphicsData">
      <summary>
            Class that holds the compiled graphics data.
            </summary>
    </member>
    <member name="M:devDept.Graphics.D3DEntityGraphicsData.Dispose">
      <summary>
            Cleans up the graphics resources.
            </summary>
    </member>
    <member name="M:devDept.Graphics.D3DEntityGraphicsData.DrawBuffer(devDept.Graphics.RenderContextBase,System.Int32)">
      <summary>
            Draws the specified part of the entity buffer (Direct3D only).
            </summary>
      <param name="context">The render context</param>
      <param name="part">The part of the buffer to draw</param>
    </member>
    <member name="M:devDept.Graphics.D3DEntityGraphicsData.DrawBuffer(devDept.Graphics.RenderContextBase,System.Boolean)">
      <summary>
            Draws the current part of the entity buffer or the next one (Direct3D only).
            </summary>
      <param name="context">The render context</param>
      <param name="nextPart">If true, draws the next part of the buffer, else it draws the current one</param>
    </member>
    <member name="M:devDept.Graphics.D3DEntityGraphicsData.IsValid">
      <summary>
            Tells if the graphics data has been compiled.
            </summary>
      <returns>True if the graphics data has been compiled.</returns>
    </member>
    <member name="T:devDept.Graphics.RenderContext">
      <summary>
            Render context base class.
            </summary>
      <remarks>For internal use only.</remarks>
    </member>
    <member name="M:devDept.Graphics.RenderContext.ProcessClippingPlanesVisibility(devDept.Eyeshot.ClippingPlaneBase[],System.Boolean)">
      <summary>
            Updates only the visibility of the clipping planes internal structure.
            </summary>
      <param name="clippingPlanes">The clipping planes</param>
      <param name="updateGraphics">If true, updates the corresponding data on the graphics system</param>
    </member>
    <member name="M:devDept.Graphics.RenderContext.CreateTexture2D(System.Drawing.Image,devDept.Graphics.textureFilteringFunctionType,devDept.Graphics.textureFilteringFunctionType,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Creates a 2D texture from an image.
            </summary>
      <param name="image">The image</param>
      <param name="minFunc">Minification function</param>
      <param name="magFunc">Magnification function</param>
      <param name="anisotropicFiltering">If true, enables anisotropic filtering for mipmapping</param>
      <param name="enlargeIfSizeNotSupported">If true, the image is put in a bigger image (with some empty border, keeping the original size of image)         
            when the image is not power of two and the hardware does not support it. Else it is resized to a smaller power of two size.</param>
      <param name="repeatX">If true, the texture is repeated in the X direction</param>
      <param name="repeatY">If true, the texture is repeated in the Y direction</param>
      <returns>
      </returns>
    </member>
    <member name="M:devDept.Graphics.RenderContext.ReadSurface(System.Drawing.Size,System.Boolean,System.Boolean)">
      <summary>
            Reads the whole control and stores it in internal data.
            </summary>
      <param name="controlSize">The size of the control</param>
      <param name="backBuffer">If true, captures the backbuffer, else the front buffer</param>
      <param name="antialiasing">Tells if the antialiasing is enabled or not</param>
      <remarks>For internal use only.</remarks>
    </member>
    <member name="M:devDept.Graphics.RenderContext.BeginReadDepthValues(System.Drawing.Size,System.Int32@)">
      <summary>
            Initializes a depth read operation.
            </summary>
      <param name="size">The size of the area to read</param>
      <param name="strideInPixels">The number of pixels per row of the read area</param>
      <remarks>For internal use only.</remarks>
    </member>
    <member name="M:devDept.Graphics.RenderContext.DrawOnTextureOrBitmap(devDept.Graphics.TextureBase,devDept.Graphics.TextureBase,System.Drawing.Imaging.BitmapData,System.Int32,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,devDept.Graphics.RenderContextBase.drawSceneFuncDelegate,System.Object,System.Boolean,System.Int32,System.Boolean)">
      <summary>
            Draws the scene on the specified texture or bitmapData. 
            </summary>
      <param name="texture">The texture to draw on</param>
      <param name="bitmapData">The bitmap data. If null, the draw is done on the texture</param>
      <param name="strideInPixels">
      </param>
      <param name="antialiasingAvailable">
      </param>
      <param name="antiAliasing">
      </param>
      <param name="antialiasingSamples">
      </param>
      <param name="tileWidth">
      </param>
      <param name="tileHeight">
      </param>
      <param name="drawSceneFunc">The draw function delegate</param>
      <param name="drawSceneParams">The draw function parameters</param>
      <param name="hdwAcceleration">
      </param>
      <param name="bpp">Bytes per pixel</param>
    </member>
    <member name="M:devDept.Graphics.RenderContext.CompileBackground(devDept.Eyeshot.IBackgroundSettings,System.Int32)">
      <summary>
            Compiles the background, used by the designer.
            </summary>
    </member>
    <member name="M:devDept.Graphics.RenderContext.GetEntityIndicesFromBmp(System.Drawing.Rectangle,System.Boolean,System.Byte[],System.Int32,System.Int32)">
      <summary>
            Gets the entity indices from a false-colors rgb image.
            </summary>
      <param name="selectionBox">
      </param>
      <param name="firstOnly">
      </param>
      <param name="rgbValues">The false-colors rgb image</param>
      <param name="bpp">
      </param>
      <param name="stride">
      </param>
      <returns>The list indices</returns>
    </member>
    <member name="M:devDept.Graphics.RenderContext.MakeGrayscale(System.Byte[])">
      <summary>
            Converts an image to grayscale.
            </summary>
      <param name="imageBytes">The original bitmap</param>
      <returns>The grayscale bitmap.</returns>
    </member>
    <member name="M:devDept.Graphics.RenderContext.SetImageOpacity(System.Byte[],System.Single)">
      <summary>  
            Changes the opacity of an image.
            </summary>
      <param name="imageBytes">The original image</param>
      <param name="opacity">The opacity (range 0-1)</param>
      <returns>The new bitmap</returns>
    </member>
    <member name="M:devDept.Graphics.RenderContext.DrawTextureOnScreen(System.Drawing.Rectangle,devDept.Graphics.TextureBase,devDept.Graphics.TextureBase)">
      <summary>
            Draws a texture on screen.
            </summary>
      <param name="rect">The screen rectangle where the texture will be drawn</param>
      <param name="textureForRendering">The texture</param>
      <param name="textureResolved">A texture used to resolve multisample textures</param>
    </member>
    <!-- Badly formed XML comment ignored for member "M:devDept.Graphics.RenderContext.EnableAlphaClip(System.Boolean)" -->
    <!-- Badly formed XML comment ignored for member "P:devDept.Graphics.RenderContext.wpfNative" -->
    <member name="T:devDept.Graphics.RenderContextUtility">
      <summary>
            Class that provide utility methods for the render context.
            </summary>
    </member>
    <member name="M:devDept.Graphics.RenderContextUtility.ConvertColor(System.Drawing.Color)">
      <summary>
            Method unified between WinForms and WPF that converts a <see cref="T:System.Drawing.Color" /> or <see cref="T:System.Windows.Media.Brush" /> to a <see cref="T:System.Drawing.Color" />.
            </summary>
      <param name="color">The color (WinForms) or brush (WPF)</param>
      <returns>The converted <see cref="T:System.Drawing.Color" />.</returns>
    </member>
    <member name="M:devDept.Graphics.RenderContextUtility.AreEqual(System.Drawing.Color,System.Drawing.Color)">
      <summary>
            Method unified between WinForms and WPF that checks the equality between a <see cref="T:System.Drawing.Color" /> (WinForms) or <see cref="T:System.Windows.Media.Brush" /> (WPF) object and another <see cref="T:System.Drawing.Color" /> object.
            </summary>
      <param name="color1">The first color (WinForms) or brush (WPF) object</param>
      <param name="color2">The second color</param>
      <returns>True if they are equal, false elsewise.</returns>
    </member>
    <member name="M:devDept.Graphics.RenderContextUtility.ConvertColorTable(System.Drawing.Color[])">
      <summary>
            Method unified between WinForms and WPF that converts a <see cref="T:System.Drawing.Color" /> array (WinForms) or <see cref="T:System.Windows.Media.Brush" /> array (WPF) to a <see cref="T:System.Drawing.Color" /> array.
            </summary>
      <param name="colorTable">The color array (WinForms) or brush array (WPF)</param>
      <returns>The converted <see cref="T:System.Drawing.Color" /> array.</returns>
    </member>
    <member name="M:devDept.Graphics.RenderContextUtility.ConvertImage(System.Drawing.Image)">
      <summary>
            Method unified between WinForms and WPF that converts a <see cref="T:System.Drawing.Image" /> or <see cref="T:System.Windows.Media.ImageSource" /> to a <see cref="T:System.Drawing.Image" />.
            </summary>
      <param name="image">The image</param>
      <returns>The converted <see cref="T:System.Drawing.Image" />.</returns>
    </member>
    <member name="M:devDept.Graphics.RenderContextUtility.ConvertImage(System.Drawing.Bitmap)">
      <summary>
            Method unified between WinForms and WPF that converts a <see cref="T:System.Drawing.Bitmap" /> (WinForms) or <see cref="T:System.Windows.Media.Imaging.BitmapImage" /> (WPF) to a <see cref="T:System.Drawing.Bitmap" />.        
            </summary>
      <param name="bitmapImage">The image</param>
      <returns>The converted <see cref="T:System.Drawing.Bitmap" />.</returns>
    </member>
    <member name="T:devDept.Graphics.OGLEntityBuffer">
      <summary>
            OpenGL VBO buffer class.
            </summary>
    </member>
    <member name="F:devDept.Graphics.OGLEntityBuffer.vertexBuffer">
      <summary>
            OpenGL VBO buffers.
            </summary>
    </member>
    <member name="F:devDept.Graphics.OGLEntityBuffer.colorBuffer">
      <summary>
            OpenGL VBO buffers.
            </summary>
    </member>
    <member name="F:devDept.Graphics.OGLEntityBuffer.indexBuffer">
      <summary>
            OpenGL VBO buffers.
            </summary>
    </member>
    <member name="T:devDept.Graphics.OglRenderContext">
      <summary>
            OpenGL render context class.
            </summary>
    </member>
    <member name="M:devDept.Graphics.OglRenderContext.DrawTriangles(devDept.Geometry.Point3D[])">
      <summary>
            Draws triangles without normals.
            </summary>
      <param name="vertices">The vertices</param>
    </member>
    <member name="P:devDept.Graphics.OglRenderContext.gl">
      <summary>
            Gets the instance to the OpenGL class.
            </summary>
    </member>
    <member name="M:devDept.Graphics.OglRenderContext.OpenglSetup(devDept.Graphics.ControlData)">
      <summary>
            OpenGL initialization. Lighting, shading, texture names, materials, quadric, are all defined here.
            </summary>
    </member>
    <member name="M:devDept.Graphics.OglRenderContext.ReadBuffer(System.Int32)">
      <summary>
            Sets the framebuffer to read from (OpenGL only).
            </summary>
      <param name="buffer">
      </param>
    </member>
    <member name="M:devDept.Graphics.OglRenderContext.GenListName(System.UInt32@)">
      <summary>
            Generates an OpenGL display list name after deleting it if necessary.
            </summary>
      <param name="listName">
      </param>
    </member>
    <member name="M:devDept.Graphics.OglRenderContext.GenTextureName(System.UInt32@)">
      <summary>
            Generates a texture name after deleting it if necessary.
            </summary>
      <param name="texName">The texture name</param>
    </member>
    <member name="M:devDept.Graphics.OglRenderContext.DelTexture(System.UInt32@)">
      <summary>
            Deletes a texture and reset the name to zero.
            </summary>
      <param name="texName">The texture name</param>
    </member>
    <member name="P:devDept.Graphics.OglRenderContext.OpenglVendor">
      <summary>
            Gets the company responsible for this GL implementation. This name does not change from release to release.
            </summary>
    </member>
    <member name="P:devDept.Graphics.OglRenderContext.RendererVersion">
      <summary>
            Gets Graphics API version.
            </summary>
    </member>
    <member name="P:devDept.Graphics.OglRenderContext.ShadingLanguageVersion">
      <summary>
            Gets OpenGL Shading Language version.
            </summary>
    </member>
    <member name="P:devDept.Graphics.OglRenderContext.OpenglExtensions">
      <summary>
            Gets a space-separated list of supported extensions to OpenGL.
            </summary>
    </member>
    <member name="M:devDept.Graphics.OglRenderContext.EnableAlphaClip(System.Boolean)">
      <summary>
            Discards fragments with alpha &lt; 0.1
            </summary>
      <param name="enable">
      </param>
    </member>
    <member name="M:devDept.Graphics.OglRenderContext.GetPixel(System.Int32,System.Int32)">
      <summary>
            Gets the color of the specified pixel in this viewport
            </summary>
      <param name="x">The x window coordinate of the pixel to retrieve</param>
      <param name="y">The y window coordinate of the pixel to retrieve (0 on bottom)</param>
      <returns>The color of the pixel</returns>
    </member>
    <member name="T:devDept.Graphics.ExtensionMethodsGL">
      <summary>
            Extension methods class for drawing points in OpenGL.
            </summary>
      <remarks>For internal use only.</remarks>
    </member>
    <member name="M:devDept.Graphics.ExtensionMethodsGL.DrawGL(devDept.Geometry.Point2D)">
      <summary>
            Calls glVertex2d(X, Y)
            </summary>
    </member>
    <member name="M:devDept.Graphics.ExtensionMethodsGL.DrawGL(devDept.Geometry.Point3D)">
      <summary>
            Calls glVertex3d(X, Y, Z).
            </summary>
    </member>
    <member name="M:devDept.Graphics.ExtensionMethodsGL.DrawGL(devDept.Geometry.PointRGB)">
      <summary>
            Calls gl.Color3ub(R, G, B) and glVertex3d(X, Y, Z).
            </summary>
    </member>
    <member name="M:devDept.Graphics.ExtensionMethodsGL.DrawGL(devDept.Geometry.PointWithDisplacement,System.Double)">
      <summary>
            Calls gl.Vertex3d(X+UX, Y+UY, Z+UZ).
            </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:devDept.Graphics.ExtensionMethodsGL.DrawGL(devDept.Geometry.Vector3D)">
      <summary>
            Calls gl.Normal3d(X, Y, Z)
            </summary>
    </member>
    <member name="M:devDept.Graphics.ExtensionMethodsGL.DrawGL(devDept.Geometry.PointNormalUv,System.Drawing.Color[])">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="M:devDept.Graphics.ExtensionMethodsGL.DrawInvGL(devDept.Geometry.PointNormalUv,System.Drawing.Color[])">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="M:devDept.Graphics.ExtensionMethodsGL.DrawGL(devDept.Geometry.PointNormalUv)">
      <summary>
            Calls glNormal3d(Nx, Ny, Nz) and glVertex3d(X, Y, Z) 
            </summary>
    </member>
    <member name="M:devDept.Graphics.ExtensionMethodsGL.DrawInvGL(devDept.Geometry.PointNormalUv)">
      <summary>
            Calls glNormal3d(-Nx, -Ny, -Nz) and glVertex3d(X, Y, Z) 
            </summary>
    </member>
    <member name="T:devDept.Graphics.GLShader">
      <summary>
            Base shader class.
            </summary>
    </member>
    <member name="M:devDept.Graphics.GLShader.#ctor">
      <summary>
            Standard constructor.
            </summary>
      <param name="type">The shader type</param>
    </member>
    <member name="M:devDept.Graphics.GLShader.#ctor(System.String,System.String)">
      <summary>
            Constructor with shader source code.
            </summary>
      <param name="type">The shader type</param>
      <param name="vertexCode">Vertex program source code.</param>
      <param name="fragmentCode">Fragment program source code.</param>
    </member>
    <member name="M:devDept.Graphics.GLShader.ComposeStrings(devDept.Graphics.realisticShadowQualityType,devDept.Eyeshot.Control.BackgroundSettings,devDept.Eyeshot.LightSettings[])">
      <summary>
            Method used internally to compose the shader code.
            </summary>
      <param name="shadowQuality">The shadow quality</param>
      <param name="background">The background</param>
      <param name="activeLights">Active activeLights</param>
    </member>
    <member name="M:devDept.Graphics.GLShader.Compile(devDept.Graphics.RenderContextBase)">
      <summary>
            Compiles the shader.
            </summary>
      <returns>True if successful, false otherwise.</returns>
    </member>
    <member name="P:devDept.Graphics.GLShader.Enabled">
      <summary>
            Gets the shader's enabled status.
            </summary>
    </member>
    <member name="M:devDept.Graphics.GLShader.Enable(devDept.Graphics.RenderContextBase)">
      <summary>
            Enables the shader.
            </summary>
      <param name="renderContext">The render context</param>
      <returns>True if the shader has been enabled, false if it was already enabled.</returns>
    </member>
    <member name="M:devDept.Graphics.GLShader.Disable(devDept.Graphics.RenderContextBase)">
      <summary>
            Disables the shader.
            </summary>
    </member>
    <member name="M:devDept.Graphics.GLShader.GetAttribLocation(System.String)">
      <summary>
            Gets the location of an attribute shader variable.
            </summary>
      <param name="name">the attribute variable name</param>
      <returns>The location of the attribute variable.</returns>
    </member>
    <member name="M:devDept.Graphics.GLShader.GetAttribLocation(System.UInt32,System.String)">
      <summary>
            Gets the location of an attribute shader variable.
            </summary>
      <param name="shaderProgram">The shader program ID</param>
      <param name="name">The  variable name</param>
      <returns>True if successful, false otherwise.</returns>
    </member>
    <member name="M:devDept.Graphics.GLShader.GetUniformLocation(System.String)">
      <summary>
            Gets the location of a uniform shader variable.
            </summary>
      <param name="uniformName">the uniform variable name</param>
      <returns>The location of the uniform variable.</returns>
    </member>
    <member name="M:devDept.Graphics.GLShader.GetUniformLocation(System.UInt32,System.String)">
      <summary>
            Gets the location of a uniform shader variable.
            </summary>
      <param name="shaderProgram">The shader program ID</param>
      <param name="uniformName">The uniform variable name</param>
      <returns>True if successful, false otherwise.</returns>
    </member>
    <member name="P:devDept.Graphics.GLShader.IsCompiled">
      <summary>
            Returns true if the shader program was successfully compiled.
            </summary>
    </member>
    <member name="M:devDept.Graphics.GLShader.SetParameters(System.Object)">
      <summary>
            Sets the shader parameters.
            </summary>
      <param name="shaderParams">the object containing the shader parameters</param>
    </member>
    <member name="T:devDept.Graphics.OGLTextureBase">
      <summary>
            Base utility class to load textures. 
            </summary>
    </member>
    <member name="M:devDept.Graphics.OGLTextureBase.LockBitmapBits(System.Drawing.Bitmap,System.Int32@,System.Int32@)">
      <summary>
            Locks the bitmap into system memory.
            </summary>
      <param name="bmp">The bitmap</param>
      <param name="internalFormat">The internal format</param>
      <param name="format">The format</param>
      <returns>The bitmap data</returns>
    </member>
    <member name="M:devDept.Graphics.OGLTextureBase.UpdateRegion(devDept.Graphics.RenderContextBase,System.Byte[],System.Int32,System.Int32)">
      <summary>
            Updates a region of a texture already loaded in memory.
            </summary>
      <param name="renderContext">The render context</param>
      <param name="bitmap">The region of the image to update</param>
      <param name="xOffset">The texel offset in the x direction (0,0 being the bottom-left corner)</param>
      <param name="yOffset">The texel offset in the y direction (0,0 being the bottom-left corner)</param>
    </member>
    <member name="T:devDept.Graphics.OGLTexture">
      <summary>
            Base class to load 2D textures. 
            </summary>
    </member>
    <member name="M:devDept.Graphics.OGLTexture.#ctor(devDept.Graphics.RenderContextBase,System.UInt32,System.UInt32,System.Boolean,devDept.Graphics.textureFilteringFunctionType,devDept.Graphics.textureFilteringFunctionType)">
      <summary>
            Create a texture for rendering.
            </summary>
      <param name="context">The rendering context</param>
      <param name="width">The texture width</param>
      <param name="height">The texture height</param>
      <param name="depthTexture">if true creates a depth texture</param>
      <param name="minFilterFunc">The minification filter function</param>
      <param name="magFilterFunc">The magnification filter function</param>
    </member>
    <member name="M:devDept.Graphics.OGLTexture.Load(devDept.Graphics.RenderContextBase,System.Byte[],devDept.Graphics.textureFilteringFunctionType,devDept.Graphics.textureFilteringFunctionType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Loads a bitmap in the graphics memory.
            </summary>
      <param name="renderContext">
      </param>
      <param name="bitmap">
      </param>
      <param name="minFunc">
      </param>
      <param name="magFunc">
      </param>
      <param name="anisotropicFiltering">
      </param>
      <param name="repeatX">
      </param>
      <param name="repeatY">
      </param>
      <param name="checkPowerOfTwo">if true, checks that the texture is power of two and resizes it if it's not. </param>
      <param name="enlargeIfSizeNotSupported">If true, the image is put in a bigger image (with some empty border, keeping the originla size of image) 
            when the image is not power of two and the hardware does not support it. Else it is resized to a smaller power of two size.</param>
    </member>
    <member name="M:devDept.Graphics.OGLTexture.Load(devDept.Graphics.RenderContextBase,System.Drawing.Bitmap,devDept.Graphics.textureFilteringFunctionType,devDept.Graphics.textureFilteringFunctionType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Loads a bitmap in the graphics memory.
            </summary>
      <param name="renderContext">
      </param>
      <param name="bitmap">
      </param>
      <param name="minFunc">
      </param>
      <param name="magFunc">
      </param>
      <param name="anisotropicFiltering">
      </param>
      <param name="repeatX">
      </param>
      <param name="repeatY">
      </param>
      <param name="checkPowerOfTwo">if true, checks that the texture is power of two and resizes it if it's not. </param>
      <param name="enlargeIfSizeNotSupported">If true, the image is put in a bigger image (with some empty border, keeping the originla size of image) 
            when the image is not power of two and the hardware does not support it. Else it is resized to a smaller power of two size.</param>
    </member>
    <member name="T:devDept.Graphics.OGLTexture1D">
      <summary>
            Base class to load 1D textures.
            </summary>
    </member>
    <member name="T:devDept.Graphics.Texture">
      <summary>
            Base utility class to load textures. 
            </summary>
    </member>
    <member name="M:devDept.Graphics.Texture.Load(devDept.Graphics.RenderContextBase,System.Drawing.Bitmap,devDept.Graphics.textureFilteringFunctionType,devDept.Graphics.textureFilteringFunctionType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Loads the texture
            </summary>
      <param name="renderContext">The render context</param>
      <param name="bitmap">The image</param>
      <param name="minFunc">Minifying function</param>
      <param name="magFunc">Magnifying function</param>
      <param name="anisotropicFiltering">If true, enables anisotropic filtering for mipmapping</param>
      <param name="repeatX">If true, the texture is repeated in the X direction</param>
      <param name="repeatY">If true, the texture is repeated in the Y direction</param>
      <param name="checkPowerOfTwo">If true, checks that the image size is power of two</param>
      <param name="enlargeIfSizeNotSupported">If true, the image is put in a bigger image (with some empty border, keeping the originla size of image) 
            when the image is not power of two and the hardware does not support it. Else it is resized to a smaller power of two size.</param>
    </member>
    <member name="M:devDept.Graphics.Texture.Load(devDept.Graphics.RenderContextBase,System.IDisposable,devDept.Graphics.textureFilteringFunctionType,devDept.Graphics.textureFilteringFunctionType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Loads the texture
            </summary>
      <param name="renderContext">The render context</param>
      <param name="bitmap">The image</param>
      <param name="minFunc">Minifying function</param>
      <param name="magFunc">Magnifying function</param>
      <param name="anisotropicFiltering">If true, enables anisotropic filtering for mipmapping</param>
      <param name="repeatX">If true, the texture is repeated in the X direction</param>
      <param name="repeatY">If true, the texture is repeated in the Y direction</param>
      <param name="checkPowerOfTwo">If true, checks that the image size is power of two</param>
      <param name="enlargeIfSizeNotSupported">If true, the image is put in a bigger image (with some empty border, keeping the originla size of image) 
            when the image is not power of two and the hardware does not support it. Else it is resized to a smaller power of two size.</param>
    </member>
    <member name="M:devDept.Graphics.Texture.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Constructor for deserializing objects.
            </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance that defines the serialized data.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> instance that contains the serialized data.</param>
    </member>
    <member name="M:devDept.Graphics.Texture.BitmapFromColors(System.Drawing.Color[])">
      <summary>
            Returns a bitmap with a single row of pixels of the specified color array.
            </summary>
      <param name="colorTable">The color array</param>
      <returns>The resulting Bitmap.</returns>
    </member>
    <member name="T:devDept.Graphics.TextureMosaic">
      <summary>
            Single Texture that holds more images.
            </summary>
    </member>
    <member name="M:devDept.Graphics.TextureMosaic.#ctor(devDept.Graphics.RenderContextBase,System.Int32,System.Int32,System.Drawing.Bitmap[])">
      <summary>
            Create a single texture from a list of images, organized in a grid of rows by columns, and computes the texture coordinates of each image.
            </summary>
      <param name="context">The rendering context</param>
      <param name="nRows">Number of rows</param>
      <param name="nColumns">Number of columns</param>
      <param name="images">List of images</param>
    </member>
    <member name="T:devDept.Graphics.ZBuffer">
      <summary>
            Class that holds ZBuffer related data.
            </summary>
      <remarks>For internal use only.</remarks>
    </member>
    <member name="M:devDept.Graphics.ZBuffer.ReadPickBoxZRange(devDept.Graphics.RenderContextBase,System.Drawing.Point,System.Int32,System.Double@,System.Double@)">
      <summary>
            Reads the depth values inside a pick box area and returns the minimum and maximum depths.
            </summary>
      <param name="renderContext">The render context</param>
      <param name="cameraScreenPos">The center of the pick box area in camera screen coordinates (0 on bottom left).</param>
      <param name="pickBoxSizeInPixels">The size in pixels of the pick box</param>
      <param name="min">The minimum depth value</param>
      <param name="max">The maximum depth value</param>
      <returns>
      </returns>
    </member>
    <member name="M:devDept.Graphics.ZBuffer.CaptureBackbuffer(devDept.Graphics.RenderContextBase,devDept.Eyeshot.IViewport,System.Int32,System.String,System.Boolean,System.Object,System.Boolean,System.Double[],System.Drawing.Rectangle,System.Boolean,System.Int32@,System.Int32@,System.Boolean)">
      <summary>
            Captures the Back buffer image
            </summary>
      <param name="renderContext">The render context</param>
      <param name="viewport">The viewport</param>
      <param name="viewportId">The viewport id</param>
      <param name="workspaceId">The Workspace control instance Id</param>
      <param name="keepData">
      </param>
      <param name="idItemsMap">The map from ids to items</param>
      <param name="selectableOnly">Tells if the image captured for the selection included only the selectable entities</param>
      <param name="modelViewProjectionMatrix">
      </param>
      <param name="rect">The rectangle in screen coordinates</param>
      <param name="leafSelection">If true, the image was captured with the leafSelection set to true</param>
      <param name="stride">
      </param>
      <param name="bpp">
      </param>
      <param name="innerImage">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:devDept.Graphics.OGLEnvironment">
      <summary>Environment mapping data class.</summary>
    </member>
    <member name="M:devDept.Graphics.OGLEnvironment.Disable(devDept.Graphics.RenderContextBase)">
      <summary>
            Disables the Environment mapping.
            </summary>
    </member>
    <member name="T:OpenGL.gl">
      <summary>
            Wrapper class  with all OpenGL methods and definitions.
            </summary>
    </member>
  </members>
</doc>